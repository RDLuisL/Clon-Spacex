%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Sport shoes and sneakers set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 4/1/2019
%%BoundingBox: 0 0 1935 1180
%%HiResBoundingBox: 0 0 1934.9996 1180
%%CropBox: 0 0 1934.9996 1180
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Sport shoes and sneakers set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Sport shoes and sneakers set. Modern sportswear collection. Can be used for topics like fitness, fashion, activity</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>sport</rdf:li>
               <rdf:li>clothing</rdf:li>
               <rdf:li>shoe</rdf:li>
               <rdf:li>object</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>color</rdf:li>
               <rdf:li>activity</rdf:li>
               <rdf:li>lace</rdf:li>
               <rdf:li>active</rdf:li>
               <rdf:li>sneaker</rdf:li>
               <rdf:li>rubber</rdf:li>
               <rdf:li>trainer</rdf:li>
               <rdf:li>boot</rdf:li>
               <rdf:li>training</rdf:li>
               <rdf:li>shoelace</rdf:li>
               <rdf:li>stylish</rdf:li>
               <rdf:li>footwear</rdf:li>
               <rdf:li>sportswear</rdf:li>
               <rdf:li>sneakers</rdf:li>
               <rdf:li>exercise</rdf:li>
               <rdf:li>workout</rdf:li>
               <rdf:li>gym</rdf:li>
               <rdf:li>fashion</rdf:li>
               <rdf:li>athletic</rdf:li>
               <rdf:li>fitness</rdf:li>
               <rdf:li>marathon</rdf:li>
               <rdf:li>running</rdf:li>
               <rdf:li>jogging</rdf:li>
               <rdf:li>outdoor</rdf:li>
               <rdf:li>health</rdf:li>
               <rdf:li>exercising</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-04-01T00:40:35+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-04-01T00:40:35+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-04-01T00:40:35+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYqlPmzzHb+W/L93rVzE88NoELRR05NzkWMUrt1fLcOIzlwhEjQtR8redfLfmi19fR7xJnChp&#xA;rViFniqafvIq8hv36HschKBjzUG08yKXYq7FXYq7FXYqkXnPznovlDRxqurGQwvKlvFFCoaR5Hqa&#xA;LyKKKIrMeTDYeNBkZzERbXkyCAso7RNd0vW9PS/0ydbi2fYkbFWG5R1O6sK9Dgx5IzFxNhGDPDLH&#xA;igbCPyba7FXYq7FXYq7FWE+bvzi8k+U9ah0jWJ5kupOJkaKIyJEr0o0lDypQ1+EHMzDoMmSPFEbN&#xA;fiDioMyt7i3ubeK5tpUmt5kWSGaNg6OjiqsrCoIINQRmIRWxbFTArsVdirsVdiqmlzbvK8SSo0sf&#xA;95GGBZenUDcdcaRapil2KuxV2KuxV2KrZZY4o3llYJHGpZ3Y0AUCpJPtir51uf8AnJvzbH54Fsvl&#xA;2CPyp6vELcM0OptBUj1+LyKFqPiCGL25d8txYjMWCK94Wfp5rPzW/PS31vRLnStKtGh02Tibie4p&#xA;6snEq6qqLyCfGOvI126bjM/BjhiPETxS8uTTKRls+cdI8/8AmDyx56t/MulzcbyzdeUZJ9OWLq8E&#xA;gBFY3Gx+8b75hZTZZh+hflzXrLX9DsdYswy299BHcJHIOMiCVA/Fx2YVykhkDaZYEuxV2KofUdRs&#xA;tNsLjUL6UQWdpG01xM3RUQcmP3DEmkE08e8s/wDOUflPVdaaw1Gwl0mzeTha6i8iypQmitOAq+kD&#xA;7FgO5pvlYyd4ahm33FMf/P78xvLnmW3sPKvl+6h1J4rkXl5fRMHt4uEboqrIPhckSknifbuaV6jM&#xA;ICz0aNZqRijxHp9vcGE+S/zO1Tyt5giu7X49LLLHe229ZoRsTuaBh1Q02+ROa7Sx8I338+50vZ+M&#xA;4DxWbPMdPwH11aXUF3aw3Vu3OCdFkifpVXFVO/sc3L0wNi1XFLsVdiryn8zfz8sfI3mmHQG0iTU3&#xA;kt47iWWKcRsjSOyiPgUbkeK8vtdxmXg0hyRu6ZiFi1TW/wDnInyNpmk290omuNRuIllOl8eEsLMF&#xA;b05m3VGAbtXcZfi7LyzO+w73FOa9oDi+75/qt8v+efN135p8x3mvXi8HuCOMYNQqKKKo+QzosWOO&#xA;HGB0DPFjPXmXpP8Azj/+aWs+Xkl0/XA7eTWJMN3J0tJmap9Kpq6PuXRa0PxDcty0euw8Z4x9Ts8X&#xA;Z+TKLgLp9U5p3AdirsVYv+Y3mm48t+WptQtlDT14xk0NCR1396ZPHDiNNGoymEbDwC7/ADk/MW5S&#xA;WP8ASzQxyihWKOJSB/kvxMi/MNmaMEe51Z1eQ9WP6H5n1rRNbTWrG4YX6sWd5CXEgb7ayVPxBu/9&#xA;cslEEUWqGSUZWOb6Q/Lz80tO830szbyWurQwetcxGhiNGCkxNyLUqwNGH39c104UXcYNQJ7dWb5B&#xA;yHYq7FXYq7FWD/mx5y0/y55fLXknGKaonCMRL6ZoilArIx/eunKh+zXMfMSahH6i244/xHkHyBe+&#xA;cX1LVptQvYmEs/EbSSSiNFAHFPVZ2C1+I/F1P0Zs8OMY40HHySMjbeqt9b09Ra1maV0VFjBYsSdg&#xA;AN6+2WnkwDMPIv5Cx6fE/mvzrbSXfF+dj5fgXm8jM1IxNTbqRVfsr+0f2cwskqs823DDxZiAIj5n&#xA;YB9Aflja+ZJ76fWtRIS2uojDHBC4NrCkL0SGBA1WZWL85GG52XbfKYRlzlzP2OXqcuOhjxD93H+I&#xA;/VI957h3D9L0bJuK7FXYq8R/5yN822M/luXytbMZr67uI7f0YphHIJQVlVmjNPUgoGVmrxD7HcbY&#xA;08vq/ox5sckoxiZS5B4Hc+U9X0OILd2zKp3NwvxRsfZxUZgnUxyHYvPHXQzysH4IjQPLeseYL9bH&#xA;S7ZriY7ueiIv8zsdlH+YyzHjlI0GQeteXvJflrymourox6vrsYDGZx/oluw3/dg/aYH9o/RxzZ4d&#xA;NGG53k2xg9R/LLWdb1S3u57iFm0liGsr2T4PUc/bESU3j6HlsK9K70nPm7LS3XkzfIOU7FXYq+dv&#xA;zO0XTdX81alLYLGnmSVlS9u/VuecMCKBEPTeERryhC1CPv13FSdt2RkntM34W9bR/Xf2OXp9BLUy&#xA;4Ryj38vx3PK7/wDL25guJI/riGQGtOBA33G9f4ZuzrBfJ2E+w5D+IX7ki8v6XZXErajrHJNItSQI&#xA;hVXuJR/upPYftnt9IzG1Ooso7K7P8SVy+kc/1J9bWPmLzrqaw2UPpWcZWNAoKwQqxoiLQHduiqoL&#xA;MdgD0zU5s4juXqc2fHghueGP2n3Pr7yNp+qad5YsbDUpXmltY1iikl/vjGihVMtCfi2O3UCgJLVJ&#xA;1t3u8HqZxnkMoigeifYtDsVYl+Z1nY33ls2V5XhJJzHBgHXgrHkAaBqGnwnrXxyE5mNEIljjMES5&#xA;PmiHTkupgscMk0lDyjiUk07H4a5ncZdEI2r3mhahZQo72TxF6KjbPVidh8PIg+xyJLLhIei+RNEb&#xA;ylA2s3jiPU2UtLyPwQQAcmR+3Jv2vDp1rmp1OtPEIwd/oez6jxT5n7HtHl/WYNb0Sy1e3Ro4L6FZ&#xA;40fZgriormZE2GJFFMMKHYq7FUHrGr6fo+lXWqahKILKzjaaeQ9lUdAO5PQDudsBNM8eMzkIjmXx&#xA;f+Yvn2Dzb5tu7q9kL6fbSypYxh2liapCNLH8KlVdIkKrv88v02OhxS+o/Z5Mc2S/SPpDFZYNJu5E&#xA;hsRJ9ZlYJFHGjPyZjQKF61J6UzJNND3f8tvy203ybbQalrkRuvM12QtvZRI87Q8gTwVIwzc+IJYg&#xA;bCvQVJx5zaySdg9c0Xyjf30keoeZVRQAGi0VSksS/CR+/biA5HLZF+AEVq3aolthjrmzJVVVCqAq&#xA;qKKo2AA7DItreKuxVjf5h+bYfKvlW+1Uywx3KRSCzW4YqjzLGzqlQG3PGijuaDvleSVChzKQ+b/K&#xA;Fwdb1GXzDfXP1jUnMyadp7T8p7K2eV5BHH6gAk/vSPi2C7ew0uuyH6B9PU95eU7c1cpnwxtAdeh/&#xA;sZzpekm7d2LG2soz/pUvEx078PSYNFI7fzLlej0RzH+iOZ/U6nS6Q5T/AEe/9SvdajZ6eI9G0KzM&#xA;RumJjsLNAbi5em7OEArtuxPwgddhnTwhGEaHJ6bFioABlXlj8q3naPUPNvGYgq8GiRnlbxkb/wCk&#xA;MP79v8n7HX7exyMp9zsMWnA3k9KAAFB0yDlOxV2Ksf8AOerwWOmNC4VzcKyNExIDKQRxJXccjt8q&#xA;98MYylIRjzJ/tczRaY5cgDyQ3OkWzSW8c8X1yUktHyUSEttUj7WdFGEhEXyD12KUIkQBiK6bMQ83&#xA;X9pp05ml/eXEiqLe0FeUj9Kmm4Qd+56DuRVlnTlHHxS8kP5N/KzzJ5zvpLzUI+MEJ4+kGSOKJ6tS&#xA;KUA8o6EHkiIW8QvINmsy6npHfz/HN1ms7Wx4RwY9z9n7T9j6R8r+RdA8uQRR2UXN4RSKRwvwVFG4&#xA;KoVVLftNTk37THMTrZ5vK59TPLK5GyyHFodirsVebfm3qUhtzYQGskyi1QgHaS4PxBiA23p/EQw3&#xA;AqDVcqriyAd27DNKsZ89mKafp9rYWqW1uvFF6n9pm7sx7k5mutATkJbafbNPdMqSqObvIQFhVd6k&#xA;nYNt1/Z+fTU6zV36Iu70GiAHHP4Iby75auvPc6XV2klt5LiYMqmqSak6nbwZbcEderdvaOm0tblv&#xA;1GovYPYYIIbeCOCBFighURxRIAqqiiiqoHQAZsHCX4q7FXYq+Qvzn/PWbXdSvtC4fVtJsbiSD6k7&#xA;L+9eBynqTUqW3FQnQe53zYYJY8cbIuXm1myw3y1+XPnPza63Fpp4sdOPXULpPqtuF61QEepJ7cVP&#xA;zyE81liSA9z/ACz/ACp07SZfU0FRqOqIxjuvM10o9GCq/EtpEpPxCvQGvUM69Mx5TQAZe57F5f8A&#xA;KWlaKWnjBudSlXjcalPxadxt8NQAFTYfCoA79d8rJbYxATrAydirsVQuqapY6Vp8+oX8ohtLZecs&#xA;hBNBWg2FSSSaADBKQAssZzERZ5Plr84PzB1jzZqIjt5ntvLqqsa6XyBMjLJzWWYCo5VC7A7U+ZOv&#xA;lqRI7B1c9eZAgCkL5W/LG9nCajr5fTdPX40gPwXMoHgrf3S/5bfQDl2HSGW8tg4whb1LR9M1zzOk&#xA;dvoSCy0WBeC6tMrPCoG1LdGIa4fxctx61YnbNgOGAqIcvBptthUXpXlbyXofluFxYxtLeT/71ajc&#xA;ESXMx/y3oKL4IoCjsMrJt2MMYjyT3AzdirsVSbzf5u0TynoNxresTCG0gFFWo5ySH7McYJFWan0C&#xA;pNACctw4jklwj+z3q+KvP359+ZvMet3EunyMGuXEVvDFWkcYb93DGVCyP167VJ6b5tZa3FgiIYhx&#xA;y6yPK/Ifj4uRiz5Ix4YkgHuWeVvyy8weZb23m8yyejAZAItM5emzud+EhWrBj/vpA0x6cV2OYup1&#xA;OTJRzHbpEfq/SXZ4OyxCIyag8EOg/il7h+kvpXyP+UA+sw61rIlgn9JFigbik6qKUVeHL6sqr8IC&#xA;N6n+Um65hZcsp7HaPd+tjr+15ZfRAcGMdP1nr9z1e1tLW0t0trWFLe3jFI4YlCIorXZVoBkHTWq4&#xA;q7FXYqp3NzBbQSXE7iOGJSzuewGKCa3eAfmrrEl1LDqcMrRSeq3pKQqSoCpChXjoSvHqD3PXfJY8&#xA;ZBJLgarNxAUs8nwX9jpx8w69evHbhDJbQzOxAQ/7ucMTt/IO/Xwri6zU16I/UXM7O0hl+8n9LIfL&#xA;PlDUvPVxFq2txyWflJGElnpr/DLf0NVln7rF0IX9r8cp0+m4dzzc/PqL2HJ7HHHHFGscahI0AVEU&#xA;AKFAoAAOgGZziLsVdirsVdirE5/yu8ltq0+sQaVaQ6rcuZZbs28buZXcu8nIjnyYtv8AFT2yQkwl&#xA;C0TH5JsZJfU1GeW+QV42ppHbgbbMibuPFXYqa/ZwEojjAZDHHHGgSNQiLsqqAAB7AYGxdirsVdir&#xA;sVS7zDolnrmjXOl3ic7e5C805FK8GDqOS7j4lHTBKIkKPJry4+OJi8w0vynq9vctB5f8qQ6a8Tsh&#xA;1K+dTxIO5R2MszA9ii098nCGOH0h1sNJLuZRpf5X2TyC68y3J1q5qGNqwKWanY7xVYy06fvGIP8A&#xA;KMMpkudj00Y892boiIioihUUAKoFAANgABkHIbxV2KuxV2KvFP8AnJD8oPNv5iHy+NGu0jsdPef6&#xA;/bSMaj1AnGZE2WRlCMtKg77dTizxgE7mgk/5f/8AOOOn6NwdIWlnIpNf3IaLrsyhf3dww/yVEII6&#xA;u2SGUj6RXmdz+ofa7eGvxacfuY+v+dLc/AfSP9k9q8veVNJ0KILaIWlClPVc/ZVjyZY1HwxoW3Ko&#xA;BXataDIVvfV1ebPPLLimbKc4Wl2KuxV2KuxV5f8Aml51+r6gmg28ck9woRzbRgkySOKp0BqoHbx7&#xA;bA5ZAdXC1OXfhDA5rK101k13zhKrzqf9B0lKOA/7KlBXm3+R0/mPUZhZ9Xfpx8+9ytL2fXry/JnP&#xA;lXyDqnmC7h13zlCYbSNhLp3l19wDsVlvP5n8IyKDv3GRwacR3PNzMue9hyepgACg2A6DMtxnYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWGeefK3mjUb&#xA;mK58tz2FrO6GO8lvI3LlR9ko8e591bbKM2Ez67NuLII70L70N5N/KjT9GvxrWs3Ta55h/YvJ1CxQ&#xA;e1vFuE/1vupvkseIRGyJ5DLmzzLWt2KuxV2KuxV2KuxV2KuxV2Ksf80+efL3liWyi1WWRHvjJ6Qi&#xA;jaUrHAnOWVwtSI413Y4aVP1ZWUMpDKwqrDcEHuMCt4q7FXYq7FXYq7FXYq7FXYq7FXYq7FUFfa3o&#xA;1hMkN9fQWssg5Ik0iIStaV+Ijau1ciZgcy3Y9PkmLjEkeQRuSaXYq7FXYq7FXYq7FVokjMjRhgZF&#xA;ALICKgNWhI96HFaXYq7FXYq7FXYq7FXYqluv+ZdA8vWS3ut38On2rOIklnbiGdqkKPE0BOKoyyvb&#xA;O+tIryynjubWdQ8M8TB0dT0KstQRir5o/wCcgtbvLnz+1gZ2MGlwxrBGKAI08aySEU3qwK1rmbp4&#xA;Ax3CQ9C/JL81bfWbK28saoRFqtnEI7KXotxFEtAN/wDdiqN/Eb+OV58PDuOSkPW8xkOxV2KpF558&#xA;1w+U/Kmoa/LbyXn1NUEVpF9uWaaRYYYxsacpJFFaGmKvKNF/Nf8ANKY+vqMGmxmUVFksEoWENQhT&#xA;IZ+TsB12pnL6z2i8OZjGI273f6bsXjiJSPNfqX5l+d0uFnF9HF8QP1WOGP0qDqvxBpKHv8dfCma2&#xA;PtBqJysUB3V+C5x7HwRj1JZx5E/M+18wz/o3UIkstXC1jVWJinAFWMXLcMP5CSab1O9Ol7P7UjqN&#xA;j6Z/e6PW9nSw+obx+5nObV1zsVdiqXeYfMOj+XdIn1fWLkWthbCsspDMdzQAKgZmPsBkZzERZbsG&#xA;nnmlwwFy/VuXeX/MWi+YdLi1TRrtL2wmrwmSo3HVWVgrKw7hgDhBthkxmEjE8w8N/wCcmfOt95W8&#xA;y+WJNCvZLPWL2C7jvBHRle1RozEJo3DI68zJSq+OERFr4suHhvYG/iifya/PzRDplv5e80zCwu4C&#xA;Us9QkJMEiMxKxuxr6XAHiC3w8R1GIhQoJzZjklxHmef6/jzPm92t7m3uYhNbypNE32ZI2DqfkRUY&#xA;21qmKuxV2KuxV2Kvi382vzG1DQPzSvvM/lXU2S8S/aKF1bnDcW8cMccySLXjJF6sfEfetKA5h4pE&#xA;5ZVy/S9Fr8UY6DDxbZOKVD+ief219r6T/Jr829K/Mnyyb+FBa6tZlYtWsK19ORhVXTuY5KHiT4Ed&#xA;szHnWf4q7FXYq7FXYq7FXy5/zlZ5nju/NemeXEr/ALi7U3Ugrs0l21Bt/kJCP+C++/BASO6oLyRq&#xA;/nvypoptbLXHtrRqzGxEMMiIzCrUaVHZa9+NN8zDgiejKmIareXmp6tNcTO9zdXEnxOxLvI529yS&#xA;Tk9ojyV6R5D/AC/k06aPVtUAF4nxW1sDX0j/ADsR+14Dt8+mg13aXF6MfLvbIxey/l/5wOtXmraW&#xA;XM7aOLdXuSaktN6lUJ/aKeluffHS5JSjuxyRpmWZLW7FWM/mRBHN5Qu/UQyrG8D+kql+RWdOPwgG&#xA;vFqMPAiua7tXDPJp5Rgal76+Dm9n5YwzAyG3zfNnnXzzNoNvHFp3pSXDFg6Sq4MVaFVIPDfrsPDN&#xA;Jp/ZqMqOUm/L9btc3bZG0B8/1PNZvOfmzUr2MfXnEsjhY0SiLVjQDYdPnm5j2VpcUD6NgOu7rZdo&#xA;Z8kh6ntHlHy9qWq6nDMZXhgsCjT30fwN6iUakRHRy24p9nrnMaTCZT4o+mINvRajKIw4ZbyIe9+X&#xA;PNllqd5PpLSctTs4kmmFNmjdiivUCgPJSCPu9uw0uo8Qb8w8rqMHAfIsgzKcd2KvNv8AnIm+srL8&#xA;pNZmulL/ABWyQou7F3uI12FRX4S1adq5XlxcceFzez9adLmGQDioEV7wQ+X/AC9pl1byRa3oWpX+&#xA;n3k8Cr60MzQkK4BYAIUNGp/NmZHEKcGeQmRJ6u1rSfMmp3f13U7+TUboII/rV3JJLLwUkheb8zxB&#xA;J2rj4RY8SrpHli3sjHqOtgS21a29ijENOwP7RI+GMdz36eOajtDWHH6IH19fL9rvexexcutnttAc&#xA;yeT3/wDKzzP9b1vTbfT4mWO+glkvLYUpDbwBlWRgNqetwRD3Dbd81XZIyRzEX6ev472faWh8KMuK&#xA;vTLhBHU9a+Hyey50jonYqo3t5a2NnPe3cghtbWN5riZvspHGpZ2PsFFcVfHXmz/nIPzV5j1PUIGn&#xA;kt/L00pbTtOhCRuAgKxpLIo5v6nVgXKhu1AKUajFKcaiadv2NrsOmy8eWHiCtvI/Hb9TAbz80/zO&#xA;+pPGuv3cNkylX05ZpPSCMfiUgsa1r8VcY6cAVZ+ZY5u15zycYhjj5CEf1Ww6KDV9cvlCK9xPIyxr&#xA;QbCpoqKqj7lUfIZMCOMUHHlLNqpmUjZ7+QA+4B9Jf84+eRPMHkbVT5j1O6Gn2l1bvHcWUgDNPGrV&#xA;KuOXGF4yAyg1bqNgSMlCMibOwcPVarT4xwQvJO95dB7u99TowdFYVowBFRQ7+xySG8VdirsVdirs&#xA;VfD+sanF51/OPWtZV0ns2vX9CaNSEe1tAIoH+Lf4444w2Z2mjtaQyLzFqIgtzBGf3sm23bMpkzv8&#xA;vfy1/RWjnX9XipqcoU2lu43gjYgcmB/3YwP0D3zm+0dfxngh9PXz/Y2Riq6xrGqalqQ8seVozda3&#xA;PtPKu0dtGKBnkfotK9e3+tQZg4MBkWew3L1j8vvIun+TtCXT7dvXu5m9W/vCKNLKRT6EXoq9vmST&#xA;t4QERTjzlxG2TZNi7FWE/mtrp0nQ45ORWMM0s3xSRh0RCvpepHujMzgqTtVcpzb+nvbcW2/c+KfN&#xA;WuPrGtXN0HlaBpG9EzP6knGuxd+5plsBQYSNlkH5W/lxqXm7VRPza00exkVru9FOXIfEIoa7GQ/c&#xA;o3PYGnU5YxiQerbgxmUtuj6E1TXTYXNv5b8u2S3etTjjZaelQqA7madh9iNa8mZt27dyNLhwkkRi&#xA;KiHaZcoAsndnP5d/l/F5Vtbm5urk3/mDVOD6tfnZWZAQkUK0HGKOtFH9gG7w4RAUHU5cpmbZflzU&#xA;7FXg/wDzkxrWqS3fl/QdMuIVihkbUtWhlFWKj91bcab95TQ9wDlmOJu2Mi80hVYoRy27sfnmU1p7&#xA;5a8uvq3K9uwY9KiNFG4ad/5FP8o/aP0demp7U7SGCNR+s/Y5On0/Gd+Sa3PlEecddh0zRYOd1ZKq&#xA;Xt4drK1iBqqzUHxv/JEhBPeigkc7odPlykk8jvb12m7RlosBiTUZ8oj6j8f4R58/5ve9w8meSNI8&#xA;qWDQ2YM97ccTf6jKB6s7IKLWmyIlaJGvwqPcknpMOCOONReY1WrnmlcuQ5DoB5fjdkOXOK7FXzn/&#xA;AM5O/m3qWn3a+SdDlWMSQF9fYgN6kVwhVbSvVQ0bcnI3oVoeuAhlGVEHm+ZLpeUzPCPTsHUFFkPM&#xA;gjZ1JNPstXrggCBubbdRPHKdwjwx7rv3/DuT3yV5F1nzzqjiPlBpcP728uuJIEZahcgUJFf2Rufb&#xA;chsk0GB4YQ48n09B1kfL9JfR3lD8udA8sBNP0ixbUNa4FGlAUzcQecVxFIfghjqRyqRU9Sx6zjjE&#xA;d+rrM2ty6j0R9MP5o5f53efMvVtC8nLbzfX9WdLu/LiVIkBFvDIAPiRTTm9R9th8gu9SZW24NKIb&#xA;ncsmyLlOxV2KuxV2Ksd8++Z4PL3ly5ui5F5MrQ2EaU5tM4IUj2T7RPtlmLHxGlD42s/K/mHy+Hub&#xA;S6ijL1DO5DSPU9D8BqenTNjGHCGVPY/yu/LG/iZPMvnHh6qASWVk4AEYHxetNWgB7hT06n20PaPa&#xA;V+jGfef1NkY97Lry91zzxJLpHlNhb6XHII9S8xyAmNafajtV2MknvWg8RVScHTaQy3PJnKQj72e+&#xA;UPJWgeU9Paz0mEq0pDXV3Iec87j9qV6CvU0AoBXYDNrGIiKDRKRPNPckxdirsVfPP5uec9K1/wAx&#xA;totlKz2kQe0uriH1I+bR8uUXMMA6cmb9mlV2NDmq7SyZMeM5IVtXy/H2Ox0MITmIS62wHQfyh0jX&#xA;r4wWwmgs4qG6vOdQinsvIEFj+yP4VzWaXtPUzO9V12dlqOz8EI9b6bvTIZntnt/If5e2iSX9unGe&#xA;4be3sUJ+Oa5cD45Sd+PUnt+zmwjCWaVlwDKOONB6j5F8g6X5TspPTdrzV7yj6pq01TNcSe5JPFB+&#xA;yo6fPfNpjxCA2ddkyGRZPljB2KobVNTsNK0641HUJ1trK1QyzzOaKqr/AJ7Dvir4g8/ecpPM3nvU&#xA;fM8KfVzcMsdsCByW3iUJGrfMLyYeJyyOyCzzyX5WuddiTUdVb6vpMChp5Ps82AqyofDxb+OY2v7Q&#xA;GGND6/ubMGnMy9C0PQtT87cV0tm0fyjb/ul1KNQss6rsUsVII4/zTkUrsoY1K6TTdnyzS8TL8ncT&#xA;yw0woVLJ3dI+/vPly7/Lrmi6HpOh6bDpmk2qWllAKRwpXr3ZmNWdmO7MxJJ3Jrm/jEAUHT5MkpyM&#xA;pGyUdhYOxVTuLiOCMu/yVR1J8BkZzERZSIkvln86vyb/ADD8y+Y9S82WUWnEyMD9Xhldbp4IlEca&#xA;n1FSFn9NRWrdehptmHDUjiJJNOfl4ZY4wjACUecrNy/RXw+LzvyD+U+s+ZokutSc6doCSMxuLgce&#xA;cnAMVp2FEA32B67ji2aLly+br8uWGH695fzf+K7h5cz5c30z5M8ksdPtrXRYDo+gw0eK5kWtw6yo&#xA;BKsQNQ6tSolkFOnEMOkxURQdeceTPLjyH8eQ6PR9H0XTdItBa2EIiStXY1Z3b+Z3PxMfn0Gw2yNu&#xA;dCAiKCOxZOxV2KuxV2KpR5s8wR+XvLt7rEkRnFqqlYgacndxGgJ7Dk4qfDJ44cRpXzjqnmjzV5x1&#xA;nksTXt+Rxit7dSViQnoASVRfFmPzOZ5lDDGyaDMBlGj+XdD8qTwX3mOX9KeZpCDp+kWymd0c/Z9O&#xA;Mbs/+URQfs5odXr55/Tj2j97bGHUsus/JnmrzfKlz5rJ0jQQyvFoEDn1pl6/6TKtOI6fCN/9QjI4&#xA;NGI7lEsoHJ6TZWNnYWkVnZQJbWsChIYIlCoqjsFG2ZzQrYq7FXYq8x/Onz7faLZR6Do/NNU1KMvP&#xA;dKCPQtiShKudg8hBUHqtCdjxOYup1WPEPUa+/wCDkYNPPIfSLeTeUvIFze0vrt/qumopL3TfCCg+&#xA;0IQ1K+7nYfgdFnzz1W304vtP4+Xvd3hww02/1ZPsDNNGXUvNIGh+RV/R/l62cx3/AJlK1XkKc1ta&#xA;09aY95Og/wCBzO02k2qqDg6jVb2dy9a8qeUdC8raUum6Pb+lFXlNM3xTTSHrJLJ1dj4/dtm3hARF&#xA;B1kpGRspzkmLsVdir5I/NT8yvNn5ga3NoGk2s66NbTFYdPhRmkmKMQs09BX3C/ZX574mcYiydl4T&#xA;dIfy/wDlfp+lzW9x5wlZ7uUg2fluyBnvJ26hWWKrfQv/AAQzW5u0DI8OIWe92Gm7OnMcR9MO87D5&#xA;/oFl7joP5d6jrZt7nzXAlhotuQbLyrEQysF+w186fC/j6K/B/MW3XHT6Gjx5N5NuXWQxgww/GXX/&#xA;ADe4fb9z01EREVEUKigBVAoABsAAM2Tqm8VdirsVY553h1z9HJd6TPHE9qS1yksLzF4TTlwCSRUZ&#xA;aV3qMpy4BkremQz+GCeHi/HuLCv8Ka9rsnp3sd1qUAZgy6hWzsijLVeUCqruQelVkHyyUNNjj5uM&#xA;dXqJ/SPD+/8AHupmGkeRLO3eO41WX9JXSBQqMgS3XgKKRFvzYD9pyfEccuMmOLSxjudyyjIuS7FX&#xA;Yq7FXYq7FXYqo3lnbXltJbXMaywyCjIwDA0NRsdtiK4JCxSQWJx+QdQDGEawtjpxqTbaVaR2jnwr&#xA;K7XBHvxAPyzE/Jgm5Ey97Z4vcE80Pyp5f0Pm2m2aQzy19a6YtJcSVIJ9SaQtI246FsyowEeTWZE8&#xA;02ySHYq7FXYq7FWC/mP5du7mS21fS/L8fmDU41EBt5LhIAsalnVgJj6LfExrUV8MwNXoxkkJVZDm&#xA;6XVnGDG6BY1Zflb5w803Udx57u47HRkIZfLmnuT6lOguZx1Gw2Wo8OOHFpK3KMmpvk9X0/T7HTrK&#xA;GxsYEtrO3UJDBEoVFUdgBmaBTiE2iMKHYq7FXYqxGT8sPLhlf0Jr2zs3cyNp9rdSQwAsasqBCHjU&#xA;n9mNlA7UzFlosRlZDnDtHKBXpPmYgn5kJt5f8n+WfL4k/RGnxW0sv99c7yTyCtaSTyF5X3/mY5fD&#xA;HGIoCmjPqcmU3ORknGTaHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0896019BFD53E911B1FFE95781F30BEA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0896019BFD53E911B1FFE95781F30BEA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:76e8ee82-da5e-c240-9f67-416a39756edd</stRef:instanceID>
            <stRef:documentID>xmp.did:599afd4d-5a79-ea48-9869-6e2a89abcb2c</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4d62de80-7a1c-ee41-9dab-18093d44cc4e</stEvt:instanceID>
                  <stEvt:when>2019-02-08T14:45:59+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d1e848cb-3e11-ed42-8d0c-04ac577b97b5</stEvt:instanceID>
                  <stEvt:when>2019-02-11T17:58:34+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:599afd4d-5a79-ea48-9869-6e2a89abcb2c</stEvt:instanceID>
                  <stEvt:when>2019-02-11T22:41:12+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:76e8ee82-da5e-c240-9f67-416a39756edd</stEvt:instanceID>
                  <stEvt:when>2019-03-05T20:22:34+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0896019BFD53E911B1FFE95781F30BEA</stEvt:instanceID>
                  <stEvt:when>2019-04-01T00:40:35+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1935.000000</stDim:w>
            <stDim:h>1180.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1180 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1180 li
1935 1180 li
1935 0 li
cp
clp
1935 1180 mo
0 1180 li
0 0 li
1935 0 li
1935 1180 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1823.2 342 mo
1823.2 342 1825.81 359.928 1814.12 370.344 cv
1802.43 380.761 1736.02 445.384 1736.02 445.384 cv
1736.02 445.384 1620.4 551.341 1590.97 567.812 cv
1561.54 584.282 1547.51 580.035 1545.41 576.6 cv
1544.13 574.504 1540.55 569.225 1537.75 564.576 cv
1535.97 561.629 1534.51 558.933 1534.15 557.475 cv
1533.58 555.187 1534.23 553.68 1534.59 552.771 cv
1534.81 552.18 1534.73 551.773 1534.73 551.773 cv
1534.73 551.773 1529.45 540.761 1531.71 529.642 cv
1531.74 529.442 1531.79 529.246 1531.83 529.049 cv
1533.81 520.308 1558.95 489.113 1572.84 470.22 cv
1576.94 464.636 1580.05 460.131 1581.3 457.592 cv
1582.41 455.339 1583.95 450.659 1585.77 444.409 cv
1588.46 435.185 1591.76 422.539 1595.2 409.234 cv
1600.97 386.908 1607.15 362.728 1611.46 349.72 cv
1615.86 336.446 1615 322.472 1613.1 311.967 cv
1611.27 301.883 1609.36 294.946 1609.36 294.946 cv
1608.76 289.531 1611.48 283.575 1617.45 278.029 cv
1629.34 266.96 1650.6 257.723 1666.46 258.634 cv
1690.27 260.002 1715.37 245.768 1715.37 245.768 cv
1715.37 245.768 1741.59 261.802 1752.6 266.449 cv
1763.62 271.096 1793.96 312.027 1793.96 312.027 cv
1809.93 328.403 li
1823.2 342 li
.584314 .72549 .729412 rgb
f
1608.89 296.122 mo
1605.87 279.633 1614.93 263.304 1630.53 257.162 cv
1639.72 253.543 1671.23 256.256 1677.3 262.324 cv
1690.12 275.145 1618.09 375.144 1618.09 375.144 cv
1604.38 374.115 li
1604.38 374.115 1610.81 357.118 1613.73 340.378 cv
1615.3 331.374 1611.85 312.315 1608.89 296.122 cv
cp
f
1793.96 312.027 mo
1809.93 328.403 li
1768.31 365.508 li
1768.31 365.508 1724.41 357.989 1733.77 339.287 cv
1743.13 320.586 1730.49 323.082 1708.04 318.991 cv
1685.59 314.899 1630.69 333.824 1620.45 357.324 cv
1618.21 362.449 1620.5 321.799 1619.61 296.175 cv
1619.12 282.213 1627.24 269.292 1640.15 263.968 cv
1649.03 260.31 1658.43 258.173 1666.46 258.634 cv
1681.34 259.489 1698.81 247.956 1709.82 239.187 cv
1715.81 234.42 1724.56 235.521 1729.07 241.696 cv
1736.13 251.341 1746.09 263.701 1752.6 266.449 cv
1763.62 271.096 1793.96 312.027 1793.96 312.027 cv
.180392 .415686 .486275 rgb
f
1712.8 332.7 mo
1709.4 332.7 1706.65 329.944 1706.65 326.545 cv
1706.65 323.144 1709.4 320.388 1712.8 320.388 cv
1716.2 320.388 1718.96 323.144 1718.96 326.545 cv
1718.96 329.944 1716.2 332.7 1712.8 332.7 cv
1684.8 337.534 mo
1681.4 337.534 1678.65 334.778 1678.65 331.377 cv
1678.65 327.977 1681.4 325.222 1684.8 325.222 cv
1688.2 325.222 1690.96 327.977 1690.96 331.377 cv
1690.96 334.778 1688.2 337.534 1684.8 337.534 cv
1656.97 343.523 mo
1653.57 343.523 1650.81 340.767 1650.81 337.367 cv
1650.81 333.967 1653.57 331.211 1656.97 331.211 cv
1660.37 331.211 1663.13 333.967 1663.13 337.367 cv
1663.13 340.767 1660.37 343.523 1656.97 343.523 cv
1787.88 283.9 mo
1786.7 279.089 1780.96 277.09 1777.05 280.131 cv
1750.44 300.824 li
1657.21 321.953 li
1654.78 316.291 1650.96 311.529 1646.38 308.35 cv
1641.86 305.211 1626.44 308.367 1613.1 311.967 cv
1615 322.472 1615.86 336.446 1611.46 349.72 cv
1602.92 375.468 1586.76 446.508 1581.3 457.592 cv
1575.69 468.987 1533.91 518.112 1531.71 529.642 cv
1529.45 540.761 1534.73 551.773 1534.73 551.773 cv
1534.73 551.773 1534.91 552.186 1534.68 552.777 cv
1534.33 553.686 1534.72 554.629 1535.29 556.918 cv
1535.65 558.376 1537.29 560.877 1539.07 563.824 cv
1579.22 552.609 li
1694.62 456.943 li
1694.62 456.943 1687.18 443.726 1676.75 438.921 cv
1666.32 434.117 1636.5 434.125 1620.68 433.216 cv
1617.54 433.036 1614.4 431.522 1611.38 429.221 cv
1620.32 418.532 1624.94 396.192 1632.43 385.503 cv
1635.5 381.123 1640.1 374.985 1644.67 368.378 cv
1656.72 361.143 1676.18 351.704 1701.54 346.904 cv
1746.04 338.485 1745.97 385.421 1745.97 385.421 cv
1797.37 322.658 li
1793.96 312.027 li
1787.88 283.9 li
.27451 .486275 .47451 rgb
f
1607.55 473.246 mo
1598.82 489.819 1582.11 501.224 1556.64 518.622 cv
1542.62 528.201 1535.38 529.976 1531.71 529.643 cv
1531.74 529.442 1531.79 529.246 1531.83 529.049 cv
1534.39 517.727 1575.82 468.743 1581.3 457.592 cv
1582.41 455.339 1583.95 450.659 1585.77 444.409 cv
1591.23 446.833 1615.3 458.52 1607.55 473.246 cv
cp
.584314 .72549 .729412 rgb
f
1592.82 423.484 mo
1592.82 423.484 1589.2 421.955 1588.5 423.212 cv
1583.35 432.452 1593.47 439.704 1599.47 442.024 cv
1601.5 442.81 1603.53 443.599 1604.37 443.937 cv
1606.32 444.716 1606.49 440.754 1605.34 436.563 cv
1604.2 432.371 1592.82 423.484 1592.82 423.484 cv
cp
.956863 .827451 .690196 rgb
f
1585.31 440.794 mo
1584.2 440.466 1583.34 442.556 1582.92 443.324 cv
1579.79 448.937 1582.09 451.191 1582.09 451.191 cv
1588.5 457.263 1585.34 456.558 1598.12 461.687 cv
1600.07 462.466 1600.24 458.504 1599.09 454.313 cv
1598.15 450.844 1587.91 441.557 1585.31 440.794 cv
cp
f
1596.56 403.979 mo
1596.56 403.979 1594.79 404.182 1594.09 405.439 cv
1589.82 413.099 1596.04 418.053 1595.96 417.941 cv
1600.42 422.951 1604.69 424.047 1609.96 426.164 cv
1611.91 426.944 1612.08 422.981 1610.93 418.79 cv
1609.79 414.599 1596.56 403.979 1596.56 403.979 cv
cp
f
1601.14 386.347 mo
1601.14 386.347 1599.79 386.968 1599.09 388.225 cv
1594.82 395.885 1601.03 400.839 1600.95 400.727 cv
1605.42 405.736 1609.68 406.833 1614.96 408.95 cv
1616.9 409.729 1617.07 405.767 1615.93 401.576 cv
1614.78 397.384 1601.14 386.347 1601.14 386.347 cv
cp
f
1605.64 370.514 mo
1605.64 370.514 1604.29 371.135 1603.59 372.392 cv
1600.46 378.004 1603.43 382.621 1603.43 382.621 cv
1605.45 384.894 li
1607.94 387.689 1611.06 389.853 1614.56 391.205 cv
1616.59 391.99 1618.62 392.779 1619.46 393.117 cv
1621.4 393.896 1621.57 389.934 1620.43 385.743 cv
1619.28 381.551 1605.64 370.514 1605.64 370.514 cv
cp
f
1609.97 354.158 mo
1609.97 354.158 1608.62 354.778 1607.92 356.036 cv
1604.79 361.648 1607.76 366.265 1607.76 366.265 cv
1609.78 368.538 li
1612.28 371.333 1615.4 373.497 1618.89 374.848 cv
1620.92 375.633 1622.95 376.422 1623.79 376.76 cv
1625.74 377.54 1625.91 373.578 1624.76 369.386 cv
1623.62 365.195 1609.97 354.158 1609.97 354.158 cv
cp
f
1614.31 338.439 mo
1614.31 338.439 1612.95 339.06 1612.25 340.317 cv
1609.13 345.93 1612.09 350.546 1612.09 350.546 cv
1614.12 352.819 li
1616.61 355.615 1619.73 357.779 1623.22 359.13 cv
1625.25 359.915 1627.28 360.704 1628.12 361.042 cv
1630.07 361.822 1630.24 357.859 1629.1 353.668 cv
1627.95 349.477 1614.31 338.439 1614.31 338.439 cv
cp
f
1612.34 314.98 mo
1612.34 314.98 1610.9 315.504 1610.3 316.866 cv
1607.59 322.949 1611.63 328.773 1611.63 328.773 cv
1614.26 331.725 li
1617.5 335.355 1621.35 338.341 1625.51 340.436 cv
1627.92 341.652 1630.34 342.874 1631.34 343.393 cv
1633.66 344.591 1633.26 339.994 1631.35 334.936 cv
1629.43 329.877 1612.34 314.98 1612.34 314.98 cv
cp
f
1750.1 300.082 mo
1721.23 306.25 1685.87 314.348 1657.21 321.953 cv
1696.5 314.543 1736.76 304.802 1750.8 301.558 cv
1750.91 301.467 1767.08 288.574 1777.05 280.131 cv
1772.47 283.395 1761.47 291.47 1750.1 300.082 cv
cp
.207843 .356863 .352941 rgb
f
1705.28 345.604 mo
1670.73 350.556 1644.52 367.448 1644.01 367.655 cv
1639.54 373.846 1631.19 385.354 1630.02 387.479 cv
1620.86 405.947 1618.51 418.982 1610.72 428.665 cv
1610.15 429.373 li
1617.95 434.843 1617.8 434.015 1633.51 434.51 cv
1672.27 435.772 1681.89 436.266 1694.62 456.942 cv
1686.05 442.011 1676.97 437.504 1668.19 436.069 cv
1653.42 433.142 1623.18 432.971 1619.26 432.184 cv
1616.88 431.723 1614.58 430.462 1612.61 429.042 cv
1620.42 418.916 1624.42 402.463 1630.68 390.33 cv
1633.11 386.195 1631.31 388.706 1645.33 369.104 cv
1668.86 354.979 1715.75 335.773 1734.88 355.75 cv
1742.04 363.388 1745.61 375.42 1745.97 385.421 cv
1745.68 360.635 1731.61 342.368 1705.28 345.604 cv
cp
f
1823.2 342 mo
1823.2 342 1825.81 359.928 1814.12 370.344 cv
1802.43 380.761 1736.02 445.384 1736.02 445.384 cv
1736.02 445.384 1620.4 551.341 1590.97 567.812 cv
1561.54 584.282 1547.51 580.035 1545.41 576.6 cv
1543.59 573.625 1537.14 564.227 1534.87 559.352 cv
1534.52 558.609 1534.27 557.972 1534.15 557.475 cv
1533.58 555.187 1533.54 553.887 1534.73 551.773 cv
1541.06 552.11 1559.14 549.639 1602.84 515.284 cv
1660.1 470.272 1701.23 410.953 1728.03 383.687 cv
1754.83 356.425 1777.62 336.835 1793.96 312.027 cv
1798.45 316.637 li
1823.2 342 li
cp
.976471 .921569 .862745 rgb
f
1823.2 342 mo
1823.2 342 1825.81 359.928 1814.12 370.344 cv
1802.43 380.761 1736.02 445.384 1736.02 445.384 cv
1736.02 445.384 1620.4 551.341 1590.97 567.812 cv
1561.54 584.282 1547.51 580.035 1545.41 576.6 cv
1544.5 575.118 1542.45 572.041 1540.33 568.72 cv
1538.2 565.381 1536.01 561.795 1534.87 559.352 cv
1539.56 559.063 1547.39 556.974 1560.42 550.443 cv
1590.08 535.58 1651.42 485.725 1675.61 454.035 cv
1699.81 422.341 1747.91 370.3 1768.6 351.863 cv
1784.29 337.873 1794.32 325.472 1798.45 316.637 cv
1819.73 338.439 li
1823.2 342 li
cp
.886275 .713726 .52549 rgb
f
1823.2 342 mo
1823.2 342 1825.81 359.928 1814.12 370.344 cv
1802.43 380.761 1736.02 445.384 1736.02 445.384 cv
1736.02 445.384 1620.4 551.341 1590.97 567.812 cv
1561.54 584.282 1547.51 580.035 1545.41 576.6 cv
1544.5 575.118 1542.45 572.041 1540.33 568.72 cv
1547.03 569.295 1557.6 568.851 1570.65 563.682 cv
1593.64 554.583 1661.55 500.56 1678.18 483.928 cv
1694.81 467.295 1751.06 416.426 1754.09 413.732 cv
1757.1 411.049 1813.87 364.752 1819.73 338.439 cv
1823.2 342 li
cp
.298039 .258824 .215686 rgb
f
gsave
1578.94 523.031 mo
1576.13 523.031 1599.32 504.518 1610.15 487.045 cv
1624.54 463.824 1626.04 444.409 1626.04 444.409 cv
1626.04 444.409 1634.24 442.256 1642.24 442.256 cv
1647.29 442.256 1652.25 443.111 1655.04 445.9 cv
1662.25 453.112 1623.51 497.324 1591.52 516.324 cv
1583.61 521.027 1579.87 523.031 1578.94 523.031 cv
clp
1576.13 442.256 mo
1662.25 442.256 li
1662.25 523.031 li
1576.13 523.031 li
cp
.235294 .435294 .423529 rgb
f
grestore
1745.97 358.824 mo
1745.97 358.824 1737.54 333.324 1738.54 326.824 cv
1739.54 320.324 1777.05 289.315 1777.05 289.315 cv
1777.48 289.208 1777.89 289.157 1778.28 289.157 cv
1785.31 289.157 1787.35 305.454 1784.04 316.636 cv
1780.54 328.45 1745.97 358.824 1745.97 358.824 cv
.235294 .435294 .423529 rgb
f
651.343 728.254 mo
648.153 711.767 657.738 695.436 674.24 689.295 cv
683.96 685.677 698.83 683.534 706.149 690.853 cv
719.712 704.416 661.078 807.277 661.078 807.277 cv
646.569 806.248 li
646.569 806.248 653.373 789.251 656.465 772.511 cv
658.128 763.507 654.476 744.448 651.343 728.254 cv
.0470588 .0470588 .0470588 rgb
f
878.107 774.133 mo
878.107 774.133 880.861 792.061 868.497 802.477 cv
856.132 812.894 785.86 877.518 785.86 877.518 cv
785.86 877.518 663.519 983.474 632.38 999.944 cv
601.241 1016.42 572.875 983.906 572.875 983.906 cv
572.875 983.906 567.294 972.895 569.677 961.775 cv
569.718 961.575 569.762 961.379 569.806 961.183 cv
571.9 952.442 598.508 921.245 613.201 902.352 cv
617.536 896.77 620.832 892.265 622.156 889.725 cv
623.329 887.472 624.952 882.792 626.877 876.542 cv
629.723 867.319 633.214 854.673 636.863 841.366 cv
642.969 819.041 649.499 794.861 654.063 781.854 cv
658.722 768.579 657.807 754.605 655.795 744.1 cv
653.86 734.017 650.912 727.135 650.912 727.135 cv
650.274 721.721 654.09 715.707 660.406 710.162 cv
672.989 699.093 695.472 689.857 712.254 690.767 cv
729.54 691.705 747.462 685.303 757.015 681.189 cv
761.573 679.226 766.773 679.499 771.099 681.93 cv
780.122 686.999 795.486 695.423 803.408 698.582 cv
815.06 703.229 847.16 744.16 847.16 744.16 cv
864.067 760.536 li
878.107 774.133 li
.145098 .137255 .14902 rgb
f
742.05 889.074 mo
619.95 984.744 li
572.88 983.904 li
572.88 983.904 571.88 981.924 570.9 978.805 cv
569.58 974.555 568.3 968.185 569.68 961.774 cv
569.72 961.574 569.76 961.374 569.809 961.185 cv
572.52 949.864 616.35 900.874 622.16 889.725 cv
623.33 887.475 624.95 882.794 626.88 876.544 cv
629.72 867.315 633.21 854.674 636.86 841.364 cv
643.25 851.515 653.53 864.794 663.82 865.354 cv
673.16 865.855 687.12 866.074 699.56 867.015 cv
709.39 867.754 718.26 868.935 723.14 871.055 cv
734.18 875.854 742.05 889.074 742.05 889.074 cv
.788235 .447059 .0352941 rgb
f
573.929 983.932 mo
573.55 983.932 573.202 983.922 572.882 983.906 cv
572.881 983.905 572.88 983.904 572.88 983.904 cv
572.88 983.904 571.88 981.924 570.9 978.805 cv
570.9 978.805 li
571.88 981.924 572.88 983.904 572.88 983.904 cv
574.285 983.929 li
574.163 983.931 574.044 983.932 573.929 983.932 cv
.133333 .109804 .0980392 rgb
f
574.285 983.929 mo
572.88 983.904 li
572.88 983.904 571.88 981.924 570.9 978.805 cv
609.02 960.015 671.09 897.095 699.56 867.015 cv
709.39 867.754 718.26 868.935 723.14 871.055 cv
724.007 871.431 724.854 871.86 725.679 872.33 cv
703.178 896.897 676.352 924.082 644.945 947.417 cv
601.602 979.62 582.078 983.809 574.285 983.929 cv
.729412 .360784 .0235294 rgb
f
649.927 905.379 mo
640.691 921.952 623.008 933.357 596.064 950.755 cv
581.225 960.334 573.565 962.108 569.677 961.775 cv
569.718 961.575 569.762 961.379 569.806 961.183 cv
572.517 949.86 616.353 900.876 622.156 889.725 cv
623.329 887.472 624.952 882.792 626.877 876.542 cv
632.66 878.967 658.128 890.652 649.927 905.379 cv
.286275 .278431 .27451 rgb
f
853.16 769.725 mo
807.41 808.264 li
803.41 811.634 798.05 812.114 793.71 810.124 cv
791.3 809.025 789.2 807.154 787.81 804.594 cv
782.61 795.004 777.95 781.855 783.48 771.424 cv
793.39 752.725 799.87 739.044 776.12 734.954 cv
764.432 732.942 744.226 739.039 725.704 745.136 cv
706.573 751.433 689.238 757.731 684.94 755.094 cv
681.76 753.144 677.16 745.484 672.65 736.685 cv
664.13 720.034 672.55 699.565 690.42 694.004 cv
697.94 691.654 705.55 690.404 712.25 690.765 cv
730.34 691.744 749.12 684.694 758.29 680.634 cv
760.09 679.834 762.01 679.475 763.93 679.555 cv
765.96 679.614 767.97 680.174 769.8 681.194 cv
778.57 686.145 795.09 695.264 803.41 698.584 cv
814.19 702.884 842.47 738.234 846.64 743.504 cv
846.99 743.944 847.37 744.365 847.78 744.754 cv
853.83 750.614 li
859.31 755.924 859 764.804 853.16 769.725 cv
.788235 .447059 .0352941 rgb
f
794.041 800.139 mo
796.735 764.707 814.63 732.422 814.63 723.185 cv
814.63 715.674 785.3 694.204 763.93 679.555 cv
765.96 679.614 767.97 680.174 769.8 681.194 cv
778.57 686.145 795.09 695.264 803.41 698.584 cv
814.19 702.884 842.47 738.234 846.64 743.504 cv
846.83 743.743 847.029 743.976 847.237 744.202 cv
847.194 744.227 847.156 744.262 847.125 744.307 cv
833.354 763.953 815.159 780.489 794.041 800.139 cv
.729412 .360784 .0235294 rgb
f
705.42 769.924 mo
704.67 782.305 684.82 806.084 676.25 817.634 cv
667.68 829.194 662.67 854.395 651.58 863.725 cv
640.49 873.065 638.25 893.404 626.94 899.674 cv
621.25 902.824 616.51 902.984 613.2 902.354 cv
616.83 897.674 619.73 893.765 621.35 891.124 cv
621.68 890.605 621.94 890.134 622.16 889.725 cv
623.33 887.475 624.95 882.794 626.88 876.544 cv
629.72 867.315 633.21 854.674 636.86 841.364 cv
642.97 819.044 649.5 794.864 654.06 781.855 cv
658.72 768.584 657.81 754.604 655.8 744.105 cv
666.76 741.304 679.06 738.774 686.24 739.254 cv
688.3 739.394 689.94 739.784 691.01 740.484 cv
699.94 746.344 706.17 757.534 705.42 769.924 cv
.286275 .278431 .27451 rgb
f
626.88 876.543 mo
626.88 876.543 li
627.117 875.774 627.358 874.98 627.604 874.165 cv
627.358 874.981 627.117 875.774 626.88 876.544 cv
.270588 .258824 .270588 rgb
f
626.88 876.544 mo
626.88 876.544 626.88 876.544 626.88 876.543 cv
626.88 876.543 li
626.88 876.543 li
626.88 876.544 626.88 876.544 626.88 876.544 cv
.392157 .380392 .376471 rgb
f
621.35 891.124 mo
621.68 890.605 621.94 890.134 622.16 889.725 cv
623.33 887.475 624.95 882.794 626.88 876.544 cv
626.88 876.544 li
626.88 876.544 li
627.117 875.774 627.358 874.981 627.604 874.165 cv
629.215 868.817 631.008 862.527 632.899 855.725 cv
634.18 851.124 635.51 846.294 636.86 841.364 cv
642.97 819.044 649.5 794.864 654.06 781.855 cv
655.302 778.318 656.148 774.731 656.684 771.173 cv
656.684 771.173 li
656.148 774.731 655.302 778.318 654.06 781.855 cv
649.5 794.864 642.97 819.044 636.86 841.364 cv
635.51 846.294 634.18 851.124 632.899 855.725 cv
633.112 855.756 633.324 855.772 633.536 855.772 cv
634.331 855.772 635.121 855.548 635.91 855.074 cv
645.79 849.154 653.04 832.654 658.14 813.914 cv
662.154 799.187 676.458 782.35 684.47 768.893 cv
691.185 766.972 li
692.792 766.512 693.77 764.792 693.832 762.69 cv
693.837 762.908 693.84 763.126 693.84 763.344 cv
693.84 779.324 677.04 799.104 667.04 819.544 cv
657.04 839.994 646.26 856.504 637.78 862.464 cv
629.3 868.435 633.08 885.265 626.24 889.654 cv
624.82 890.564 623.13 891.004 621.35 891.124 cv
687.785 762.673 mo
688.407 761.304 688.916 759.989 689.29 758.734 cv
689.29 758.732 689.291 758.73 689.292 758.728 cv
690.013 760.981 li
690.181 761.504 690.009 762.037 689.638 762.143 cv
687.785 762.673 li
693.789 761.636 mo
693.729 761.101 693.614 760.552 693.437 760.001 cv
691.172 752.93 li
691.466 752.827 691.769 752.721 692.08 752.612 cv
692.98 755.574 693.61 758.624 693.789 761.636 cv
673.124 740.337 mo
673.124 740.337 li
674.863 740.046 676.548 739.802 678.15 739.615 cv
678.375 739.589 678.599 739.563 678.821 739.539 cv
679.096 740.237 li
678.779 740.024 678.464 739.817 678.15 739.615 cv
676.548 739.802 674.863 740.046 673.124 740.337 cv
f
633.536 855.772 mo
633.324 855.772 633.112 855.756 632.899 855.725 cv
634.18 851.124 635.51 846.294 636.86 841.364 cv
642.97 819.044 649.5 794.864 654.06 781.855 cv
655.302 778.318 656.148 774.731 656.684 771.173 cv
658.475 770.921 666.646 766.868 672.68 763.67 cv
673.346 765.75 li
674.241 768.544 676.417 770.487 678.463 770.487 cv
678.75 770.487 679.034 770.449 679.312 770.369 cv
684.47 768.893 li
676.458 782.35 662.154 799.187 658.14 813.914 cv
653.04 832.654 645.79 849.154 635.91 855.074 cv
635.121 855.548 634.331 855.772 633.536 855.772 cv
677.628 765.558 mo
677.288 765.558 676.918 765.23 676.77 764.77 cv
675.867 761.951 li
677.702 760.939 679.007 760.175 679.33 759.902 cv
680.096 759.257 676.496 749.202 673.124 740.337 cv
674.863 740.046 676.548 739.802 678.15 739.615 cv
678.464 739.817 678.779 740.024 679.096 740.237 cv
684.942 755.095 li
684.942 755.095 685.984 754.738 687.81 754.103 cv
689.292 758.728 li
689.291 758.73 689.29 758.732 689.29 758.734 cv
688.916 759.989 688.407 761.304 687.785 762.673 cv
677.765 765.539 li
677.721 765.552 677.674 765.558 677.628 765.558 cv
.478431 .466667 .462745 rgb
f
674.682 715.456 mo
662.809 718.853 li
660.549 719.5 659.535 722.637 660.556 725.824 cv
673.346 765.75 li
674.367 768.936 677.052 771.016 679.312 770.369 cv
691.185 766.972 li
693.445 766.325 694.459 763.188 693.437 760.001 cv
680.648 720.076 li
679.627 716.889 676.942 714.809 674.682 715.456 cv
676.229 720.286 mo
676.6 720.179 677.056 720.533 677.223 721.056 cv
690.013 760.981 li
690.181 761.504 690.009 762.037 689.638 762.143 cv
677.765 765.539 li
677.394 765.645 676.938 765.293 676.77 764.77 cv
663.981 724.845 li
663.813 724.32 663.985 723.789 664.356 723.683 cv
676.229 720.286 li
.847059 .729412 .596078 rgb
f
667.815 726.773 mo
667.815 726.773 680.716 758.735 679.33 759.902 cv
677.944 761.07 658.512 771.294 656.496 771.185 cv
654.48 771.075 642.762 741.717 645.771 737.555 cv
648.78 733.393 667.815 726.773 667.815 726.773 cv
.929412 .498039 .027451 rgb
f
672.625 723.791 mo
684.942 755.095 li
684.942 755.095 745.618 734.255 752.227 728.688 cv
758.836 723.119 764.876 703.563 760.121 695.277 cv
755.365 686.989 752.781 692.802 727.377 701.528 cv
701.973 710.255 672.625 723.791 672.625 723.791 cv
f
629.297 868.434 mo
629.297 868.434 626.335 867.521 623.777 869.676 cv
621.219 871.831 619.437 880.081 619.437 880.081 cv
623.682 886.146 li
623.682 886.146 626.73 888.762 630.435 886.604 cv
634.14 884.448 633.271 879.877 631.688 878.197 cv
630.104 876.519 628.26 871.966 628.26 871.966 cv
629.297 868.434 li
cp
.937255 .792157 .639216 rgb
f
633.681 854.941 mo
633.681 854.941 630.92 854.399 629.772 855.345 cv
628.625 856.291 628.868 864.871 628.868 864.871 cv
632.092 868.344 li
632.092 868.344 639.114 869.764 640.761 870.124 cv
642.408 870.484 643.241 867.192 642.91 863.903 cv
642.578 860.615 633.681 854.941 633.681 854.941 cv
cp
f
638.198 836.48 mo
638.198 836.48 636.116 836.11 633.75 840.228 cv
631.385 844.345 635.146 847.617 635.146 847.617 cv
635.146 847.617 642.756 850.158 644.032 851.511 cv
645.308 852.863 647.407 855.52 650.751 855.009 cv
654.097 854.498 654.502 851.145 653.916 849.709 cv
653.329 848.275 641.726 836.085 638.198 836.48 cv
cp
f
642.843 819.549 mo
642.843 819.549 634.05 825.322 639.631 831.239 cv
652.688 832.183 li
652.688 832.183 656.278 833.015 657.628 831.878 cv
658.979 830.74 657.766 825.263 652.867 823.179 cv
647.968 821.094 642.843 819.549 642.843 819.549 cv
cp
f
649.32 794.404 mo
649.32 794.404 643.912 803.431 646.569 806.248 cv
649.226 809.066 665.511 818.669 669.073 818.862 cv
672.634 819.056 674.147 818.564 674.402 814.372 cv
674.657 810.181 670.592 809.025 664.847 805.549 cv
659.103 802.072 649.32 794.404 649.32 794.404 cv
cp
f
651.34 792.604 mo
651.34 792.604 648.26 788.548 650.074 785.333 cv
651.887 782.117 654.701 780.651 654.701 780.651 cv
654.701 780.651 673.707 782.537 676.114 785.09 cv
678.521 787.642 678.05 791.198 674.97 792.395 cv
671.889 793.59 651.34 792.604 651.34 792.604 cv
cp
f
878.107 774.133 mo
878.107 774.133 880.861 792.061 868.497 802.477 cv
856.132 812.894 785.86 877.518 785.86 877.518 cv
785.86 877.518 663.519 983.474 632.38 999.944 cv
601.241 1016.42 586.393 1012.17 584.179 1008.73 cv
582.252 1005.76 575.432 996.36 573.022 991.484 cv
572.658 990.742 572.393 990.105 572.262 989.609 cv
571.657 987.319 571.311 985.471 572.875 983.906 cv
579.575 984.243 598.706 981.771 644.945 947.417 cv
705.526 902.406 749.047 843.086 777.404 815.82 cv
805.626 788.692 829.856 768.944 847.125 744.307 cv
847.256 744.118 847.524 744.099 847.681 744.266 cv
851.921 748.77 li
878.107 774.133 li
1 .909804 .823529 rgb
f
868.5 802.474 mo
856.13 812.894 785.86 877.515 785.86 877.515 cv
785.86 877.515 663.52 983.474 632.38 999.944 cv
601.24 1016.41 586.39 1012.16 584.18 1008.73 cv
583.22 1007.25 581.04 1004.17 578.8 1000.85 cv
576.55 997.515 574.23 993.924 573.02 991.484 cv
577.98 991.194 586.27 989.104 600.06 982.574 cv
631.44 967.714 696.34 917.854 721.94 886.164 cv
747.55 854.474 798.44 802.435 820.33 783.994 cv
836.45 770.414 847.15 757.614 851.77 748.794 cv
851.97 748.404 852.48 748.334 852.78 748.634 cv
867.41 763.464 li
870.29 766.384 li
874.43 770.574 li
878.11 774.134 li
878.11 774.134 880.86 792.064 868.5 802.474 cv
.937255 .768627 .584314 rgb
f
802.001 838.248 mo
801.115 832.848 li
827.17 810.175 li
828.148 814.051 li
802.001 838.248 li
.878431 .592157 .341176 rgb
f
848.18 794.734 mo
846.58 791.204 li
846.58 791.204 862.8 774.734 865.75 769.555 cv
868.616 764.537 867.319 763.46 867.398 763.46 cv
867.4 763.46 867.404 763.461 867.41 763.464 cv
870.29 766.384 li
870.44 766.634 870.52 766.784 870.52 766.784 cv
870.52 766.784 870.81 768.524 868.43 772.794 cv
866.05 777.064 848.18 794.734 848.18 794.734 cv
f
878.107 774.133 mo
878.107 774.133 880.861 792.061 868.497 802.478 cv
856.132 812.895 785.86 877.518 785.86 877.518 cv
785.86 877.518 663.52 983.474 632.38 999.944 cv
601.241 1016.42 586.393 1012.17 584.179 1008.73 cv
583.217 1007.25 581.042 1004.17 578.804 1000.85 cv
585.889 1001.43 597.077 1000.98 610.887 995.814 cv
635.207 986.716 707.06 932.692 724.657 916.061 cv
742.253 899.429 801.778 848.56 804.976 845.865 cv
808.108 843.228 866.547 797.217 874.392 770.664 cv
874.547 770.138 875.244 770.033 875.558 770.482 cv
878.107 774.133 li
cp
.278431 .184314 .0823529 rgb
f
657.54 766.824 mo
654.29 766.824 645.412 741.746 647.96 739.198 cv
650.508 736.65 662.79 733.074 662.79 733.074 cv
670.54 733.074 675.54 752.574 672.625 758.074 cv
669.71 763.574 660.79 766.824 657.54 766.824 cv
.94902 .564706 .0352941 rgb
f
687.118 749.949 mo
677.644 727.824 li
677.644 727.824 717.29 709.574 732.29 706.574 cv
733.695 706.293 734.938 706.162 736.035 706.162 cv
746.654 706.162 743.455 718.534 737.79 727.824 cv
731.54 738.074 687.118 749.949 687.118 749.949 cv
f
590.017 947.48 mo
588.812 947.48 587.641 947.279 586.54 946.824 cv
579.046 943.731 612.087 912.907 626.516 899.904 cv
626.657 899.829 626.798 899.752 626.94 899.674 cv
629.29 898.371 631.249 896.46 632.977 894.167 cv
633.324 894.215 645.279 895.923 645.279 902.647 cv
645.279 909.471 610.609 935.737 610.609 935.737 cv
610.609 935.737 599.235 947.482 590.017 947.48 cv
.368627 .356863 .352941 rgb
f
626.516 899.904 mo
630.426 896.381 632.969 894.166 632.969 894.166 cv
632.969 894.166 632.972 894.166 632.977 894.167 cv
631.249 896.46 629.29 898.371 626.94 899.674 cv
626.798 899.752 626.657 899.829 626.516 899.904 cv
f
1131.64 396.118 mo
1129.99 393.941 li
1137.42 383.789 li
1131.64 396.118 li
cp
.317647 .298039 .145098 rgb
f
1147.07 386.647 mo
1147.07 386.647 1219.16 300.193 1218.7 286.427 cv
1218.24 272.661 1174.98 273.906 1174.98 273.906 cv
1147.07 386.647 li
.211765 .0823529 .376471 rgb
f
1391.97 308.964 mo
1396.39 312.907 1406.4 323.313 1407.94 330.05 cv
1409.48 336.788 1393.62 349.236 1338.73 384.718 cv
1336.94 382.3 li
1326.19 389.247 li
1327.6 393.236 li
1305.46 406.847 li
1302.36 402.051 li
1295.6 406.652 li
1298.51 412.046 li
1287.6 419.1 li
1284.5 414.304 li
1277.96 418.526 li
1281.07 423.322 li
1244.88 447.299 li
1239.59 442.865 li
1240.17 450.345 li
1219.93 464.361 li
1217.05 459.897 li
1212 463.158 li
1214.89 467.622 li
1191.37 482.009 li
1188.86 478.121 li
1183.65 481.487 li
1185.7 485.557 li
1163.22 499.383 li
1160.61 495.331 li
1155.07 498.909 li
1156.79 502.84 li
1135.73 515.048 li
1135.73 515.048 1133.06 512.553 1130.87 513.146 cv
1128.68 513.747 1128.07 518.242 1128.07 518.242 cv
1128.07 518.242 1108.22 530.141 1099.13 530.039 cv
1092.02 529.96 1079.67 528.799 1070.99 525.329 cv
1068.58 524.368 1066.45 523.227 1064.79 521.88 cv
1061.35 519.093 1058.81 515.417 1057.06 512.216 cv
1054.76 508.024 1054.72 502.96 1056.81 498.66 cv
1057.48 497.271 1058.31 495.616 1059.32 493.656 cv
1060.44 491.456 1064.09 486.934 1068.99 481.293 cv
1083.63 464.435 1109.47 437.61 1112.89 433.121 cv
1117.45 427.126 1136.68 383.629 1136.68 383.629 cv
1136.68 383.629 1171.23 326.851 1188.17 312.439 cv
1205.11 298.031 1275.18 277.337 1281.96 264.631 cv
1288.75 251.925 1284.86 234.306 1296.77 226.611 cv
1308.67 218.917 1319.97 224.79 1319.97 224.79 cv
1319.97 224.79 1328.66 233.093 1338.28 242.482 cv
1340.77 244.919 1343.33 247.423 1345.81 249.879 cv
1349.43 253.443 1352.88 256.896 1355.76 259.85 cv
1368.29 272.706 1373.85 284.212 1373.85 284.212 cv
1378.17 284.361 li
1381.38 289.32 li
1381.38 289.32 1383.55 289.792 1384.41 291.115 cv
1385.24 292.405 1387.43 304.439 1391.66 308.668 cv
1391.76 308.775 1391.86 308.869 1391.97 308.964 cv
.027451 .0117647 .0117647 rgb
f
1391.66 308.668 mo
1278.94 385.052 li
1272.19 378.264 li
1259.04 372.748 li
1259.04 372.748 1247.2 365.731 1248.41 360.113 cv
1249.61 354.495 1306.91 291.248 1306.91 291.248 cv
1306.91 291.248 1319.71 284.515 1321.39 276.672 cv
1323.08 268.833 1318.76 264.337 1328.48 253.366 cv
1332.14 249.235 1335.5 245.512 1338.28 242.482 cv
1340.77 244.919 1343.33 247.423 1345.81 249.879 cv
1349.43 253.443 1352.88 256.896 1355.76 259.85 cv
1368.29 272.706 1373.85 284.212 1373.85 284.212 cv
1378.17 284.361 li
1381.38 289.32 li
1381.38 289.32 1383.55 289.792 1384.41 291.115 cv
1385.24 292.405 1387.43 304.439 1391.66 308.668 cv
.211765 .0823529 .376471 rgb
f
1345.82 249.874 mo
1283.42 333.784 li
1266.82 349.131 li
1223.52 389.208 li
1193.5 417.003 li
1181.74 427.892 li
1172.49 436.44 1160.7 441.735 1148.17 442.961 cv
1136.74 444.075 li
1136.74 444.075 1075.93 486.549 1070.82 483.528 cv
1070.02 483.06 1069.42 482.28 1068.99 481.288 cv
1083.63 464.436 1109.48 437.61 1112.89 433.119 cv
1117.46 427.123 1136.68 383.625 1136.68 383.625 cv
1136.68 383.625 1139.71 378.654 1144.4 371.275 cv
1155.6 353.723 1176.25 322.584 1188.17 312.441 cv
1193.18 308.184 1202.79 303.38 1214.06 298.41 cv
1240.95 286.507 1277.19 273.59 1281.97 264.63 cv
1288.76 251.924 1284.87 234.303 1296.77 226.614 cv
1308.67 218.912 1319.97 224.786 1319.97 224.786 cv
1319.97 224.786 1333.76 237.96 1345.82 249.874 cv
.286275 .207843 .737255 rgb
f
1266.82 349.131 mo
1263.96 339.033 li
1263.96 339.033 1241.23 337.595 1221.99 337.595 cv
1221.7 337.595 1221.41 337.595 1221.12 337.596 cv
1220.35 337.598 1219.59 337.603 1218.83 337.61 cv
1216.97 320.792 1215.13 306.41 1214.06 298.41 cv
1240.95 286.507 1277.19 273.59 1281.97 264.63 cv
1288.76 251.924 1284.87 234.303 1296.77 226.614 cv
1301.48 223.564 1306.1 222.643 1309.96 222.643 cv
1315.85 222.643 1319.97 224.786 1319.97 224.786 cv
1319.97 224.786 1333.76 237.96 1345.82 249.874 cv
1283.42 333.784 li
1266.82 349.131 li
.196078 .141176 .572549 rgb
f
1144.4 371.275 mo
1152.89 356.87 1176.32 318.923 1189.88 309.304 cv
1211.09 294.426 1270.37 276.693 1280.29 264.704 cv
1280.72 264.055 li
1288.37 251.24 1282.38 226.791 1304.89 222.752 cv
1310 221.774 1315.39 222.504 1319.97 224.786 cv
1313.21 222 1304.98 222.272 1298.19 226.52 cv
1291.48 230.151 1289.41 238.164 1288.23 245.568 cv
1284.09 270.167 1286.34 269.672 1232.82 292.232 cv
1185.9 311.708 1187.87 308.47 1144.4 371.275 cv
cp
.305882 .733333 .898039 rgb
f
1379.82 285.793 mo
1381.38 289.32 li
1385.1 313.755 li
1294.59 379.882 li
1294.59 379.882 1293.69 358.906 1308.04 339.78 cv
1322.4 320.653 1340.76 303.369 1352.03 298.318 cv
1363.3 293.272 1373.85 284.212 1373.85 284.212 cv
1375.81 283.773 li
1377.45 283.403 1379.13 284.249 1379.82 285.793 cv
.976471 .403922 .854902 rgb
f
1275.48 379.701 mo
1226.11 430.6 li
1226.11 430.6 1212.08 420.882 1193.5 417.003 cv
1180.96 414.373 1166.35 414.396 1152.61 421.863 cv
1118.52 440.385 1112.89 433.119 1112.89 433.119 cv
1117.46 427.123 1136.68 383.625 1136.68 383.625 cv
1136.68 383.625 1139.71 378.654 1144.4 371.275 cv
1151.47 371.51 1159.83 370.986 1167.29 368.423 cv
1184.45 362.538 1188.95 344.84 1196.4 340.026 cv
1199.19 338.22 1209.43 337.629 1221.12 337.596 cv
1240.53 337.551 1263.96 339.033 1263.96 339.033 cv
1266.82 349.131 li
1275.48 379.701 li
f
1193.13 415.042 mo
1180.59 412.412 1165.98 412.434 1152.24 419.901 cv
1126 434.157 1116.63 433.137 1113.7 431.91 cv
1113.4 432.402 1113.12 432.813 1112.89 433.119 cv
1112.89 433.119 1118.52 440.386 1152.61 421.863 cv
1166.35 414.396 1180.96 414.374 1193.5 417.003 cv
1212.08 420.882 1226.11 430.601 1226.11 430.601 cv
1228.65 427.98 li
1220.95 424.304 1206.15 417.76 1193.13 415.042 cv
cp
.968627 .52549 .886275 rgb
f
1274.98 377.916 mo
1265.86 389.624 li
1275.48 379.701 li
1274.98 377.916 li
f
1226.11 430.6 mo
1235.88 404.499 1227.67 362.594 1221.12 337.596 cv
1240.53 337.551 1263.96 339.033 1263.96 339.033 cv
1266.82 349.131 li
1275.48 379.701 li
1226.11 430.6 li
.756863 .286275 .666667 rgb
f
1338.73 384.717 mo
1336.94 382.298 li
1326.19 389.252 li
1327.61 393.231 li
1305.46 406.85 li
1302.36 402.047 li
1295.6 406.65 li
1298.51 412.044 li
1287.6 419.099 li
1284.5 414.306 li
1277.97 418.53 li
1281.07 423.323 li
1244.88 447.296 li
1239.58 442.86 li
1240.16 450.35 li
1219.94 464.359 li
1217.05 459.901 li
1212 463.154 li
1214.89 467.624 li
1191.37 482.012 li
1190.81 481.143 li
1188.86 478.123 li
1183.65 481.488 li
1185.7 485.556 li
1163.23 499.387 li
1160.6 495.33 li
1155.07 498.908 li
1156.79 502.842 li
1135.73 515.046 li
1135.73 515.046 1133.06 512.55 1130.88 513.151 cv
1128.68 513.753 1128.07 518.245 1128.07 518.245 cv
1128.07 518.245 1108.22 530.136 1099.12 530.036 cv
1092.01 529.958 1079.68 528.795 1070.99 525.329 cv
1072.28 524.604 1073.67 523.839 1075.15 523.004 cv
1109.15 504.013 1194.29 455.966 1207.09 443.952 cv
1212.81 438.58 1220.11 430.511 1228.93 421.004 cv
1244.79 403.908 1265.59 382.131 1291.12 362.906 cv
1330.85 333.004 1336.81 321.179 1346.32 312.687 cv
1355.84 304.194 1381.37 289.315 1381.37 289.315 cv
1381.37 289.315 1384.24 289.103 1385.09 290.43 cv
1385.95 291.745 1387.55 305.03 1391.97 308.964 cv
1394.81 311.505 1399.97 316.71 1403.69 321.903 cv
1405.76 324.778 1407.39 327.643 1407.94 330.05 cv
1409.48 336.793 1393.62 349.231 1338.73 384.717 cv
.929412 .0470588 .592157 rgb
f
1396.81 313.706 mo
1396.81 313.706 li
1396.38 313.245 1395.95 312.803 1395.55 312.386 cv
1395.54 312.391 li
1395.39 312.239 1395.24 312.089 1395.1 311.942 cv
1395.24 312.087 1395.39 312.235 1395.55 312.386 cv
1395.95 312.803 1396.38 313.245 1396.81 313.706 cv
1394.55 311.399 mo
1394.45 311.304 1394.36 311.21 1394.26 311.117 cv
1394.27 311.115 li
1394.07 310.927 1393.88 310.744 1393.69 310.566 cv
1393.69 310.566 li
1393.88 310.744 1394.07 310.927 1394.27 311.115 cv
1394.36 311.209 1394.45 311.303 1394.55 311.399 cv
1392.07 309.056 mo
1392.04 309.025 1392 308.994 1391.97 308.964 cv
1392 308.994 1392.04 309.025 1392.07 309.056 cv
1391.97 308.964 mo
1391.89 308.893 1391.81 308.82 1391.73 308.743 cv
1391.72 308.731 1391.71 308.719 1391.7 308.706 cv
1391.79 308.796 1391.88 308.882 1391.97 308.964 cv
1391.56 308.562 mo
1391.53 308.534 1391.5 308.505 1391.48 308.476 cv
1391.03 307.982 1390.61 307.391 1390.22 306.727 cv
1390.22 306.724 li
1389.85 306.102 1389.51 305.408 1389.19 304.681 cv
1389.19 304.681 li
1389.51 305.408 1389.85 306.102 1390.22 306.724 cv
1390.63 307.429 1391.08 308.052 1391.56 308.562 cv
1387.96 301.345 mo
1386.59 297.027 1385.81 292.409 1385.28 290.863 cv
1385.81 292.41 1386.59 297.03 1387.96 301.345 cv
1385.28 290.856 mo
1385.28 290.855 1385.28 290.854 1385.28 290.852 cv
1385.28 290.854 1385.28 290.855 1385.28 290.856 cv
1385.1 290.442 mo
1385.1 290.442 1385.1 290.442 1385.1 290.442 cv
1385.1 290.442 1385.1 290.442 1385.1 290.442 cv
1385.1 290.436 mo
1385.1 290.434 1385.09 290.432 1385.09 290.43 cv
1385.09 290.432 1385.09 290.434 1385.1 290.436 cv
.733333 .670588 .713725 rgb
f
1219.94 464.359 mo
1217.22 460.159 li
1219.94 464.359 li
1219.94 464.359 li
1287.6 419.099 mo
1284.5 414.306 li
1284.5 414.307 li
1284.5 414.306 li
1287.6 419.099 li
1287.6 419.099 li
1338.73 384.715 mo
1338.73 384.715 li
1388.29 352.677 1406.03 339.425 1407.88 332.191 cv
1407.88 332.191 li
1406.03 339.425 1388.29 352.677 1338.73 384.717 cv
1333.32 384.64 mo
1336.94 382.298 li
1336.94 382.3 li
1336.94 382.298 li
1333.32 384.64 li
1391.73 308.743 mo
1391.71 308.719 1391.68 308.694 1391.66 308.67 cv
1391.66 308.668 li
1391.67 308.681 1391.68 308.694 1391.7 308.706 cv
1391.71 308.719 1391.72 308.731 1391.73 308.743 cv
.0196078 .00784314 .00784314 rgb
f
1391.66 308.67 mo
1391.6 308.607 1391.54 308.542 1391.48 308.476 cv
1391.5 308.505 1391.53 308.534 1391.56 308.562 cv
1391.59 308.598 1391.63 308.634 1391.66 308.669 cv
1391.66 308.668 li
.156863 .054902 .266667 rgb
f
1191.37 482.012 mo
1190.81 481.143 li
1246.73 432.138 1228.93 421.004 1228.93 421.004 cv
1244.79 403.908 1265.59 382.131 1291.12 362.906 cv
1330.85 333.004 1336.81 321.179 1346.32 312.687 cv
1355.84 304.194 1381.37 289.315 1381.37 289.315 cv
1381.37 289.315 1381.54 289.303 1381.81 289.303 cv
1382.64 289.303 1384.45 289.425 1385.09 290.43 cv
1385.09 290.43 li
1385.09 290.432 1385.1 290.434 1385.1 290.436 cv
1385.1 290.438 1385.1 290.44 1385.1 290.442 cv
1385.1 290.442 1385.1 290.442 1385.1 290.442 cv
1385.16 290.532 1385.21 290.67 1385.28 290.852 cv
1385.28 290.854 1385.28 290.855 1385.28 290.856 cv
1385.28 290.858 1385.28 290.861 1385.28 290.863 cv
1385.81 292.409 1386.59 297.027 1387.96 301.345 cv
1388.31 302.469 1388.71 303.572 1389.15 304.595 cv
1389.16 304.624 1389.17 304.652 1389.19 304.681 cv
1389.19 304.681 li
1389.17 304.652 1389.16 304.624 1389.15 304.595 cv
1270.09 400.732 li
1390.22 306.727 li
1390.61 307.391 1391.03 307.982 1391.48 308.476 cv
1391.48 308.476 li
1391.54 308.542 1391.6 308.607 1391.66 308.67 cv
1391.68 308.694 1391.71 308.719 1391.73 308.743 cv
1391.81 308.82 1391.89 308.893 1391.97 308.964 cv
1391.97 308.964 li
1391.97 308.964 li
1392 308.994 1392.04 309.025 1392.07 309.056 cv
1392.24 309.208 1392.41 309.368 1392.59 309.544 cv
1392.94 309.852 1393.31 310.197 1393.69 310.566 cv
1393.69 310.566 li
1393.31 310.197 1392.94 309.852 1392.59 309.544 cv
1248.3 421.473 li
1394.27 311.115 li
1394.36 311.21 1394.45 311.304 1394.55 311.399 cv
1394.73 311.576 1394.91 311.757 1395.1 311.942 cv
1395.24 312.089 1395.39 312.239 1395.54 312.391 cv
1312.23 380.336 li
1397.01 313.913 li
1396.94 313.843 1396.88 313.775 1396.81 313.706 cv
1396.81 313.706 li
1396.88 313.775 1396.94 313.843 1397.01 313.913 cv
1399.26 316.298 1401.69 319.106 1403.69 321.903 cv
1405.76 324.778 1407.39 327.643 1407.94 330.05 cv
1408.01 330.34 1408.04 330.64 1408.04 330.952 cv
1408.04 331.346 1407.99 331.757 1407.88 332.191 cv
1406.03 339.425 1388.29 352.677 1338.73 384.717 cv
1338.73 384.717 li
1336.94 382.3 li
1336.94 382.298 li
1333.32 384.64 li
1326.19 389.252 li
1327.61 393.231 li
1305.46 406.85 li
1302.36 402.047 li
1295.6 406.65 li
1298.51 412.044 li
1287.6 419.099 li
1284.5 414.306 li
1284.5 414.307 li
1277.97 418.53 li
1281.07 423.323 li
1244.88 447.296 li
1239.58 442.86 li
1240.16 450.35 li
1219.94 464.359 li
1217.22 460.159 li
1217.05 459.901 li
1212 463.154 li
1214.89 467.624 li
1191.37 482.012 li
.682353 .0313725 .419608 rgb
f
1390.22 306.727 mo
1389.85 306.102 1389.51 305.412 1389.19 304.681 cv
1389.51 305.408 1389.85 306.102 1390.22 306.724 cv
1390.22 306.727 li
.537255 .45098 .509804 rgb
f
1270.09 400.732 mo
1389.15 304.595 li
1389.16 304.624 1389.17 304.652 1389.19 304.681 cv
1389.51 305.412 1389.85 306.102 1390.22 306.727 cv
1270.09 400.732 li
.501961 .0196078 .298039 rgb
f
1394.26 311.117 mo
1394.07 310.928 1393.88 310.744 1393.69 310.566 cv
1393.88 310.744 1394.07 310.927 1394.27 311.115 cv
1394.27 311.115 li
.537255 .45098 .509804 rgb
f
1248.3 421.473 mo
1392.59 309.544 li
1392.94 309.852 1393.31 310.197 1393.69 310.566 cv
1393.88 310.744 1394.07 310.928 1394.26 311.117 cv
1248.3 421.473 li
.501961 .0196078 .298039 rgb
f
1396.81 313.706 mo
1396.38 313.251 1395.95 312.812 1395.54 312.391 cv
1395.55 312.386 li
1395.95 312.803 1396.38 313.245 1396.81 313.706 cv
.537255 .45098 .509804 rgb
f
1312.23 380.336 mo
1395.54 312.391 li
1395.95 312.812 1396.38 313.251 1396.81 313.706 cv
1396.88 313.775 1396.94 313.843 1397.01 313.913 cv
1312.23 380.336 li
.501961 .0196078 .298039 rgb
f
1070.98 525.333 mo
1202.82 448.927 1201.41 448.91 1215.48 433.936 cv
1228.34 420.355 1253.95 390.521 1285.98 365.634 cv
1313.31 344.624 1317.5 342.114 1341.04 317.179 cv
1344.61 313.455 1346.19 312.019 1350.23 308.963 cv
1358.79 302.622 1371.92 294.698 1381.37 289.315 cv
1323.82 324.377 1357.91 312.435 1287.17 367.152 cv
1241.93 402.599 1218.82 438.558 1198.48 451.678 cv
1167.78 472.183 1103.24 507.981 1070.98 525.333 cv
cp
1 .701961 .901961 rgb
f
1407.94 330.05 mo
1409.48 336.788 1393.62 349.236 1338.73 384.718 cv
1336.94 382.3 li
1326.19 389.247 li
1327.6 393.236 li
1305.46 406.847 li
1302.36 402.051 li
1295.6 406.652 li
1298.51 412.046 li
1287.6 419.1 li
1284.5 414.304 li
1277.96 418.526 li
1281.06 423.322 li
1244.88 447.299 li
1239.59 442.865 li
1240.17 450.345 li
1219.93 464.361 li
1217.05 459.897 li
1212 463.158 li
1214.89 467.622 li
1191.37 482.009 li
1188.86 478.121 li
1183.65 481.487 li
1185.7 485.557 li
1163.22 499.383 li
1160.6 495.331 li
1155.07 498.909 li
1156.79 502.84 li
1135.73 515.048 li
1135.73 515.048 1133.06 512.553 1130.87 513.146 cv
1128.68 513.748 1128.07 518.242 1128.07 518.242 cv
1128.07 518.242 1108.22 530.141 1099.13 530.039 cv
1092.02 529.96 1079.67 528.799 1070.99 525.329 cv
1072.27 524.61 1073.57 523.805 1075.06 522.967 cv
1082.03 524.8 li
1082.03 524.8 1114.23 518.047 1166.1 487.328 cv
1217.97 456.61 1378.94 349.915 1387.94 342.075 cv
1395.98 335.059 1402.53 328.773 1403.7 321.9 cv
1405.76 324.778 1407.39 327.648 1407.94 330.05 cv
cp
.976471 .937255 .772549 rgb
f
1407.94 330.05 mo
1408.14 330.967 1408 331.929 1407.67 332.798 cv
1403.36 343.898 1353.8 374.614 1338.81 384.278 cv
1338.55 383.924 1336.92 381.715 1337.02 381.854 cv
1327.15 388.21 1336.96 381.89 1325.77 389.102 cv
1325.84 389.298 1327.22 393.237 1327.17 393.082 cv
1305.58 406.303 li
1305.51 406.19 1302.41 401.366 1302.48 401.479 cv
1302.25 401.63 1294.58 406.835 1295.05 406.517 cv
1295.13 406.663 1298.07 412.15 1297.94 411.899 cv
1287.73 418.475 li
1287.66 418.361 1284.56 413.555 1284.63 413.667 cv
1284.52 413.739 1276.87 418.668 1277.31 418.385 cv
1277.4 418.521 1280.48 423.298 1280.4 423.183 cv
1244.92 446.612 li
1244.76 446.481 1238.54 441.27 1238.93 441.598 cv
1239.01 442.508 1239.63 450.364 1239.6 450.078 cv
1220.07 463.655 li
1219.98 463.516 1217.12 459.105 1217.19 459.217 cv
1216.52 459.65 1211.23 463.089 1211.34 463.016 cv
1211.42 463.138 1214.37 467.684 1214.23 467.472 cv
1191.5 481.424 li
1190.99 480.631 1188.89 477.391 1188.98 477.538 cv
1188.33 477.958 1183.01 481.416 1183.12 481.343 cv
1183.25 481.6 1185.23 485.532 1185.17 485.408 cv
1163.34 498.889 li
1163.26 498.777 1160.64 494.729 1160.71 494.841 cv
1160.54 494.953 1154.31 498.993 1154.64 498.78 cv
1154.72 498.967 1156.43 502.856 1156.36 502.7 cv
1135.75 514.691 li
1131.85 511.381 1128.78 512.191 1127.82 518.063 cv
1120.86 522.193 1108.61 528.747 1100.53 529.81 cv
1095.97 530.256 1080.78 529.118 1070.99 525.329 cv
1078.48 528.309 1088.72 529.769 1096.78 530.099 cv
1108.63 530.687 1125.8 519.629 1128.32 518.417 cv
1128.42 517.965 1128.51 516.998 1129.08 515.584 cv
1131.13 510.752 1135.47 515.339 1135.69 515.413 cv
1140.51 512.632 1152.4 505.765 1157.22 502.981 cv
1157.14 502.799 1155.44 498.904 1155.5 499.04 cv
1160.5 495.821 li
1160.57 495.933 1163.18 499.989 1163.11 499.877 cv
1170.18 495.542 1177.41 491.113 1186.23 485.708 cv
1186.1 485.451 1184.12 481.509 1184.19 481.633 cv
1188.73 478.704 li
1188.82 478.841 1191.4 482.846 1191.24 482.593 cv
1204.32 474.616 1201.79 476.158 1215.55 467.773 cv
1215.48 467.657 1212.51 463.06 1212.67 463.302 cv
1216.9 460.577 li
1216.98 460.706 1219.87 465.182 1219.79 465.066 cv
1227.45 459.78 1232.64 456.199 1240.73 450.613 cv
1240.72 450.447 1240.21 443.854 1240.24 444.129 cv
1240.35 444.225 1244.95 448.082 1244.84 447.986 cv
1256.2 440.435 1267.93 432.632 1281.73 423.46 cv
1281.65 423.338 1278.52 418.508 1278.62 418.666 cv
1284.36 414.941 li
1284.43 415.054 1287.53 419.837 1287.46 419.725 cv
1295.4 414.577 1290.09 418.021 1299.07 412.191 cv
1298.99 412.042 1295.98 406.458 1296.15 406.786 cv
1302.25 402.625 li
1302.32 402.736 1305.41 407.504 1305.34 407.392 cv
1319.82 398.456 1313.65 402.264 1328.04 393.389 cv
1327.94 393.131 1326.57 389.274 1326.62 389.391 cv
1336.86 382.746 li
1337.12 383.095 1338.76 385.296 1338.65 385.158 cv
1353.01 375.809 1403.48 343.966 1407.69 332.807 cv
1408.02 331.931 1408.15 330.965 1407.94 330.05 cv
cp
.2 .196078 .176471 rgb
f
1128.27 422.616 mo
1126.25 422.616 1124.62 420.985 1124.62 418.974 cv
1124.62 416.962 1126.25 415.331 1128.27 415.331 cv
1130.28 415.331 1131.91 416.962 1131.91 418.974 cv
1131.91 420.985 1130.28 422.616 1128.27 422.616 cv
.466667 .196078 .423529 rgb
f
1120.58 418.188 mo
1120.58 418.188 1121.6 409.308 1125.71 407.834 cv
1129.81 406.36 1126.43 411.828 1127.13 412.902 cv
1127.82 413.977 1130.21 416.761 1130.31 418.923 cv
1130.42 421.084 1127.89 422.605 1125.81 423.012 cv
1123.73 423.42 1120.42 421.926 1120.58 418.188 cv
cp
.917647 .886275 .596078 rgb
f
1140.76 402.269 mo
1138.75 402.269 1137.12 400.638 1137.12 398.626 cv
1137.12 396.614 1138.75 394.983 1140.76 394.983 cv
1142.77 394.983 1144.4 396.614 1144.4 398.626 cv
1144.4 400.638 1142.77 402.269 1140.76 402.269 cv
.466667 .196078 .423529 rgb
f
1124.29 408.72 mo
1124.29 408.72 1126.78 408.557 1130.64 407.464 cv
1134.51 406.373 1140.95 402.56 1141.39 400.518 cv
1141.83 398.477 1142.23 395.93 1138.49 395.126 cv
1134.75 394.322 1130.6 397.178 1130.6 397.178 cv
1130.6 397.178 1122.96 405.944 1124.29 408.72 cv
cp
.917647 .886275 .596078 rgb
f
1152.71 385.195 mo
1150.67 385.195 1148.81 383.539 1148.39 381.215 cv
1147.94 378.641 1149.43 376.223 1151.72 375.815 cv
1151.95 375.776 1152.17 375.757 1152.39 375.757 cv
1154.44 375.757 1156.3 377.413 1156.71 379.737 cv
1157.17 382.31 1155.68 384.728 1153.38 385.136 cv
1153.16 385.176 1152.93 385.195 1152.71 385.195 cv
.466667 .196078 .423529 rgb
f
1129.99 393.941 mo
1129.99 393.941 1151.77 387.387 1153.85 384.445 cv
1155.94 381.503 1152.21 374.298 1149.28 375.376 cv
1146.34 376.454 1137.25 381.977 1137.25 381.977 cv
1137.25 381.977 1127 392.589 1129.99 393.941 cv
cp
.917647 .886275 .596078 rgb
f
1190.98 330.263 mo
1188.93 330.263 1187.07 328.606 1186.65 326.282 cv
1186.2 323.708 1187.69 321.291 1189.99 320.883 cv
1190.21 320.843 1190.43 320.824 1190.65 320.824 cv
1192.7 320.824 1194.56 322.481 1194.97 324.804 cv
1195.43 327.378 1193.94 329.795 1191.64 330.204 cv
1191.42 330.243 1191.2 330.263 1190.98 330.263 cv
.137255 .0980392 .364706 rgb
f
1163.5 320.283 mo
1163.5 320.283 1163.19 320.483 1161.27 321.725 cv
1159.35 322.968 1159.85 326.82 1160.22 327.399 cv
1160.59 327.978 1161.32 329.097 1161.32 329.097 cv
1161.32 329.097 1187.53 330.54 1190.81 329.2 cv
1194.36 327.75 1194.1 327.058 1193.72 325.551 cv
1193.58 325.013 1193.15 324.53 1192.65 324.131 cv
1191.7 323.375 1190.53 322.958 1189.33 322.839 cv
1163.5 320.283 li
cp
.917647 .886275 .596078 rgb
f
1184.02 345.414 mo
1181.99 345.414 1180.18 343.874 1179.79 341.698 cv
1179.36 339.272 1180.87 336.974 1183.17 336.566 cv
1183.4 336.524 1183.64 336.504 1183.87 336.504 cv
1185.9 336.504 1187.72 338.044 1188.1 340.22 cv
1188.54 342.646 1187.02 344.943 1184.73 345.352 cv
1184.49 345.394 1184.25 345.414 1184.02 345.414 cv
.137255 .0980392 .364706 rgb
f
1155.1 354.219 mo
1155.1 354.219 1153.33 353.538 1153.19 349.877 cv
1153.05 346.217 1154.39 343.943 1154.68 342.582 cv
1154.97 341.221 1159.63 338.448 1164.6 337.808 cv
1169.58 337.168 1185.13 339.009 1185.13 339.009 cv
1185.13 339.009 1189.69 340.138 1187.76 343.246 cv
1185.83 346.353 1181.91 347.717 1175.67 348.584 cv
1169.44 349.452 1163.64 347.104 1159.87 349.071 cv
1156.1 351.039 1155.1 354.219 1155.1 354.219 cv
cp
.917647 .886275 .596078 rgb
f
1165.07 363.37 mo
1163.02 363.37 1161.16 361.713 1160.75 359.389 cv
1160.29 356.816 1161.78 354.398 1164.08 353.99 cv
1164.31 353.95 1164.53 353.931 1164.75 353.931 cv
1166.8 353.931 1168.66 355.587 1169.07 357.911 cv
1169.53 360.485 1168.03 362.902 1165.74 363.311 cv
1165.52 363.35 1165.29 363.37 1165.07 363.37 cv
.137255 .0980392 .364706 rgb
f
1152.41 348.502 mo
1152.41 348.502 1148.62 352.598 1147.2 356.208 cv
1145.78 359.82 1147.6 366.616 1147.6 366.616 cv
1147.6 366.616 1154.91 367.047 1161.04 364.021 cv
1167.17 360.995 1169.18 354.706 1165.8 353.981 cv
1162.43 353.257 1155.1 354.219 1155.1 354.219 cv
1155.1 354.219 1156.95 346.095 1152.41 348.502 cv
cp
.917647 .886275 .596078 rgb
f
1206.46 321.418 mo
1207.15 322.49 1206.84 323.922 1205.77 324.615 cv
1204.7 325.309 1203.27 325.001 1202.57 323.929 cv
1201.88 322.856 1202.19 321.425 1203.26 320.731 cv
1204.33 320.038 1205.76 320.346 1206.46 321.418 cv
cp
.211765 .0823529 .376471 rgb
f
1200.13 354.219 mo
1200.13 354.219 1203.84 389.441 1188.24 401.59 cv
1172.63 413.738 1147.24 408.167 1141.95 413.455 cv
1136.66 418.742 1146.68 394.783 1159.45 389.954 cv
1172.23 385.124 1200.13 360.336 1200.13 354.219 cv
cp
.976471 .521569 .894118 rgb
f
1145.57 379.882 mo
1144.83 379.956 1137.42 383.789 1137.42 383.789 cv
1137.42 383.789 1128.44 390.127 1131.22 390.824 cv
1134.01 391.521 1156.16 378.831 1145.57 379.882 cv
cp
1 .980392 .843137 rgb
f
1136.24 396.954 mo
1136.24 396.954 1130.17 397.973 1128.47 401.852 cv
1126.76 405.73 1136.38 401.83 1138.05 400.158 cv
1139.72 398.486 1136.24 396.954 1136.24 396.954 cv
cp
f
1124.14 411.2 mo
1124.14 411.2 1119.64 415.754 1122.72 419.383 cv
1125.81 423.012 1128.16 422.169 1127.18 417.851 cv
1126.21 413.532 1126.05 410.492 1124.14 411.2 cv
cp
f
1148.42 356.832 mo
1148.42 356.832 1145.13 363.416 1148.42 364.582 cv
1151.7 365.748 1164.79 361.15 1164.1 358.782 cv
1163.4 356.414 1148.42 356.832 1148.42 356.832 cv
cp
f
1157.05 342.065 mo
1157.05 342.065 1152.98 347.639 1155.54 348.056 cv
1158.11 348.473 1172.81 346.035 1174.97 343.875 cv
1177.12 341.716 1157.05 342.065 1157.05 342.065 cv
cp
f
1163.1 321.9 mo
1163.1 321.9 1158.53 325.765 1161.87 327.019 cv
1165.21 328.273 1182.91 329.526 1182.07 327.019 cv
1181.23 324.511 1163.1 321.9 1163.1 321.9 cv
cp
f
347.54 648.824 mo
347.54 648.824 361.206 662.324 356.874 679.157 cv
352.54 695.991 368.873 702.324 368.873 702.324 cv
377.292 704.157 li
367.207 679.991 li
361.206 658.324 li
353.989 650.824 li
347.54 648.824 li
.282353 .278431 .317647 rgb
f
338.335 649.881 mo
344.584 646.824 li
343.207 660.824 li
353.989 678.457 li
344.874 681.324 li
335.848 675.273 li
333.059 672.07 331.448 668.012 331.278 663.768 cv
331.207 662.014 li
331.004 656.923 333.789 652.182 338.335 649.881 cv
f
366.854 680.858 mo
368.569 686.15 370.684 691.456 373.695 696.12 cv
361.023 684.173 li
343.952 659.734 344.605 660.669 345.258 661.603 cv
345.507 661.961 345.757 662.318 345.012 661.252 cv
344.567 658.786 343.397 650.428 345.461 649.271 cv
347.844 647.779 354.08 652.406 356.514 654.715 cv
362.557 660.519 361.612 664.659 366.854 680.858 cv
357.881 653.268 mo
355.613 650.96 352.647 648.646 349.705 647.387 cv
340.808 643.664 340.93 652.841 342.305 662.343 cv
352.778 675.876 351.686 674.468 350.597 673.061 cv
349.472 671.607 348.348 670.152 360.009 685.205 cv
375.331 698.463 li
377.292 700.16 li
375.755 698.069 li
375.754 698.067 li
372.078 692.863 369.748 686.658 367.969 680.568 cv
362.929 663.277 364.451 660.036 357.881 653.268 cv
.168627 .164706 .188235 rgb
f
315.511 760.09 mo
282.247 743.261 li
282.247 743.261 308.26 743.855 315.97 729.327 cv
323.68 714.799 320.033 688.018 322.4 683.389 cv
324.767 678.76 332.088 675.242 336.807 673.438 cv
341.526 671.634 358.002 699.187 359.506 702.702 cv
361.009 706.218 315.511 760.09 315.511 760.09 cv
.278431 .262745 .356863 rgb
f
191.466 868.262 mo
266.046 740.154 li
266.046 740.154 245.527 706.368 224.046 717.375 cv
224.046 717.375 213.314 724.384 209.263 758.412 cv
205.212 792.441 180.691 866.687 180.691 866.687 cv
191.466 868.262 li
.168627 .164706 .188235 rgb
f
449.69 783.884 mo
442.84 800.734 410.18 833.484 372.73 861.024 cv
335.28 888.565 308.729 910.664 279.08 932.464 cv
249.43 954.265 177.195 978.329 154.414 980.699 cv
131.634 983.079 109.01 973.534 108.42 972.004 cv
108.34 971.794 li
104.51 961.765 101.59 945.004 128.23 929.404 cv
159.15 911.284 180.69 866.684 180.69 866.684 cv
180.69 866.684 197.44 811.284 207.57 787.494 cv
217.7 763.694 224.28 727.824 266.05 740.154 cv
276.13 743.134 284.83 743.875 292.24 743.294 cv
292.24 743.284 li
309.58 741.924 319.78 733.265 323.839 728.944 cv
325.24 727.475 325.91 726.504 325.91 726.504 cv
333.83 720.685 329.88 699.454 328.56 690.464 cv
327.25 681.474 333.99 674.634 333.99 674.634 cv
364.06 658.954 414.31 731.855 414.31 731.855 cv
422.02 729.264 447.84 753.914 447.84 753.914 cv
447.84 753.914 456.54 767.045 449.69 783.884 cv
.419608 .372549 .556863 rgb
f
120.028 974.854 mo
115.345 974.854 110.869 974.188 108.42 972.004 cv
108.42 972.004 li
108.34 971.794 li
229.47 950.114 312.25 794.404 323.839 728.944 cv
325.24 727.475 325.91 726.504 325.91 726.504 cv
329.607 723.787 330.718 717.713 330.716 711.093 cv
330.715 703.531 329.264 695.258 328.56 690.464 cv
328.445 689.674 328.392 688.9 328.391 688.147 cv
328.383 680.325 333.99 674.634 333.99 674.634 cv
336.908 673.112 340.022 672.424 343.256 672.424 cv
373.345 672.424 414.31 731.855 414.31 731.855 cv
414.694 731.725 415.125 731.664 415.594 731.664 cv
424.532 731.664 447.84 753.914 447.84 753.914 cv
447.84 753.914 447.84 753.914 447.84 753.915 cv
447.84 753.915 li
447.84 753.914 447.84 753.914 447.84 753.914 cv
447.84 753.914 li
447.84 753.914 424.532 731.664 415.594 731.664 cv
415.125 731.664 414.694 731.725 414.31 731.855 cv
399.13 752.004 393.66 755.764 368.91 773.964 cv
361.81 779.185 354.02 787.135 345.26 796.944 cv
323.47 821.334 295.669 857.224 257.49 891.344 cv
203.95 939.185 165.04 970.324 127.61 974.394 cv
125.219 974.654 122.593 974.854 120.028 974.854 cv
.313725 .270588 .447059 rgb
f
292.236 743.292 mo
291.671 743.445 253.583 754.048 247.662 761.13 cv
241.695 768.268 206.657 854.264 211.804 861.262 cv
216.951 868.261 315.471 872.833 315.471 872.833 cv
294.967 887.912 li
184.965 881 li
186.083 867.475 li
180.693 866.688 li
180.693 866.688 197.438 811.283 207.567 787.489 cv
217.695 763.695 224.277 727.821 266.045 740.154 cv
276.126 743.131 284.833 743.877 292.236 743.292 cv
cp
.188235 .156863 .317647 rgb
f
449.69 783.884 mo
442.84 800.734 410.18 833.484 372.73 861.024 cv
360.349 870.124 349.17 878.634 338.669 886.724 cv
317.4 903.134 298.929 917.864 279.08 932.464 cv
249.43 954.265 165.68 992.754 142.9 995.124 cv
134.56 995.994 128.47 994.874 123.899 992.664 cv
115.98 988.834 112.64 981.744 110.14 976.084 cv
109.62 974.904 109.01 973.534 108.42 972.004 cv
112.21 975.384 120.856 975.129 127.61 974.394 cv
165.04 970.324 203.95 939.185 257.49 891.344 cv
295.669 857.224 323.47 821.334 345.26 796.944 cv
354.02 787.135 361.81 779.185 368.91 773.964 cv
393.66 755.764 399.13 752.004 414.31 731.855 cv
422.02 729.264 447.84 753.914 447.84 753.914 cv
447.84 753.914 449.01 755.674 450.149 758.734 cv
452.13 764.034 454.03 773.214 449.69 783.884 cv
.937255 .909804 .658824 rgb
f
450.149 758.734 mo
452.13 764.034 454.03 773.214 449.69 783.884 cv
442.84 800.734 410.18 833.484 372.73 861.024 cv
360.349 870.124 349.17 878.634 338.669 886.724 cv
317.4 903.134 298.929 917.864 279.08 932.464 cv
249.43 954.265 165.68 992.754 142.9 995.124 cv
134.56 995.994 128.47 994.874 123.899 992.664 cv
138.24 990.525 156.249 986.795 172.54 980.324 cv
206.54 966.824 358.04 877.975 434.04 780.654 cv
440.11 772.884 445.45 765.584 450.149 758.734 cv
.486275 .360784 .25098 rgb
f
450.149 758.734 mo
457.367 777.482 447.434 791.15 434.611 806.422 cv
407.916 837.279 373.006 861.916 344.202 883.716 cv
330.119 894.296 306.124 913.748 281.219 932.043 cv
250.64 954.703 171.12 990.509 146.642 994.754 cv
140.053 996.159 130.682 996.026 123.899 992.664 cv
129.798 995.421 136.88 995.685 143.31 994.856 cv
167.238 991.457 249.865 953.109 280.111 930.542 cv
290.758 922.665 301.688 914.197 311.626 906.461 cv
391.466 844.707 398.272 843.872 436.068 803.312 cv
444.927 792.418 457.377 778.646 450.149 758.734 cv
.227451 .196078 .172549 rgb
f
447.84 753.915 mo
447.84 753.914 447.84 753.914 447.84 753.914 cv
447.84 753.914 447.84 753.914 447.84 753.915 cv
.258824 .223529 .360784 rgb
f
343.552 869.823 mo
350.442 840.078 348.074 813.158 345.26 796.944 cv
354.02 787.135 361.81 779.185 368.91 773.964 cv
393.66 755.764 399.13 752.004 414.31 731.855 cv
414.694 731.725 415.125 731.664 415.594 731.664 cv
424.532 731.664 447.84 753.914 447.84 753.914 cv
447.84 753.914 li
447.84 753.914 447.84 753.914 447.84 753.915 cv
447.868 753.957 449.02 755.713 450.149 758.735 cv
445.45 765.584 440.11 772.884 434.04 780.654 cv
409.562 811.999 377.247 842.47 343.552 869.823 cv
.776471 .752941 .529412 rgb
f
339.139 885.359 mo
340.912 880.125 342.369 874.931 343.552 869.823 cv
377.247 842.47 409.562 811.999 434.04 780.654 cv
440.11 772.884 445.45 765.584 450.149 758.734 cv
450.151 758.74 450.153 758.745 450.155 758.75 cv
450.869 760.719 451.39 762.627 451.741 764.478 cv
452.053 766.155 452.267 767.994 452.311 769.968 cv
452.542 784.038 443.155 794.596 436.068 803.312 cv
403.156 838.631 393.74 843.83 339.139 885.359 cv
.403922 .298039 .2 rgb
f
338.669 886.724 mo
338.828 886.269 338.985 885.814 339.139 885.359 cv
393.74 843.83 403.156 838.631 436.068 803.312 cv
443.155 794.596 452.542 784.038 452.311 769.968 cv
452.402 774.102 451.747 778.825 449.69 783.884 cv
442.84 800.734 410.18 833.484 372.73 861.024 cv
360.349 870.124 349.17 878.634 338.669 886.724 cv
451.741 764.478 mo
451.39 762.627 450.869 760.719 450.155 758.75 cv
450.745 760.334 451.329 762.266 451.741 764.478 cv
.188235 .160784 .137255 rgb
f
184.433 853.299 mo
183.999 853.142 183.012 853.783 180.872 858.56 cv
177.527 866.026 180.962 866.773 180.962 866.773 cv
180.962 866.773 189.311 873.222 194.43 870.865 cv
199.55 868.509 196.784 865.729 194.854 863.104 cv
192.924 860.479 184.677 853.388 184.433 853.299 cv
cp
.0470588 .0470588 .0470588 rgb
f
184.802 843.507 mo
186.98 846.468 li
191.96 831.014 li
189.001 831.561 li
189.001 831.561 184.979 842.029 184.802 843.507 cv
cp
f
197.452 793.765 mo
200.137 784.665 li
205.133 780.991 li
202.017 794.009 li
197.452 793.765 li
cp
f
191.554 816.396 mo
192.374 815.794 194.866 807.413 194.866 807.413 cv
199.397 804.081 li
195.03 819.854 li
191.554 816.396 li
cp
f
202.28 839.318 mo
202.28 839.318 204.896 840.669 207.271 837.767 cv
209.646 834.865 206.053 828.264 202.192 823.015 cv
198.333 817.766 194.866 807.413 194.866 807.413 cv
194.866 807.413 189.046 818.626 190.425 820.5 cv
191.803 822.375 198.588 835.294 202.28 839.318 cv
cp
f
200.137 784.665 mo
200.137 784.665 210.389 800.812 212.996 805.827 cv
215.602 810.843 213.925 815.061 210.059 814.341 cv
206.194 813.621 197.452 793.765 197.452 793.765 cv
200.137 784.665 li
cp
f
209.263 758.412 mo
205.089 761.482 li
207.461 769.804 li
209.263 758.412 li
cp
f
220.956 791.885 mo
219.341 795.575 218.021 795.006 215.932 794.617 cv
213.842 794.228 204.811 779.495 204.811 779.495 cv
204.811 779.495 202.848 777.586 201.812 773.958 cv
200.776 770.33 205.089 761.482 205.089 761.482 cv
205.089 761.482 222.57 788.194 220.956 791.885 cv
cp
f
137.291 931.725 mo
136.411 931.725 135.812 931.596 135.54 931.324 cv
131.29 927.074 180.691 895.324 180.691 895.324 cv
180.691 895.324 200.019 890.747 212.66 890.747 cv
218.804 890.747 223.368 891.828 223.368 895.04 cv
223.368 904.234 150.151 931.727 137.291 931.725 cv
.52549 .47451 .662745 rgb
f
184.802 843.507 mo
184.802 843.507 195.874 857.337 200.373 856.58 cv
204.874 855.824 203.707 848.324 203.707 848.324 cv
189.001 831.561 li
184.802 843.507 li
cp
.0470588 .0470588 .0470588 rgb
f
230.54 860.38 mo
207.539 860.38 239.54 791.824 248.082 771.186 cv
254.011 756.86 271.055 754.67 280.929 754.67 cv
285.281 754.67 288.241 755.095 288.241 755.095 cv
319.134 755.095 253.54 860.38 230.54 860.38 cv
.52549 .47451 .662745 rgb
f
1507.6 803.894 mo
1497.43 799.924 li
1493.43 812.755 li
1507.6 803.894 li
cp
0 0 0 rgb
f
1550.1 745.591 mo
1534.28 742.553 li
1538.63 757.424 li
1550.1 745.591 li
f
1591.89 738.647 mo
1591.89 738.647 1610.31 747.455 1633.48 726.251 cv
1656.64 705.047 1644.74 684.878 1646.08 676.924 cv
1647.41 668.97 1657.68 663.522 1657.68 663.522 cv
1670.08 719.729 li
1632.44 761.158 li
1591.89 738.647 li
cp
.486275 .0117647 .0117647 rgb
f
1752.93 776.528 mo
1752.05 781.77 1710.7 810.389 1710.7 810.389 cv
1710.7 810.389 1623.33 869.645 1606.24 880.54 cv
1589.15 891.436 1557.27 917.245 1505.84 940.677 cv
1454.4 964.108 1429.27 937.074 1428.79 934.907 cv
1428.79 934.907 1428.27 933.52 1427.65 931.32 cv
1425.93 925.227 1423.41 912.916 1428.84 906.679 cv
1428.84 906.679 1454.91 885 1458.22 882.888 cv
1458.84 882.495 1460.2 880.374 1462 877.195 cv
1463.39 874.739 1465.05 871.652 1466.82 868.226 cv
1475.08 852.338 1486.07 829.297 1486.07 829.297 cv
1486.07 829.297 1542.31 741.509 1558.34 733.1 cv
1558.5 733.018 1558.66 732.945 1558.8 732.875 cv
1559.01 732.781 1559.22 732.692 1559.44 732.609 cv
1559.46 732.606 li
1565.37 730.316 1574.64 731.31 1584.88 732.95 cv
1602.11 735.708 1622.06 740.3 1633.27 734.151 cv
1634.46 733.502 1635.59 732.826 1636.67 732.119 cv
1652.15 722.011 1657.29 706.336 1655.6 694.734 cv
1653.8 682.321 1650.17 669.781 1650.17 669.781 cv
1650.17 669.781 1654.39 662.247 1659.69 663.711 cv
1660.01 663.799 1660.44 663.992 1660.97 664.275 cv
1669.25 668.759 1701.89 696.346 1708.95 703.985 cv
1716.46 712.112 1730.98 734.658 1729.92 740.985 cv
1729.92 740.985 1730.37 741.199 1731.04 741.601 cv
1733.3 742.934 1738.08 746.341 1737.34 750.788 cv
1737.34 750.788 1753.81 771.286 1752.93 776.528 cv
.027451 .027451 .027451 rgb
f
1659.47 673.862 mo
1658.07 669.424 1659.58 666.148 1660.97 664.275 cv
1660.44 663.992 1660.01 663.799 1659.69 663.711 cv
1654.39 662.247 1650.11 669.432 1650.11 669.432 cv
1650.11 669.432 1653.8 682.321 1655.6 694.734 cv
1657.4 707.147 1651.39 724.214 1633.27 734.151 cv
1623.69 739.404 1607.73 736.818 1592.54 734.233 cv
1579.39 731.994 1566.81 729.755 1559.46 732.606 cv
1559.52 732.593 li
1559.28 732.684 1559.03 732.773 1558.8 732.875 cv
1543.41 739.783 1486.07 829.297 1486.07 829.297 cv
1486.01 829.399 1469.78 863.448 1462 877.195 cv
1461.89 878.376 1482.85 870.744 1486.07 867.031 cv
1490.1 862.372 1540.46 796.686 1568.02 758.114 cv
1577.43 744.94 1593.47 738.268 1609.47 740.748 cv
1618.2 742.102 1625.84 742.739 1630.18 741.617 cv
1644.67 737.866 1660.4 722.35 1666.81 707.813 cv
1673.22 693.274 1661.77 681.117 1659.47 673.862 cv
.956863 .109804 .109804 rgb
f
1479.55 933.544 mo
1438.33 945.613 li
1438.33 945.613 1429.27 937.074 1428.79 934.904 cv
1428.79 934.904 1423.49 921.924 1424.86 912.264 cv
1425.22 909.653 1426.08 907.294 1427.65 905.484 cv
1427.65 905.484 1441.33 895.204 1450.48 888.464 cv
1454.25 885.683 1457.26 883.504 1458.22 882.884 cv
1458.22 882.884 1496.93 879.424 1512.18 900.424 cv
1527.43 921.424 1479.55 933.544 1479.55 933.544 cv
.937255 .819608 .611765 rgb
f
1755.2 776.523 mo
1754.49 780.759 1725.44 800.455 1721.87 802.903 cv
1721.86 802.903 li
1715.51 807.233 1621.25 870.973 1606.24 880.544 cv
1590.37 890.693 1562.29 913.106 1518.37 934.733 cv
1502.72 942.442 1467.31 958.47 1449.96 960.244 cv
1446.09 960.664 1444.89 960.164 1444.89 960.164 cv
1444.81 960.064 1432.03 949.584 1428.79 934.904 cv
1428.79 934.904 1428.27 933.523 1427.65 931.323 cv
1446.73 933.387 1472.31 924.302 1489.9 916.604 cv
1523.6 901.899 1555.79 875.299 1582.3 849.994 cv
1587.78 844.766 1594.05 838.577 1599.38 833.244 cv
1607.99 824.655 1609.22 823.577 1611.96 821.414 cv
1631.59 805.846 1708.25 756.261 1729.5 742.594 cv
1729.51 742.594 li
1730.05 742.244 1730.55 741.924 1731.04 741.603 cv
1734.4 743.586 1738.01 746.924 1737.33 750.783 cv
1737.41 750.884 1756.07 771.276 1755.2 776.523 cv
.690196 .956863 .917647 rgb
f
1449.96 960.244 mo
1449.96 960.244 li
1449.96 960.244 li
1449.98 960.242 1450 960.241 1450.02 960.239 cv
1450 960.241 1449.98 960.242 1449.96 960.244 cv
.592157 .666667 .654902 rgb
f
1449.96 960.244 mo
1430.02 931.523 li
1431.08 931.59 1432.21 931.627 1433.44 931.627 cv
1434.81 931.627 1436.29 931.58 1437.89 931.474 cv
1457 958.994 li
1454.05 959.677 1451.77 960.056 1450.02 960.239 cv
1450 960.241 1449.98 960.242 1449.96 960.244 cv
1449.96 960.244 li
.490196 .654902 .627451 rgb
f
1474.17 953.764 mo
1474.17 953.763 li
1474.35 953.7 1474.52 953.636 1474.7 953.572 cv
1474.52 953.637 1474.35 953.701 1474.17 953.764 cv
1478.56 952.144 mo
1479.19 951.907 1479.82 951.666 1480.45 951.423 cv
1480.45 951.424 li
1479.81 951.671 1479.18 951.911 1478.56 952.144 cv
.592157 .666667 .654902 rgb
f
1456.53 928.355 mo
1456.53 928.353 li
1456.67 928.318 1456.82 928.283 1456.96 928.247 cv
1456.82 928.283 1456.68 928.319 1456.53 928.355 cv
.568627 .607843 .529412 rgb
f
1474.17 953.763 mo
1456.53 928.355 li
1456.68 928.319 1456.82 928.283 1456.96 928.247 cv
1458.94 927.753 1461.01 927.186 1463.17 926.533 cv
1480.45 951.424 li
1479.82 951.666 1479.19 951.907 1478.56 952.144 cv
1477.22 952.649 1475.94 953.123 1474.7 953.572 cv
1474.52 953.636 1474.35 953.7 1474.17 953.763 cv
.490196 .654902 .627451 rgb
f
1482.33 919.783 mo
1483.57 919.283 1484.83 918.762 1486.11 918.223 cv
1486.11 918.228 li
1484.88 918.745 1483.62 919.265 1482.33 919.783 cv
.568627 .607843 .529412 rgb
f
1496.63 944.764 mo
1479.94 920.734 li
1480.73 920.426 1481.53 920.109 1482.33 919.783 cv
1483.62 919.265 1484.88 918.745 1486.11 918.228 cv
1502.69 942.094 li
1500.6 943.033 1498.58 943.924 1496.63 944.764 cv
.490196 .654902 .627451 rgb
f
1518.37 934.733 mo
1518.37 934.733 li
1518.37 934.733 li
1520.36 933.753 1522.32 932.771 1524.25 931.789 cv
1524.25 931.794 li
1522.33 932.774 1520.36 933.754 1518.37 934.733 cv
.278431 .352941 .341176 rgb
f
1501.83 910.889 mo
1501.82 910.884 li
1503.75 909.884 1505.67 908.844 1507.57 907.773 cv
1507.58 907.78 li
1505.67 908.849 1503.75 909.886 1501.83 910.889 cv
.568627 .607843 .529412 rgb
f
1518.37 934.733 mo
1501.83 910.889 li
1503.75 909.886 1505.67 908.849 1507.58 907.78 cv
1524.25 931.789 li
1522.32 932.771 1520.36 933.753 1518.37 934.733 cv
1518.37 934.733 li
.490196 .654902 .627451 rgb
f
1539.43 923.705 mo
1539.43 923.705 li
1539.53 923.651 1539.63 923.595 1539.72 923.542 cv
1539.62 923.596 1539.53 923.651 1539.43 923.705 cv
.592157 .666667 .654902 rgb
f
1539.43 923.705 mo
1539.42 923.694 li
1541.36 922.619 1543.25 921.544 1545.11 920.478 cv
1545.11 920.483 li
1543.35 921.5 1541.55 922.516 1539.72 923.542 cv
1539.63 923.595 1539.53 923.651 1539.43 923.704 cv
1522.21 898.898 mo
1522.21 898.895 li
1524.03 897.715 1525.83 896.504 1527.61 895.273 cv
1527.62 895.284 li
1525.83 896.512 1524.03 897.716 1522.21 898.898 cv
.278431 .352941 .341176 rgb
f
1539.42 923.694 mo
1522.21 898.898 li
1524.03 897.716 1525.83 896.512 1527.62 895.284 cv
1545.11 920.478 li
1543.25 921.544 1541.36 922.619 1539.42 923.694 cv
.490196 .654902 .627451 rgb
f
1559.8 911.693 mo
1559.8 911.689 li
1561.68 910.519 1563.52 909.36 1565.31 908.218 cv
1565.31 908.224 li
1563.52 909.374 1561.69 910.523 1559.8 911.693 cv
1541.45 885.266 mo
1541.45 885.264 li
1543.19 883.943 1544.9 882.613 1546.59 881.273 cv
1546.59 881.276 li
1544.89 882.619 1543.18 883.951 1541.45 885.266 cv
.278431 .352941 .341176 rgb
f
1559.8 911.689 mo
1541.45 885.266 li
1543.18 883.951 1544.89 882.619 1546.59 881.276 cv
1565.31 908.218 li
1563.52 909.36 1561.68 910.519 1559.8 911.689 cv
.490196 .654902 .627451 rgb
f
1580.58 898.139 mo
1582.08 897.119 1583.53 896.121 1584.94 895.149 cv
1584.94 895.154 li
1583.54 896.119 1582.08 897.118 1580.58 898.139 cv
.592157 .666667 .654902 rgb
f
1579.57 898.823 mo
1579.57 898.818 li
1581.42 897.561 1583.21 896.334 1584.94 895.146 cv
1584.94 895.149 li
1583.53 896.121 1582.08 897.119 1580.58 898.139 cv
1580.25 898.366 1579.91 898.594 1579.57 898.823 cv
1562.78 867.829 mo
1563.45 867.247 1564.11 866.665 1564.76 866.084 cv
1564.77 866.092 li
1564.11 866.671 1563.45 867.251 1562.78 867.829 cv
.278431 .352941 .341176 rgb
f
1579.57 898.818 mo
1559.83 870.374 li
1560.83 869.525 1561.81 868.677 1562.78 867.829 cv
1563.45 867.251 1564.11 866.671 1564.77 866.092 cv
1584.94 895.146 li
1583.21 896.334 1581.42 897.561 1579.57 898.818 cv
.490196 .654902 .627451 rgb
f
1577.53 854.508 mo
1577.52 854.504 li
1579.16 852.974 1580.76 851.464 1582.3 849.994 cv
1580.73 851.495 1579.14 853.001 1577.53 854.508 cv
.278431 .352941 .341176 rgb
f
1598.97 885.403 mo
1577.53 854.508 li
1579.14 853.001 1580.73 851.495 1582.3 849.994 cv
1582.3 849.994 li
1604.36 881.764 li
1602.69 882.853 1600.9 884.073 1598.97 885.403 cv
.490196 .654902 .627451 rgb
f
1618.65 872.403 mo
1618.65 872.398 li
1620.15 871.399 1621.74 870.341 1623.4 869.234 cv
1621.74 870.343 1620.15 871.404 1618.65 872.403 cv
.592157 .666667 .654902 rgb
f
1618.65 872.398 mo
1618.64 872.391 li
1620.34 871.265 1622.14 870.06 1624.06 868.785 cv
1624.06 868.794 li
1623.84 868.941 1623.62 869.088 1623.4 869.234 cv
1621.74 870.341 1620.15 871.399 1618.65 872.398 cv
1595.17 837.437 mo
1596.45 836.162 1597.68 834.948 1598.84 833.789 cv
1597.65 834.973 1596.42 836.195 1595.17 837.437 cv
.278431 .352941 .341176 rgb
f
1618.64 872.391 mo
1594.7 837.903 li
1594.86 837.747 1595.02 837.591 1595.17 837.437 cv
1596.42 836.195 1597.65 834.973 1598.84 833.789 cv
1599.02 833.606 1599.2 833.424 1599.38 833.244 cv
1624.06 868.785 li
1622.14 870.06 1620.34 871.265 1618.64 872.391 cv
.490196 .654902 .627451 rgb
f
1638.26 859.294 mo
1638.26 859.292 li
1639.89 858.2 1641.55 857.086 1643.22 855.961 cv
1641.55 857.089 1639.89 858.2 1638.26 859.294 cv
.592157 .666667 .654902 rgb
f
1638.26 859.292 mo
1638.26 859.284 li
1640.02 858.097 1641.82 856.89 1643.66 855.658 cv
1643.66 855.664 li
1643.52 855.763 1643.37 855.863 1643.22 855.961 cv
1641.55 857.086 1639.89 858.2 1638.26 859.292 cv
1612.03 821.363 mo
1612.03 821.359 1612.04 821.354 1612.04 821.35 cv
1612.04 821.354 1612.03 821.359 1612.03 821.363 cv
1612.1 821.309 mo
1612.1 821.307 1612.1 821.305 1612.1 821.303 cv
1612.1 821.305 1612.1 821.307 1612.1 821.309 cv
.278431 .352941 .341176 rgb
f
1638.26 859.284 mo
1611.96 821.414 li
1611.98 821.397 1612.01 821.38 1612.03 821.363 cv
1612.03 821.359 1612.04 821.354 1612.04 821.35 cv
1612.06 821.336 1612.08 821.323 1612.1 821.309 cv
1612.1 821.307 1612.1 821.305 1612.1 821.303 cv
1613.53 820.179 1615.23 818.896 1617.15 817.483 cv
1643.66 855.658 li
1641.82 856.89 1640.02 858.097 1638.26 859.284 cv
.490196 .654902 .627451 rgb
f
1657.83 846.134 mo
1657.83 846.132 li
1658.1 845.949 1658.38 845.764 1658.65 845.581 cv
1658.38 845.765 1658.1 845.949 1657.83 846.134 cv
.592157 .666667 .654902 rgb
f
1631.07 807.586 mo
1631.07 807.584 li
1632.79 806.394 1634.58 805.164 1636.43 803.894 cv
1636.43 803.895 li
1634.59 805.16 1632.8 806.391 1631.07 807.586 cv
.278431 .352941 .341176 rgb
f
1657.83 846.132 mo
1631.07 807.586 li
1632.8 806.391 1634.59 805.16 1636.43 803.895 cv
1663.22 842.494 li
1661.7 843.521 1660.18 844.548 1658.65 845.581 cv
1658.38 845.764 1658.1 845.949 1657.83 846.132 cv
.490196 .654902 .627451 rgb
f
1650.96 794.052 mo
1652.61 792.938 1654.28 791.815 1655.97 790.693 cv
1655.97 790.694 li
1654.28 791.823 1652.61 792.942 1650.96 794.052 cv
.278431 .352941 .341176 rgb
f
1677.39 832.933 mo
1650.57 794.314 li
1650.7 794.227 1650.83 794.139 1650.96 794.052 cv
1652.61 792.942 1654.28 791.823 1655.97 790.694 cv
1682.77 829.294 li
1681.02 830.474 1679.22 831.693 1677.39 832.933 cv
.490196 .654902 .627451 rgb
f
1670.2 781.237 mo
1670.2 781.235 li
1672.01 780.033 1673.82 778.844 1675.63 777.653 cv
1675.63 777.653 li
1673.83 778.845 1672.01 780.04 1670.2 781.237 cv
.278431 .352941 .341176 rgb
f
1696.92 819.724 mo
1670.2 781.237 li
1672.01 780.04 1673.83 778.845 1675.63 777.654 cv
1702.31 816.074 li
1700.7 817.164 1698.89 818.384 1696.92 819.724 cv
.490196 .654902 .627451 rgb
f
1719.52 804.495 mo
1720.65 803.729 1721.44 803.188 1721.86 802.903 cv
1721.86 802.903 li
1721.05 803.455 1720.27 803.987 1719.52 804.495 cv
.592157 .666667 .654902 rgb
f
1689.93 768.27 mo
1689.92 768.264 li
1691.76 767.063 1693.57 765.884 1695.36 764.714 cv
1695.36 764.717 li
1693.58 765.881 1691.76 767.069 1689.93 768.27 cv
.278431 .352941 .341176 rgb
f
1716.48 806.544 mo
1689.93 768.27 li
1691.76 767.069 1693.58 765.881 1695.36 764.717 cv
1721.86 802.903 li
1721.44 803.188 1720.65 803.729 1719.52 804.495 cv
1718.43 805.23 1717.41 805.917 1716.48 806.544 cv
.490196 .654902 .627451 rgb
f
1709.69 755.393 mo
1709.69 755.393 li
1709.76 755.348 1709.83 755.302 1709.9 755.256 cv
1709.83 755.302 1709.76 755.348 1709.69 755.394 cv
.278431 .352941 .341176 rgb
f
1735.86 793.104 mo
1709.69 755.393 li
1709.76 755.348 1709.83 755.302 1709.9 755.256 cv
1711.72 754.085 1713.47 752.952 1715.15 751.864 cv
1741.11 789.264 li
1739.42 790.524 1737.65 791.814 1735.86 793.104 cv
.490196 .654902 .627451 rgb
f
1737.09 750.872 mo
1623.93 818.958 li
1623.93 818.958 1547.82 895.591 1495.58 917.924 cv
1465.45 930.806 1429.54 937.711 1428.37 935.328 cv
1428.37 935.328 1427.48 933.922 1426.84 932.08 cv
1426.67 931.599 1427.06 931.097 1427.56 931.144 cv
1437.89 932.077 1457.91 930.584 1489.91 916.606 cv
1544.56 892.739 1593.53 838.131 1608.66 824.183 cv
1621.38 812.467 1703.38 758.022 1729.46 741.219 cv
1729.91 740.926 1730.5 740.926 1730.94 741.228 cv
1732.97 742.582 1736.79 745.849 1737.82 748.953 cv
1738.06 749.68 1737.75 750.477 1737.09 750.872 cv
cp
.486275 .0117647 .0117647 rgb
f
1752.22 769.563 mo
1752.48 769.171 1753.07 769.204 1753.29 769.619 cv
1754.81 772.375 1755.42 775.237 1755.2 776.528 cv
1754.32 781.771 1710.7 810.389 1710.7 810.389 cv
1710.7 810.389 1623.33 869.645 1606.24 880.54 cv
1589.15 891.436 1557.27 917.245 1505.84 940.677 cv
1454.4 964.108 1444.89 960.159 1444.89 960.159 cv
1444.89 960.159 1441.69 958.143 1438.57 954.64 cv
1438.34 954.373 1438.49 953.946 1438.85 953.897 cv
1454.18 951.811 1486.63 945.384 1523.02 925.847 cv
1574.32 898.309 1595.16 879.855 1615.44 866.922 cv
1635.09 854.396 1744.13 781.57 1752.22 769.563 cv
cp
.498039 .776471 .729412 rgb
f
1755.2 776.528 mo
1754.95 777.456 1754.26 778.168 1753.64 778.872 cv
1746.73 786.471 1718.9 805.244 1710.3 810.983 cv
1688 826.15 1627.62 867.221 1606.63 880.881 cv
1591.13 890.867 1565.82 910.531 1529.72 929.311 cv
1511.6 938.798 1486.63 950.143 1467.12 956.268 cv
1461.35 958.075 1459.26 958.509 1456.15 959.25 cv
1453.36 959.792 li
1451.17 960.17 1447.03 960.753 1444.89 960.159 cv
1447.03 960.728 1451.15 960.104 1453.34 959.701 cv
1456.12 959.13 li
1459.48 958.293 1461.35 957.887 1467.05 956.035 cv
1485.71 949.955 1511.46 938.209 1529.41 928.723 cv
1565.55 909.747 1590.83 889.929 1606.09 880.039 cv
1627.41 866.28 1686.48 826.41 1710 810.537 cv
1712.97 808.486 1746.07 786.98 1753.62 778.852 cv
1754.24 778.154 1754.94 777.453 1755.2 776.528 cv
cp
.180392 .266667 .25098 rgb
f
1444.01 915.694 mo
1436.67 915.694 1430.29 914.312 1424.86 912.264 cv
1425.22 909.653 1426.08 907.294 1427.65 905.484 cv
1427.65 905.484 1441.33 895.204 1450.48 888.464 cv
1467.05 889.164 1487.4 887.504 1496.68 892.674 cv
1512.12 901.273 1481.68 912.424 1449.68 915.424 cv
1447.73 915.608 1445.84 915.694 1444.01 915.694 cv
.972549 .905882 .74902 rgb
f
1519.43 885.403 mo
1505.32 885.403 1500.51 876.803 1507.35 869.262 cv
1510.39 869.813 1513.41 870.126 1516.35 870.126 cv
1522.77 870.127 1528.79 868.637 1533.66 864.849 cv
1540.98 859.158 1539.43 849.956 1534.09 840.244 cv
1540.1 831.964 1546.7 822.389 1553.17 812.755 cv
1553.18 812.755 1553.19 812.755 1553.2 812.755 cv
1559.62 812.756 1565.64 811.265 1570.51 807.477 cv
1577.43 802.097 1576.42 793.58 1571.77 784.46 cv
1581.94 768.703 1589.25 756.957 1589.25 756.957 cv
1590.64 756.235 1592.19 755.905 1593.85 755.905 cv
1609.33 755.905 1633.82 784.696 1614.1 791.893 cv
1592.27 799.863 1536.43 885.403 1519.43 885.403 cv
.137255 .137255 .137255 rgb
f
1467.43 849.994 mo
1467.11 852.824 1511.89 881.774 1533.66 864.849 cv
1555.43 847.924 1498.68 799.924 1497.43 799.924 cv
1489.93 799.924 1469.07 835.493 1467.43 849.994 cv
.027451 .027451 .027451 rgb
f
1531.9 866.09 mo
1533.28 865.016 1534.65 863.919 1535.67 862.528 cv
1540.79 855.681 1536.6 846.021 1532.12 838.726 cv
1521.46 821.363 1499.55 801.677 1499.46 801.576 cv
1498.8 801.008 1498.18 800.37 1497.43 799.924 cv
1498.99 800.737 1500.35 801.878 1501.74 802.936 cv
1514.79 813.156 1533.18 831.628 1538.15 847.477 cv
1539.19 850.881 1539.68 854.633 1538.69 858.168 cv
1538.06 860.394 1536.68 862.447 1535.14 863.812 cv
1534.16 864.784 1532.54 865.669 1531.9 866.09 cv
cp
.419608 .411765 .427451 rgb
f
1504.28 792.622 mo
1503.96 795.453 1548.74 824.403 1570.51 807.477 cv
1592.28 790.553 1535.53 742.553 1534.28 742.553 cv
1526.78 742.553 1505.92 778.122 1504.28 792.622 cv
.027451 .027451 .027451 rgb
f
1570.51 807.478 mo
1576.19 802.484 1575.75 795.885 1572.9 788.854 cv
1568.2 777.597 1556.93 764.949 1548.45 756.11 cv
1545.32 752.883 1540.62 748.194 1537.39 745.241 cv
1536.82 744.724 1535.08 743.16 1534.45 742.719 cv
1534.3 742.57 1534.09 742.611 1533.87 742.623 cv
1533.66 742.644 1533.45 742.687 1533.24 742.745 cv
1533.44 742.663 1533.65 742.595 1533.86 742.549 cv
1534.06 742.511 1534.32 742.439 1534.53 742.588 cv
1536.12 743.45 1540.4 746.932 1541.79 748.073 cv
1553.64 758.008 1569.02 773.924 1574.34 788.294 cv
1575.54 791.593 1576.32 795.166 1575.89 798.735 cv
1575.44 802.296 1573.42 805.582 1570.51 807.478 cv
cp
.419608 .411765 .427451 rgb
f
1516.05 864.034 mo
1502.06 864.034 1476.23 846.937 1474.93 842.257 cv
1473.26 836.257 1488.93 814.257 1488.93 814.257 cv
1489.53 813.9 1490.23 813.731 1491.03 813.731 cv
1501.85 813.731 1529.54 844.976 1524.25 859.294 cv
1523 862.675 1520 864.034 1516.05 864.034 cv
.137255 .137255 .137255 rgb
f
1552.31 806.805 mo
1538.11 806.804 1514.18 795.438 1509.93 788.591 cv
1503.93 778.924 1530.27 749.258 1530.27 749.258 cv
1539.68 749.258 1564.6 782.924 1562.87 799.924 cv
1562.36 804.88 1558.16 806.805 1552.31 806.805 cv
f
224.192 330.324 mo
220.132 331.783 li
218.04 337.824 li
221.668 335.667 li
224.192 330.324 li
.627451 .607843 .490196 rgb
f
305.533 292.374 mo
305.533 292.374 304.296 288.657 294.309 276.216 cv
293.219 274.859 292.083 273.597 290.926 272.427 cv
280.975 262.37 264.47 262.754 254.88 273.154 cv
251.853 276.436 249.059 280.03 247.234 283.618 cv
241.087 295.693 199.542 377.309 199.542 377.309 cv
305.533 292.374 li
.0588235 .0588235 .0588235 rgb
f
132.938 490.465 mo
135.796 494.58 147.277 498.687 158.124 503.491 cv
169.53 508.543 180.366 514.179 185.255 513.471 cv
194.796 512.092 197.897 510.745 197.897 510.745 cv
195.06 506.66 li
202.079 503.399 li
205.25 505.637 li
218.04 499.744 li
217.754 495.739 li
223.957 493.045 li
225.197 495.413 li
238.232 489.185 li
238.708 485.22 li
244.154 481.437 li
247.809 484.954 li
261.153 475.684 li
259.51 471.576 li
265.773 467.226 li
269.05 470.198 li
282.394 460.928 li
281.78 457.72 li
287.688 454.02 li
289.474 456.01 li
304.179 445.794 li
302.832 442.692 li
309.83 438.235 li
312.005 441.367 li
325.621 431.908 li
323.717 428.587 li
330.39 423.952 li
333.174 427.67 li
346.926 418.117 li
344.55 414.115 li
350.866 410.131 li
353.326 413.671 li
367.509 405.029 li
365.038 400.891 li
371.207 396.404 li
374.045 400.489 li
387.89 390.063 li
385.242 386.251 li
390.081 382.889 li
392.706 385.507 li
404.291 378.064 li
402.679 373.128 li
407.456 370.415 li
407.456 370.415 409.598 371.753 417.358 366.361 cv
425.119 360.97 430.552 361.234 430.552 361.234 cv
434.637 358.396 li
434.637 358.396 436.179 352.481 436.511 350.634 cv
436.844 348.788 445.337 341.98 447.067 342.292 cv
448.798 342.604 454.376 342.06 454.376 342.06 cv
459.947 337.584 li
459.947 337.584 458.359 327.577 460.201 325.288 cv
461.867 323.218 448.497 310.492 439.04 301.324 cv
438.046 300.359 437.27 295.34 436.54 294.449 cv
431.41 288.199 428.156 286.591 428.156 286.591 cv
428.156 286.591 402.766 238.419 389.073 239.05 cv
389.073 239.05 369.489 220.489 357.621 218.991 cv
357.618 218.993 li
356.122 218.804 354.754 218.887 353.558 219.31 cv
342.869 223.102 354.758 248.353 349.994 258.93 cv
345.23 269.507 311.892 286.611 292.873 287.711 cv
292.05 287.758 291.228 287.807 290.411 287.863 cv
276.024 288.801 262.712 290.58 257.888 291.266 cv
257.876 291.267 li
256.646 291.442 255.97 291.545 255.97 291.545 cv
201.645 373.175 li
194.295 378.281 li
194.295 378.281 182.43 405.499 171.337 421.885 cv
170.074 423.752 168.822 425.477 167.596 427.008 cv
166.422 428.473 165.278 429.761 164.172 430.816 cv
155.421 439.18 141.301 449.547 133.326 457.432 cv
130.025 460.699 127.775 463.541 127.398 465.636 cv
126.155 472.524 127.001 481.322 132.291 489.494 cv
132.497 489.819 132.714 490.144 132.938 490.465 cv
.294118 .32549 .439216 rgb
f
374.85 365.984 mo
346.66 387.214 li
346.66 387.214 344.06 338.144 346.01 310.144 cv
347.77 284.844 381.5 247.224 387.99 240.204 cv
388.69 239.454 389.07 239.054 389.07 239.054 cv
402.77 238.424 428.16 286.594 428.16 286.594 cv
428.16 286.594 439.04 293.574 440.689 304.714 cv
440.858 305.854 374.85 365.984 374.85 365.984 cv
cp
.141176 .156863 .247059 rgb
f
443.4 314.354 mo
374.85 365.984 li
373.62 357.154 372.58 347.584 372.04 337.894 cv
370.689 313.704 380.93 268.154 387.99 240.204 cv
388.69 239.454 389.07 239.054 389.07 239.054 cv
402.77 238.424 428.16 286.594 428.16 286.594 cv
443.4 314.354 li
cp
.0156863 .0235294 .0470588 rgb
f
127.398 465.636 mo
127.398 465.636 155.007 494.917 166.203 493.6 cv
177.399 492.281 248.22 453.581 248.22 453.581 cv
248.22 453.581 244.597 447.727 239.852 441.621 cv
235.011 435.398 229.001 428.915 224.46 428.097 cv
218.908 427.097 204.543 428.683 192.981 429.289 cv
192.974 429.291 li
190.169 429.438 187.53 429.527 185.22 429.509 cv
181.624 429.48 178.831 429.191 177.465 428.445 cv
175.123 427.166 173.02 424.557 171.337 421.885 cv
170.074 423.752 168.822 425.478 167.596 427.008 cv
166.422 428.474 165.278 429.761 164.172 430.815 cv
151.798 442.642 128.688 458.474 127.398 465.636 cv
cp
.286275 .317647 .607843 rgb
f
314.65 420.754 mo
262.629 456.894 li
262.629 456.894 254.1 448.974 239.85 441.624 cv
227.77 435.384 211.569 429.554 192.98 429.295 cv
192.97 429.295 li
190.43 429.254 187.85 429.324 185.22 429.504 cv
182.95 429.664 180.65 429.914 178.319 430.264 cv
173.16 431.024 169.7 429.814 167.63 427.034 cv
167.6 427.004 li
168.82 425.474 170.07 423.754 171.34 421.884 cv
182.43 405.494 194.29 378.284 194.29 378.284 cv
201.64 373.175 li
255.97 291.544 li
255.97 291.544 256.649 291.444 257.879 291.264 cv
257.89 291.264 li
259.74 291.005 262.85 290.574 266.8 290.104 cv
273.11 289.334 281.56 288.444 290.41 287.864 cv
265.959 318.664 206.26 394.834 208.23 401.824 cv
210.7 410.604 262.16 407.964 278.78 406.914 cv
295.41 405.854 314.65 420.754 314.65 420.754 cv
.141176 .156863 .247059 rgb
f
266.8 290.104 mo
206.85 375.454 li
197.41 380.054 li
197.41 380.054 184.79 409.324 178.79 417.324 cv
175.81 421.304 171.35 424.664 167.63 427.034 cv
167.6 427.004 li
168.82 425.474 170.07 423.754 171.34 421.884 cv
182.43 405.494 194.29 378.284 194.29 378.284 cv
201.64 373.175 li
255.97 291.544 li
255.97 291.544 256.649 291.444 257.879 291.264 cv
257.89 291.264 li
259.74 291.005 262.85 290.574 266.8 290.104 cv
.768627 .054902 .054902 rgb
f
326.08 412.814 mo
191.58 492.934 li
158.103 504.574 li
147.252 499.764 135.8 494.584 132.94 490.464 cv
130.98 487.644 129.57 484.734 128.61 481.854 cv
126.68 476.094 126.54 470.404 127.4 465.634 cv
127.78 463.544 130.02 460.694 133.33 457.434 cv
138.6 465.014 150.83 463.904 172.79 453.094 cv
194.75 442.274 244.64 415.294 272.12 407.304 cv
294.82 400.704 316.82 408.764 323.8 411.764 cv
325.28 412.404 326.08 412.814 326.08 412.814 cv
cp
.141176 .156863 .247059 rgb
f
326.08 412.814 mo
191.58 492.934 li
157.481 504.683 li
146.632 499.873 135.8 494.584 132.94 490.464 cv
130.98 487.644 129.57 484.734 128.61 481.854 cv
158.6 478.174 208.71 469.574 241.68 450.994 cv
285.49 426.304 296.01 418.374 323.8 411.764 cv
325.28 412.404 326.08 412.814 326.08 412.814 cv
cp
.0156863 .0235294 .0470588 rgb
f
224.317 374.475 mo
224.317 374.475 245.51 369.844 270.61 380.694 cv
295.711 391.546 329.216 417.322 329.216 417.322 cv
387.605 370.074 li
387.605 370.074 332.983 371.104 312.26 355.22 cv
291.537 339.337 277.454 328.268 249.202 336.217 cv
220.95 344.166 224.317 374.475 224.317 374.475 cv
.141176 .156863 .247059 rgb
f
132.938 490.465 mo
135.216 493.744 142.174 498.152 150.396 502.239 cv
152.492 503.282 155.617 503.02 157.821 503.996 cv
169.228 509.048 180.366 514.179 185.255 513.471 cv
194.796 512.092 197.897 510.745 197.897 510.745 cv
195.06 506.66 li
202.079 503.398 li
205.25 505.637 li
218.04 499.744 li
217.754 495.739 li
223.957 493.045 li
225.197 495.413 li
238.232 489.185 li
238.708 485.22 li
244.154 481.437 li
247.809 484.954 li
261.153 475.684 li
259.51 471.577 li
265.773 467.226 li
269.05 470.198 li
282.394 460.928 li
281.78 457.721 li
287.688 454.02 li
289.474 456.01 li
304.179 445.794 li
302.832 442.692 li
309.83 438.235 li
312.004 441.367 li
325.621 431.908 li
323.717 428.587 li
330.39 423.952 li
333.174 427.67 li
346.926 418.117 li
344.55 414.115 li
350.866 410.131 li
353.326 413.671 li
367.509 405.029 li
365.039 400.891 li
371.208 396.404 li
374.045 400.489 li
387.89 390.063 li
385.242 386.251 li
390.081 382.889 li
392.707 385.506 li
404.292 378.064 li
402.679 373.128 li
407.457 370.415 li
407.457 370.415 409.598 371.753 417.358 366.361 cv
425.12 360.97 430.552 361.234 430.552 361.234 cv
434.637 358.396 li
434.637 358.396 436.179 352.48 436.511 350.634 cv
436.844 348.788 445.337 341.98 447.067 342.292 cv
448.798 342.604 454.375 342.06 454.375 342.06 cv
459.947 337.584 li
459.947 337.584 460.626 329.844 462.468 327.556 cv
464.009 325.642 454.309 307.954 445.361 298.048 cv
444.63 297.235 443.902 296.478 443.187 295.784 cv
442.193 294.819 441.219 293.981 440.289 293.304 cv
430.494 286.179 428.156 286.591 428.156 286.591 cv
428.156 286.591 436.721 291.167 427.053 305.146 cv
417.387 319.129 348.678 359.468 312.064 404.949 cv
275.453 450.432 170.207 493.643 146.4 492.991 cv
140.569 492.831 135.984 490.707 132.291 489.494 cv
132.497 489.819 132.714 490.144 132.938 490.465 cv
cp
.713726 .807843 .803922 rgb
f
462.47 327.554 mo
460.63 329.844 459.95 337.584 459.95 337.584 cv
454.38 342.064 li
454.38 342.064 448.8 342.604 447.069 342.294 cv
445.34 341.984 436.84 348.784 436.51 350.634 cv
436.24 352.174 435.13 356.514 434.76 357.934 cv
434.68 358.224 434.64 358.394 434.64 358.394 cv
433 359.534 li
430.55 361.234 li
430.55 361.234 425.12 360.974 417.359 366.364 cv
409.6 371.754 407.46 370.414 407.46 370.414 cv
402.68 373.124 li
404.29 378.064 li
392.71 385.504 li
390.08 382.884 li
385.24 386.254 li
387.89 390.064 li
374.049 400.484 li
371.21 396.404 li
365.04 400.894 li
367.51 405.024 li
353.33 413.674 li
350.87 410.134 li
344.55 414.114 li
346.93 418.114 li
333.17 427.674 li
330.39 423.954 li
323.72 428.584 li
325.62 431.904 li
312 441.364 li
309.83 438.234 li
302.83 442.694 li
304.18 445.794 li
289.47 456.014 li
287.69 454.024 li
281.78 457.724 li
282.39 460.924 li
269.05 470.194 li
265.77 467.224 li
259.51 471.574 li
261.15 475.684 li
247.81 484.954 li
244.15 481.434 li
238.71 485.224 li
238.229 489.184 li
225.2 495.414 li
223.959 493.044 li
217.75 495.744 li
218.04 499.744 li
205.25 505.634 li
202.08 503.394 li
195.06 506.664 li
197.9 510.744 li
197.9 510.744 194.8 512.094 185.26 513.474 cv
180.939 514.094 170.979 511.164 160.85 506.984 cv
159.53 506.434 158.2 505.864 156.88 505.284 cv
154.67 504.304 152.49 503.284 150.4 502.244 cv
152.44 501.754 154.76 501.344 157.39 501.024 cv
204.21 495.204 285.03 437.264 375.9 364.884 cv
420.08 329.684 438.3 309.504 445.36 298.044 cv
447.15 300.024 448.96 302.304 450.71 304.714 cv
457.73 314.384 463.7 326.024 462.47 327.554 cv
cp
.890196 .972549 .988235 rgb
f
255.344 323.17 mo
255.465 323.082 255.581 322.998 255.692 322.917 cv
257.604 321.521 257.638 318.64 255.72 317.254 cv
255.462 317.067 255.185 316.886 254.893 316.711 cv
256.593 316.826 257.936 318.242 257.936 319.972 cv
257.936 321.545 256.825 322.859 255.344 323.17 cv
.00392157 .00392157 .0117647 rgb
f
255.72 317.254 mo
257.638 318.64 257.604 321.521 255.692 322.917 cv
254.976 323.44 254.037 324.111 252.809 324.964 cv
250.234 326.752 241.366 326.512 234.409 326.272 cv
229.591 326.106 225.691 325.94 225.432 326.448 cv
230.988 315.533 li
230.988 315.533 239.94 312.64 246.093 313.748 cv
249.745 314.406 253.449 315.611 255.72 317.254 cv
.788235 .764706 .6 rgb
f
262.576 308.114 mo
260.77 308.114 259.307 306.65 259.307 304.845 cv
259.307 303.04 260.77 301.577 262.576 301.577 cv
264.381 301.577 265.844 303.04 265.844 304.845 cv
265.844 306.65 264.381 308.114 262.576 308.114 cv
.00392157 .00392157 .0117647 rgb
f
237.24 299.841 mo
237.24 299.841 245.979 296.516 254.383 298.03 cv
262.788 299.544 266.426 306.075 263.884 307.84 cv
261.342 309.606 238.817 306.691 236.242 308.479 cv
233.668 310.268 232.614 312.338 232.614 312.338 cv
232.614 312.338 232.156 303.372 237.24 299.841 cv
cp
.788235 .764706 .6 rgb
f
234.946 343.987 mo
234.615 343.676 234.349 343.296 234.169 342.871 cv
234.615 343.129 235.05 343.343 235.467 343.511 cv
235.29 343.668 235.117 343.826 234.946 343.987 cv
.00392157 .00392157 .0117647 rgb
f
237.183 344.871 mo
236.318 344.871 235.531 344.535 234.946 343.987 cv
235.117 343.826 235.29 343.668 235.467 343.511 cv
236.159 343.789 236.801 343.938 237.357 343.938 cv
237.831 343.938 238.243 343.83 238.571 343.602 cv
239.604 342.884 240.152 341.939 240.356 340.816 cv
240.418 341.068 240.451 341.331 240.451 341.602 cv
240.451 343.408 238.988 344.871 237.183 344.871 cv
f
230.988 315.533 mo
230.988 315.533 227.195 316.664 225.432 326.448 cv
223.67 336.232 235.303 345.872 238.571 343.602 cv
241.839 341.332 240.253 336.781 238.279 331.558 cv
236.305 326.335 230.988 315.533 230.988 315.533 cv
.886275 .843137 .603922 rgb
f
223.22 363.531 mo
221.652 363.531 220.342 362.428 220.025 360.954 cv
220.914 361.627 221.82 362.014 222.675 362.014 cv
223.948 362.014 225.108 361.156 225.929 359.107 cv
225.539 360.445 225.233 361.755 224.994 363.008 cv
224.483 363.339 223.874 363.531 223.22 363.531 cv
.00392157 .00392157 .0117647 rgb
f
224.994 363.008 mo
225.233 361.755 225.539 360.445 225.929 359.107 cv
225.982 358.974 226.035 358.834 226.086 358.69 cv
226.342 359.157 226.488 359.693 226.488 360.263 cv
226.488 361.414 225.893 362.426 224.994 363.008 cv
f
220.132 331.783 mo
220.132 331.783 228.119 350.701 226.451 357.455 cv
224.783 364.208 220.535 362.586 217.512 358.232 cv
214.487 353.878 213.709 345.397 213.709 345.397 cv
213.709 345.397 216.982 332.895 220.132 331.783 cv
.886275 .843137 .603922 rgb
f
211.475 380.331 mo
210.594 380.331 209.795 379.983 209.207 379.416 cv
209.573 379.759 209.947 379.979 210.325 380.047 cv
210.372 380.055 210.417 380.059 210.462 380.059 cv
211.576 380.059 212.173 377.503 212.464 373.946 cv
213.786 374.365 214.743 375.602 214.743 377.062 cv
214.743 378.868 213.281 380.331 211.475 380.331 cv
.00392157 .00392157 .0117647 rgb
f
212.195 352.452 mo
212.195 352.452 205.54 356.324 203.797 361.158 cv
203.122 363.029 206.479 379.354 210.325 380.047 cv
214.171 380.739 212.195 352.452 212.195 352.452 cv
.886275 .843137 .603922 rgb
f
187.419 418.301 mo
185.614 418.301 184.151 416.838 184.151 415.033 cv
184.151 413.228 185.614 411.764 187.419 411.764 cv
189.224 411.764 190.688 413.228 190.688 415.033 cv
190.688 416.838 189.224 418.301 187.419 418.301 cv
.00392157 .00392157 .0117647 rgb
f
182.138 401.298 mo
182.319 402.502 183.099 414.689 187.272 415.441 cv
193.118 416.494 189.007 389.751 189.007 389.751 cv
189.007 389.751 181.486 396.977 182.138 401.298 cv
cp
.886275 .843137 .603922 rgb
f
257.888 291.266 mo
258.922 291.291 326.896 292.721 348.795 275.105 cv
370.865 257.352 365.485 244.132 358.674 234.328 cv
351.864 224.524 357.618 218.993 357.618 218.993 cv
356.123 218.804 354.754 218.887 353.559 219.31 cv
342.869 223.102 354.758 248.353 349.994 258.93 cv
345.23 269.507 311.892 286.611 292.873 287.711 cv
277.564 288.595 262.988 290.541 257.888 291.266 cv
cp
.286275 .317647 .607843 rgb
f
257.888 291.266 mo
258.922 291.291 326.896 292.721 348.795 275.105 cv
370.865 257.352 365.485 244.132 358.674 234.328 cv
351.864 224.524 357.618 218.993 357.618 218.993 cv
356.123 218.804 354.754 218.887 353.559 219.31 cv
342.869 223.102 354.758 248.353 349.994 258.93 cv
345.23 269.507 311.892 286.611 292.873 287.711 cv
277.564 288.595 262.988 290.541 257.888 291.266 cv
cp
f
357.618 218.993 mo
340.664 217.499 356.002 246.918 350.802 259.259 cv
346.268 269.486 323.03 280.348 312.389 284.122 cv
294.904 290.234 295.201 287.215 257.888 291.266 cv
291.053 285.333 292.516 289.346 311.75 282.339 cv
322.225 278.513 339.338 270.222 346.73 262.043 cv
349.278 259.242 350.546 257.081 350.343 249.931 cv
349.846 237.995 343.648 216.846 357.618 218.993 cv
cp
.364706 .427451 .807843 rgb
f
462.47 327.554 mo
460.63 329.844 459.95 337.584 459.95 337.584 cv
454.38 342.064 li
454.38 342.064 448.8 342.604 447.069 342.294 cv
445.34 341.984 436.84 348.784 436.51 350.634 cv
436.24 352.174 435.13 356.514 434.76 357.934 cv
434.15 358.464 433.56 359.004 433 359.534 cv
430.55 361.234 li
430.55 361.234 425.12 360.974 417.359 366.364 cv
409.6 371.754 407.46 370.414 407.46 370.414 cv
402.68 373.124 li
404.29 378.064 li
392.71 385.504 li
390.08 382.884 li
385.24 386.254 li
387.89 390.064 li
374.049 400.484 li
371.21 396.404 li
365.04 400.894 li
367.51 405.024 li
353.33 413.674 li
350.87 410.134 li
344.55 414.114 li
346.93 418.114 li
333.17 427.674 li
330.39 423.954 li
323.72 428.584 li
325.62 431.904 li
312 441.364 li
309.83 438.234 li
302.83 442.694 li
304.18 445.794 li
289.47 456.014 li
287.69 454.024 li
281.78 457.724 li
282.39 460.924 li
269.05 470.194 li
265.77 467.224 li
259.51 471.574 li
261.15 475.684 li
247.81 484.954 li
244.15 481.434 li
238.71 485.224 li
238.229 489.184 li
225.2 495.414 li
223.959 493.044 li
217.75 495.744 li
218.04 499.744 li
205.25 505.634 li
202.08 503.394 li
195.06 506.664 li
197.9 510.744 li
197.9 510.744 194.8 512.094 185.26 513.474 cv
180.939 514.094 170.979 511.164 160.85 506.984 cv
211.47 491.454 294.76 434.574 294.76 434.574 cv
294.76 434.574 379.71 372.994 420.04 335.654 cv
435.82 321.054 445.169 311.244 450.71 304.714 cv
451.24 305.434 451.76 306.174 452.26 306.914 cv
453.93 309.324 455.5 311.794 456.89 314.154 cv
460.8 320.764 463.31 326.514 462.47 327.554 cv
cp
.713726 .807843 .803922 rgb
f
459.86 337.533 mo
454.314 341.893 li
448.088 342.414 447.547 342.017 446.789 342.066 cv
445.214 342.029 437.298 347.744 436.186 350.474 cv
436.13 350.63 434.399 357.601 434.374 357.701 cv
430.395 360.761 li
426.487 360.787 421.644 362.678 418.473 364.959 cv
411.103 370.262 407.152 369.87 407.152 369.87 cv
407.012 369.948 401.689 372.928 401.893 372.814 cv
401.949 372.989 403.579 378.084 403.478 377.77 cv
392.819 384.537 li
392.714 384.431 390.006 381.704 390.174 381.874 cv
389.915 382.052 384.546 385.747 384.776 385.588 cv
384.112 386.045 li
384.197 386.169 386.814 389.977 386.746 389.876 cv
374.251 399.243 li
374.135 399.075 371.273 394.948 371.421 395.162 cv
371.166 395.347 364.17 400.418 364.513 400.17 cv
363.852 400.649 li
363.928 400.777 366.354 404.851 366.274 404.717 cv
353.597 412.419 li
353.507 412.29 350.973 408.628 351.132 408.857 cv
350.907 408.999 343.253 413.8 343.253 413.8 cv
343.316 413.906 345.798 418.095 345.643 417.833 cv
333.393 426.311 li
333.294 426.178 330.433 422.344 330.612 422.584 cv
330.51 422.655 322.419 428.293 322.419 428.293 cv
322.646 428.688 324.405 431.749 324.329 431.615 cv
312.235 440.047 li
311.45 438.919 310.002 436.839 310.085 436.957 cv
309.848 437.109 301.668 442.341 301.668 442.341 cv
301.991 443.08 303.087 445.585 303.038 445.473 cv
289.606 454.841 li
289.499 454.723 287.747 452.771 287.85 452.885 cv
287.669 452.998 280.816 457.306 280.816 457.306 cv
280.858 457.522 281.473 460.714 281.439 460.539 cv
269.111 469.166 li
268.958 469.028 265.621 466.04 265.829 466.226 cv
265.611 466.379 258.602 471.307 258.602 471.307 cv
258.652 471.43 260.324 475.554 260.272 475.426 cv
247.87 484.146 li
247.746 484.027 243.968 480.434 244.207 480.661 cv
244.043 480.776 238.179 484.909 238.179 484.909 cv
238.166 485.028 237.702 489.041 237.727 488.828 cv
225.387 494.837 li
225.238 494.558 224.078 492.388 224.143 492.511 cv
223.974 492.586 217.379 495.524 217.379 495.524 cv
217.4 495.786 217.715 499.654 217.707 499.552 cv
205.268 505.417 li
205.129 505.321 201.953 503.119 202.094 503.217 cv
201.962 503.28 194.969 506.641 194.969 506.641 cv
201.532 515.831 195.058 506.79 195.149 506.689 cv
202.063 503.571 li
202.201 503.671 205.353 505.941 205.228 505.852 cv
214.4 501.727 202.02 507.294 218.369 499.942 cv
218.352 499.663 218.11 495.866 218.117 495.971 cv
223.768 493.574 li
223.912 493.856 225.059 496.098 225.003 495.989 cv
228.921 494.15 234.83 491.377 238.729 489.547 cv
238.743 489.439 239.27 485.285 239.236 485.545 cv
244.085 482.207 li
244.412 482.524 247.848 485.867 247.741 485.762 cv
258.616 478.294 252.147 482.737 262.025 475.953 cv
261.398 474.357 260.37 471.737 260.415 471.852 cv
265.7 468.222 li
265.942 468.443 269.171 471.399 268.979 471.224 cv
278.294 464.796 274.123 467.675 283.34 461.315 cv
283.3 461.101 282.719 458.025 282.742 458.146 cv
287.526 455.163 li
287.645 455.296 289.444 457.315 289.33 457.187 cv
291.458 455.714 303.535 447.355 305.321 446.12 cv
305.193 445.825 303.929 442.907 303.991 443.051 cv
309.571 439.51 li
309.932 440.033 311.861 442.827 311.759 442.68 cv
314.896 440.511 323.78 434.363 326.91 432.198 cv
326.685 431.801 324.943 428.747 325.02 428.88 cv
330.167 425.321 li
330.266 425.453 333.129 429.28 332.95 429.04 cv
341.477 423.092 339.706 424.328 348.218 418.391 cv
348.138 418.256 345.711 414.195 345.848 414.424 cv
350.612 411.412 li
350.701 411.538 353.229 415.162 353.067 414.931 cv
357.655 412.121 364.127 408.157 368.747 405.327 cv
368.686 405.225 366.124 400.959 366.229 401.135 cv
371.003 397.647 li
371.113 397.805 374.008 401.948 373.854 401.727 cv
377.974 398.611 385.463 392.949 389.04 390.244 cv
388.958 390.127 386.278 386.32 386.37 386.451 cv
389.996 383.896 li
390.097 383.995 392.782 386.641 392.612 386.473 cv
398.524 382.629 399.345 382.095 405.105 378.35 cv
405.055 378.197 403.367 373.113 403.471 373.426 cv
407.529 371.096 li
410.641 371.879 416.628 367.508 419.067 365.9 cv
426.008 361.454 430.597 361.742 430.71 361.708 cv
430.848 361.609 435.148 358.162 435.042 358.259 cv
435.15 358.16 li
436.528 352.097 436.869 350.549 437.029 350.327 cv
438.352 348.166 443.211 344.278 445.669 342.984 cv
447.687 342.036 445.4 343.074 454.451 342.233 cv
454.561 342.142 460.149 337.545 460.042 337.633 cv
460.32 335.136 460.532 332.631 461.413 329.735 cv
460.58 332.258 460.17 334.897 459.86 337.533 cv
cp
.184314 .207843 .207843 rgb
f
456.89 314.154 mo
442.97 331.174 412.58 356.994 410.04 356.994 cv
406.87 356.994 405.04 355.994 406.37 352.494 cv
407.71 348.994 422.209 337.654 441.21 318.654 cv
446.25 313.614 449.78 309.804 452.26 306.914 cv
453.93 309.324 455.5 311.794 456.89 314.154 cv
cp
.768627 .054902 .054902 rgb
f
201.645 373.175 mo
195.795 380.95 li
193.04 380.059 li
194.543 377.207 li
194.543 377.207 198.588 373.175 201.645 373.175 cv
cp
.627451 .607843 .490196 rgb
f
202.294 394.587 mo
201.165 394.587 200.17 394.015 199.583 393.145 cv
201.508 392.907 202.767 392.095 202.294 390.574 cv
202.083 389.894 201.736 389.083 201.305 388.202 cv
201.617 388.103 201.949 388.05 202.294 388.05 cv
204.1 388.05 205.563 389.513 205.563 391.318 cv
205.563 393.123 204.1 394.587 202.294 394.587 cv
.00392157 .00392157 .0117647 rgb
f
194.543 377.207 mo
194.543 377.207 200.987 386.368 202.294 390.574 cv
203.602 394.78 191.659 393.57 189.007 389.751 cv
186.354 385.933 194.543 377.207 194.543 377.207 cv
.886275 .843137 .603922 rgb
f
220.698 358.085 mo
217.915 358.083 215.207 345.991 215.207 345.991 cv
218.04 337.824 li
218.04 337.824 224.04 356.658 221.116 357.991 cv
220.977 358.054 220.838 358.085 220.698 358.085 cv
.933333 .905882 .717647 rgb
f
234.913 341.603 mo
232.066 341.602 226.68 327.658 226.68 327.658 cv
230.04 319.972 li
230.04 319.972 238.123 338.741 235.54 341.324 cv
235.35 341.515 235.14 341.603 234.913 341.603 cv
f
208.836 374.346 mo
207.421 374.345 205.873 359.991 205.873 359.991 cv
209.883 356.994 li
209.883 356.994 210.706 370.991 209.207 373.991 cv
209.085 374.234 208.961 374.346 208.836 374.346 cv
f
195.841 391.318 mo
193.776 391.318 190.411 387.99 190.411 387.99 cv
192.374 380.95 li
192.374 380.95 198.085 385.391 197.342 389.751 cv
197.147 390.896 196.577 391.318 195.841 391.318 cv
f
656.066 393.557 mo
728.163 282.095 li
733.349 274.078 743.45 270.727 752.354 274.173 cv
759.841 277.07 768.328 281.118 773.798 286.104 cv
785.499 296.77 786.018 305.271 786.018 305.271 cv
674.575 429.316 li
656.066 393.557 li
.0745098 .278431 .0823529 rgb
f
767.408 298.183 mo
767.408 298.183 786.794 307.45 811.166 285.14 cv
835.539 262.831 823.016 247.034 824.42 238.666 cv
825.823 230.297 834.871 224.308 834.871 224.308 cv
849.674 278.277 li
810.076 321.867 li
767.408 298.183 li
cp
f
939.235 338.039 mo
938.31 343.554 892.415 373.664 892.415 373.664 cv
892.415 373.664 800.485 436.009 782.505 447.473 cv
764.524 458.936 625.54 508.699 602.29 503.074 cv
602.29 503.074 595.262 503.214 594.608 500.9 cv
592.799 494.49 590.141 481.537 595.863 474.974 cv
595.863 474.974 623.285 452.164 626.77 449.943 cv
627.419 449.529 628.852 447.298 630.751 443.954 cv
632.215 441.369 633.954 438.12 635.823 434.516 cv
644.512 417.801 656.066 393.557 656.066 393.557 cv
656.066 393.557 715.239 301.194 732.112 292.345 cv
732.278 292.26 732.443 292.182 732.599 292.109 cv
732.818 292.01 733.039 291.917 733.272 291.829 cv
733.288 291.826 li
739.508 289.417 749.26 290.463 760.033 292.188 cv
778.161 295.09 799.154 299.921 810.951 293.453 cv
812.194 292.769 813.383 292.058 814.52 291.314 cv
830.805 280.679 836.213 264.187 834.44 251.98 cv
832.546 238.92 829.29 229.311 829.29 229.311 cv
829.29 229.311 833.171 217.799 838.748 219.339 cv
839.082 219.432 839.531 219.635 840.088 219.932 cv
848.799 224.651 883.147 253.676 890.574 261.713 cv
898.476 270.264 913.753 293.986 912.637 300.642 cv
912.637 300.642 913.105 300.867 913.815 301.29 cv
916.186 302.693 921.222 306.277 920.437 310.956 cv
920.437 310.956 940.161 332.523 939.235 338.039 cv
.117647 .388235 .141176 rgb
f
771.71 428.874 mo
757.33 438.044 li
734.39 428.735 li
679.51 406.474 li
669.74 402.504 li
677.15 389.624 li
688.81 394.464 li
745.53 418.004 li
771.71 428.874 li
.14902 .737255 .203922 rgb
f
783.05 409.925 mo
768.67 419.094 li
751.6 412.164 li
693.39 388.544 li
681.08 383.554 li
688.49 370.674 li
702.67 376.554 li
762.7 401.474 li
783.05 409.925 li
f
795.51 392.525 mo
781.13 401.684 li
768.02 396.364 li
706.62 371.454 li
693.54 366.154 li
700.95 353.275 li
715.89 359.474 li
779.09 385.704 li
795.51 392.525 li
f
809.73 377.144 mo
795.36 386.315 li
783.47 381.494 li
719.08 355.364 li
707.76 350.775 li
715.17 337.894 li
728.36 343.374 li
794.53 370.834 li
809.73 377.144 li
f
734.39 428.735 mo
734.39 428.735 li
679.51 406.474 li
688.81 394.464 li
745.53 418.004 li
734.39 428.735 li
.27451 .929412 .364706 rgb
f
751.6 412.164 mo
751.6 412.164 li
693.39 388.544 li
702.67 376.554 li
762.7 401.474 li
751.6 412.164 li
f
768.02 396.364 mo
768.02 396.364 li
706.62 371.454 li
713.855 362.104 li
776.541 388.159 li
768.02 396.364 li
f
783.47 381.494 mo
783.47 381.494 li
719.08 355.364 li
726.25 346.1 li
791.816 373.45 li
783.47 381.494 li
f
890.574 261.713 mo
887.961 263.379 877.769 260.365 867.306 265.575 cv
856.844 270.785 844.858 300.031 839.271 300.875 cv
833.683 301.721 816.656 294.232 816.656 294.232 cv
814.52 291.313 li
830.805 280.679 836.213 264.187 834.44 251.98 cv
832.546 238.92 829.29 229.311 829.29 229.311 cv
829.29 229.311 833.171 217.799 838.748 219.339 cv
839.083 219.432 839.531 219.635 840.088 219.932 cv
848.799 224.651 883.146 253.676 890.574 261.713 cv
cp
.054902 .686275 .133333 rgb
f
635.823 434.516 mo
649.211 503.237 li
605.848 515.937 li
602.54 508.574 li
601.669 506.507 595.112 503.18 594.608 500.9 cv
594.608 500.9 588.079 483.905 595.863 474.974 cv
595.863 474.974 623.285 452.164 626.77 449.943 cv
627.419 449.529 628.852 447.298 630.751 443.954 cv
632.215 441.369 633.954 438.12 635.823 434.516 cv
.168627 .498039 .184314 rgb
f
840.088 219.932 mo
838.625 221.904 837.036 225.35 838.512 230.021 cv
840.928 237.653 852.985 250.443 846.233 265.74 cv
839.486 281.035 822.939 297.36 807.689 301.307 cv
792.923 305.129 741.672 289.545 733.288 291.826 cv
739.508 289.417 749.26 290.462 760.033 292.188 cv
778.161 295.09 799.154 299.921 810.952 293.453 cv
830.016 282.997 836.334 265.041 834.44 251.98 cv
832.546 238.92 829.29 229.311 829.29 229.311 cv
829.29 229.311 833.171 217.799 838.748 219.339 cv
839.083 219.432 839.531 219.635 840.088 219.932 cv
cp
.152941 .168627 .156863 rgb
f
760.033 292.188 mo
749.936 311.413 640.744 454.622 636.632 457.244 cv
632.276 460.021 631.044 458.088 630.648 447.858 cv
630.599 446.503 630.636 445.195 630.75 443.954 cv
634.141 437.961 639.021 428.381 643.593 419.175 cv
650.146 405.982 656.066 393.557 656.066 393.557 cv
656.066 393.557 716.403 299.377 732.599 292.109 cv
738.773 289.341 748.855 290.395 760.033 292.188 cv
cp
f
642.164 434.21 mo
642.164 434.21 645.357 435.375 648.417 431.046 cv
651.477 426.717 643.593 419.175 643.593 419.175 cv
645.027 416.28 li
645.027 416.28 643.278 415.299 640.07 418.193 cv
636.861 421.088 634.938 427.92 634.938 427.92 cv
634.938 427.92 636.694 432.699 642.164 434.21 cv
cp
.917647 .886275 .596078 rgb
f
655.109 395.558 mo
655.109 395.558 650.84 394.729 649.088 397.266 cv
647.336 399.803 644.374 404.741 643.766 407.175 cv
643.421 408.553 648.085 415.631 654.076 414.699 cv
660.068 413.767 661.41 408.665 658.946 404.8 cv
656.482 400.936 653.6 398.699 653.6 398.699 cv
655.109 395.558 li
cp
f
660.703 380.41 mo
660.703 380.41 658.737 382.853 660.739 385.992 cv
662.741 389.132 664.551 393.413 669.255 392.623 cv
673.958 391.833 672.693 377.449 669.212 373.504 cv
665.732 369.561 660.703 380.41 660.703 380.41 cv
cp
f
674.445 365.695 mo
674.445 365.695 682.447 377.643 686.04 375.352 cv
689.633 373.061 689.959 372.969 688.186 367.305 cv
686.413 361.641 681.521 354.205 681.521 354.205 cv
681.521 354.205 671.823 361.583 674.445 365.695 cv
cp
f
694.84 333.614 mo
694.84 333.614 694.402 333.893 691.208 335.93 cv
689.066 337.294 687.236 341.161 686.261 343.563 cv
685.731 344.87 685.7 346.324 686.194 347.646 cv
687.329 350.682 689.913 356.106 694.208 357.292 cv
700.25 358.961 701.195 356.363 701.978 351.699 cv
702.499 348.59 699.808 344.042 697.957 341.356 cv
696.799 339.678 695.958 337.802 695.432 335.832 cv
694.84 333.614 li
cp
f
704.979 317.939 mo
704.979 317.939 704.486 315.808 700.199 321.711 cv
695.913 327.615 696.991 330.288 696.991 330.288 cv
696.991 330.288 698.318 332.74 701.216 334.652 cv
704.602 336.887 709.585 340.091 713.832 334.261 cv
716.854 330.11 711.661 325.106 708.417 322.567 cv
706.874 321.359 705.674 319.771 704.979 317.939 cv
704.979 317.939 li
cp
f
939.23 338.034 mo
938.31 343.554 892.41 373.664 892.41 373.664 cv
892.41 373.664 806.74 431.764 784.63 446.104 cv
783.83 446.624 783.12 447.074 782.5 447.474 cv
764.52 458.934 730.99 486.094 676.87 510.744 cv
622.75 535.394 612.75 531.244 612.75 531.244 cv
612.75 531.244 609.85 528.864 606.4 524.775 cv
603.8 521.694 600.89 517.644 598.67 512.904 cv
598.4 512.344 598.15 511.784 597.9 511.204 cv
597.03 509.134 596.31 506.954 595.81 504.675 cv
595.81 504.675 595.26 503.215 594.61 500.904 cv
605.15 502.094 625.36 500.594 660.11 485.424 cv
717.61 460.304 769.13 402.854 785.06 388.174 cv
789.68 383.914 803.11 374.394 819.84 363.034 cv
852 341.194 896.35 312.524 913.82 301.294 cv
915.97 302.564 920.33 305.644 920.51 309.714 cv
920.53 310.114 920.51 310.534 920.44 310.954 cv
920.44 310.954 930.72 322.204 936.09 330.534 cv
938.16 333.735 939.49 336.514 939.23 338.034 cv
.568627 .729412 .737255 rgb
f
939.23 338.034 mo
938.31 343.554 892.41 373.664 892.41 373.664 cv
892.41 373.664 806.74 431.764 784.63 446.104 cv
813.04 409.554 819.56 380.994 819.84 363.034 cv
852 341.194 896.35 312.524 913.82 301.294 cv
915.97 302.564 920.33 305.644 920.51 309.714 cv
920.53 310.114 920.51 310.534 920.44 310.954 cv
920.44 310.954 930.72 322.204 936.09 330.534 cv
938.16 333.735 939.49 336.514 939.23 338.034 cv
.529412 .686275 .686275 rgb
f
919.929 311.362 mo
795.506 392.521 li
795.506 392.521 710.007 468.555 663.73 493.981 cv
633.513 510.583 610.795 513.136 598.666 512.906 cv
598.401 512.348 598.146 511.783 597.905 511.204 cv
597.034 509.136 595.109 503.516 594.607 500.899 cv
605.151 502.092 625.358 500.597 660.109 485.419 cv
717.614 460.308 769.134 402.853 785.055 388.177 cv
798.337 375.941 883.99 319.039 912.095 300.903 cv
912.97 300.337 914.109 300.384 914.92 301.039 cv
916.9 302.638 919.852 306.099 920.765 309.13 cv
921.019 309.973 920.666 310.881 919.929 311.362 cv
cp
.741176 .941176 .956863 rgb
f
612.852 531.278 mo
612.779 531.257 612.745 531.243 612.745 531.243 cv
612.745 531.243 611.834 530.494 610.424 529.113 cv
611.82 530.478 612.729 531.227 612.75 531.244 cv
612.748 531.244 612.747 531.243 612.745 531.243 cv
612.747 531.243 612.748 531.244 612.75 531.244 cv
612.75 531.244 612.75 531.244 612.75 531.244 cv
612.75 531.244 612.782 531.258 612.852 531.278 cv
939.238 338.022 mo
939.238 338.02 939.238 338.017 939.239 338.015 cv
939.238 338.017 939.238 338.019 939.238 338.022 cv
939.241 338.004 mo
939.241 338.002 939.241 337.999 939.242 337.997 cv
939.241 337.999 939.241 338.002 939.241 338.004 cv
939.243 337.987 mo
939.243 337.985 939.244 337.982 939.244 337.979 cv
939.244 337.982 939.243 337.984 939.243 337.987 cv
939.245 337.969 mo
939.246 337.967 939.246 337.964 939.246 337.962 cv
939.246 337.964 939.246 337.967 939.245 337.969 cv
939.248 337.951 mo
939.248 337.949 939.248 337.947 939.249 337.945 cv
939.248 337.947 939.248 337.949 939.248 337.951 cv
939.25 337.932 mo
939.25 337.931 939.25 337.929 939.251 337.927 cv
939.25 337.929 939.25 337.931 939.25 337.932 cv
939.252 337.911 mo
939.253 337.911 939.253 337.91 939.253 337.91 cv
939.253 337.91 939.253 337.911 939.252 337.911 cv
938.521 334.882 mo
938.52 334.881 938.52 334.881 938.52 334.88 cv
938.52 334.88 938.52 334.882 938.521 334.882 cv
938.51 334.858 mo
938.507 334.852 938.504 334.845 938.502 334.839 cv
938.504 334.845 938.507 334.851 938.51 334.858 cv
938.5 334.836 mo
938.262 334.296 937.973 333.721 937.643 333.117 cv
937.642 333.116 937.642 333.115 937.641 333.114 cv
937.636 333.104 937.63 333.094 937.625 333.084 cv
937.624 333.083 937.623 333.081 937.622 333.08 cv
937.617 333.07 937.612 333.061 937.606 333.051 cv
937.605 333.049 937.605 333.048 937.604 333.046 cv
937.271 332.442 936.896 331.809 936.487 331.155 cv
937.322 332.489 938.015 333.737 938.5 334.836 cv
.568627 .729412 .737255 rgb
f
909.182 362.329 mo
909.209 362.31 909.234 362.292 909.261 362.273 cv
922.371 353.189 938.469 341.453 939.217 338.102 cv
939.224 338.08 939.23 338.059 939.235 338.039 cv
938.688 341.302 922.395 353.177 909.182 362.329 cv
939.217 338.098 mo
939.222 338.076 939.226 338.055 939.23 338.034 cv
939.251 337.909 939.262 337.776 939.262 337.635 cv
939.266 336.54 938.653 334.961 937.643 333.117 cv
937.973 333.721 938.262 334.296 938.5 334.836 cv
938.501 334.837 938.501 334.838 938.502 334.839 cv
938.504 334.845 938.507 334.852 938.51 334.858 cv
938.513 334.865 938.516 334.872 938.52 334.88 cv
938.52 334.881 938.52 334.881 938.521 334.882 cv
939.059 336.11 939.334 337.149 939.253 337.91 cv
939.253 337.91 939.253 337.911 939.252 337.911 cv
939.252 337.916 939.251 337.922 939.251 337.927 cv
939.25 337.929 939.25 337.931 939.25 337.932 cv
939.25 337.936 939.249 337.941 939.249 337.945 cv
939.248 337.947 939.248 337.949 939.248 337.951 cv
939.247 337.955 939.247 337.958 939.246 337.962 cv
939.246 337.964 939.246 337.967 939.245 337.969 cv
939.245 337.973 939.245 337.976 939.244 337.979 cv
939.244 337.982 939.243 337.985 939.243 337.987 cv
939.243 337.99 939.242 337.994 939.242 337.997 cv
939.241 337.999 939.241 338.002 939.241 338.004 cv
939.24 338.008 939.239 338.012 939.239 338.015 cv
939.238 338.017 939.238 338.02 939.238 338.022 cv
939.237 338.027 939.236 338.033 939.235 338.039 cv
939.235 338.039 li
939.235 338.039 li
939.229 338.058 939.223 338.078 939.217 338.098 cv
937.641 333.114 mo
937.636 333.104 937.63 333.094 937.625 333.084 cv
937.63 333.094 937.636 333.104 937.641 333.114 cv
937.622 333.08 mo
937.617 333.07 937.612 333.061 937.606 333.051 cv
937.612 333.061 937.617 333.07 937.622 333.08 cv
937.604 333.046 mo
937.166 332.252 936.656 331.409 936.09 330.534 cv
936.09 330.534 li
936.09 330.533 936.09 330.532 936.09 330.531 cv
936.226 330.741 936.358 330.949 936.487 331.155 cv
936.896 331.809 937.271 332.442 937.604 333.046 cv
.0666667 .282353 .105882 rgb
f
615.198 531.507 mo
614.93 531.507 614.686 531.501 614.467 531.491 cv
613.83 531.454 613.254 531.373 612.75 531.244 cv
612.729 531.227 611.82 530.478 610.424 529.113 cv
609.321 528.033 607.914 526.566 606.401 524.77 cv
622.161 522.699 655.96 516.07 694.947 495.141 cv
748.918 466.168 770.846 446.752 792.19 433.145 cv
793.095 432.568 794.18 431.871 795.427 431.064 cv
792.745 435.14 789.785 439.335 786.518 443.644 cv
783.895 445.369 782.339 446.389 782.099 446.545 cv
759.895 460.936 724.222 490.356 658.333 518.271 cv
652.01 520.906 630.009 529.933 618.119 531.332 cv
616.915 531.461 615.954 531.507 615.198 531.507 cv
613.294 531.375 mo
613.082 531.339 612.939 531.304 612.852 531.278 cv
612.782 531.258 612.75 531.244 612.75 531.244 cv
612.75 531.244 612.75 531.244 612.75 531.244 cv
612.923 531.293 613.105 531.337 613.294 531.375 cv
.321569 .533333 .545098 rgb
f
786.518 443.644 mo
789.785 439.335 792.745 435.14 795.427 431.064 cv
823.589 412.849 934.679 338.796 936.09 330.534 cv
936.09 330.534 936.09 330.534 936.09 330.534 cv
937.99 333.472 939.267 336.055 939.262 337.635 cv
939.262 337.776 939.251 337.909 939.23 338.034 cv
939.226 338.055 939.222 338.076 939.217 338.098 cv
939.215 338.105 939.213 338.111 939.211 338.118 cv
938.873 339.105 936.803 341.155 933.378 344.025 cv
910.19 362.122 809.033 428.84 786.518 443.644 cv
909.261 362.273 mo
919.604 354.822 928.099 348.449 933.378 344.025 cv
935.397 342.45 936.825 341.242 937.559 340.47 cv
938.198 339.761 938.916 339.048 939.211 338.118 cv
939.213 338.113 939.215 338.107 939.217 338.102 cv
938.469 341.453 922.371 353.189 909.261 362.273 cv
.301961 .501961 .505882 rgb
f
615.82 531.593 mo
614.88 531.593 614.036 531.525 613.308 531.378 cv
613.587 531.425 613.983 531.472 614.522 531.494 cv
614.778 531.508 615.044 531.515 615.32 531.515 cv
616.15 531.515 617.066 531.454 618.052 531.34 cv
621.707 530.953 627.638 529.791 636.97 526.764 cv
640.639 525.574 644.836 524.096 649.624 522.263 cv
649.661 522.249 649.697 522.236 649.734 522.221 cv
649.741 522.219 649.745 522.217 649.752 522.215 cv
657.252 519.342 666.204 515.602 676.87 510.744 cv
701.076 499.719 721.164 488.191 737.583 477.791 cv
757.875 464.939 772.566 453.809 782.505 447.473 cv
800.485 436.009 892.415 373.664 892.415 373.664 cv
892.415 373.664 900.066 368.644 909.182 362.329 cv
864.266 394.681 784.726 447.219 783.173 448.229 cv
759.315 463.601 725.13 492.008 658.707 519.178 cv
651.62 521.976 626.96 531.593 615.82 531.593 cv
.180392 .258824 .258824 rgb
f
614.522 531.494 mo
613.983 531.472 613.587 531.425 613.308 531.378 cv
613.303 531.377 613.299 531.376 613.294 531.375 cv
613.566 531.422 613.949 531.468 614.467 531.491 cv
614.485 531.492 614.504 531.493 614.522 531.494 cv
618.052 531.34 mo
618.074 531.337 618.096 531.334 618.119 531.332 cv
621.78 530.939 627.695 529.772 636.97 526.764 cv
627.638 529.791 621.707 530.953 618.052 531.34 cv
649.624 522.263 mo
649.661 522.249 649.697 522.236 649.734 522.221 cv
649.697 522.236 649.661 522.249 649.624 522.263 cv
649.752 522.215 mo
657.251 519.342 666.204 515.602 676.867 510.745 cv
701.074 499.718 721.162 488.191 737.583 477.791 cv
721.164 488.191 701.076 499.719 676.87 510.744 cv
666.204 515.602 657.252 519.342 649.752 522.215 cv
.101961 .188235 .192157 rgb
f
612.75 531.244 mo
612.748 531.244 612.747 531.243 612.745 531.243 cv
612.747 531.243 612.748 531.244 612.75 531.244 cv
612.75 531.244 612.75 531.244 612.75 531.244 cv
636.97 526.764 mo
640.64 525.574 644.834 524.096 649.624 522.263 cv
644.836 524.096 640.639 525.574 636.97 526.764 cv
649.734 522.221 mo
649.739 522.22 649.747 522.216 649.752 522.215 cv
649.745 522.217 649.741 522.219 649.734 522.221 cv
737.583 477.791 mo
757.746 465.02 772.376 453.949 782.311 447.595 cv
782.377 447.554 782.441 447.513 782.505 447.473 cv
800.485 436.009 892.415 373.664 892.415 373.664 cv
892.415 373.664 900.066 368.644 909.182 362.329 cv
909.182 362.329 li
900.066 368.644 892.415 373.664 892.415 373.664 cv
892.415 373.664 800.485 436.009 782.505 447.473 cv
772.566 453.809 757.875 464.939 737.583 477.791 cv
f
782.311 447.595 mo
782.374 447.555 782.437 447.514 782.5 447.474 cv
783.12 447.074 783.83 446.624 784.63 446.104 cv
784.63 446.104 li
784.63 446.104 li
806.74 431.764 892.41 373.664 892.41 373.664 cv
892.41 373.664 900.108 368.614 909.261 362.273 cv
909.234 362.292 909.209 362.31 909.182 362.329 cv
900.066 368.644 892.415 373.664 892.415 373.664 cv
892.415 373.664 800.485 436.009 782.505 447.473 cv
782.441 447.513 782.377 447.554 782.311 447.595 cv
.0117647 .0745098 .027451 rgb
f
614.467 531.491 mo
613.949 531.468 613.566 531.422 613.294 531.375 cv
613.105 531.337 612.923 531.293 612.75 531.244 cv
612.75 531.244 612.75 531.244 612.75 531.244 cv
613.254 531.373 613.83 531.454 614.467 531.491 cv
618.119 531.332 mo
630.009 529.933 652.01 520.906 658.333 518.271 cv
724.222 490.356 759.895 460.936 782.099 446.545 cv
782.339 446.389 783.895 445.369 786.518 443.644 cv
785.9 444.459 785.27 445.281 784.63 446.104 cv
784.63 446.104 li
783.83 446.624 783.12 447.074 782.5 447.474 cv
782.437 447.514 782.374 447.555 782.311 447.595 cv
772.376 453.949 757.746 465.02 737.583 477.791 cv
721.162 488.191 701.074 499.718 676.867 510.745 cv
666.204 515.602 657.251 519.342 649.752 522.215 cv
649.747 522.216 649.739 522.22 649.734 522.221 cv
649.697 522.236 649.661 522.249 649.624 522.263 cv
644.834 524.096 640.64 525.574 636.97 526.764 cv
627.695 529.772 621.78 530.939 618.119 531.332 cv
.0588235 .137255 .141176 rgb
f
784.63 446.104 mo
784.63 446.104 li
785.27 445.281 785.9 444.459 786.518 443.644 cv
809.033 428.84 910.19 362.122 933.378 344.025 cv
928.099 348.449 919.604 354.822 909.261 362.273 cv
900.108 368.614 892.41 373.664 892.41 373.664 cv
892.41 373.664 806.74 431.764 784.63 446.104 cv
933.378 344.025 mo
936.803 341.155 938.873 339.105 939.211 338.118 cv
938.916 339.048 938.198 339.761 937.559 340.47 cv
936.825 341.242 935.397 342.45 933.378 344.025 cv
.054902 .129412 .129412 rgb
f
939.217 338.102 mo
939.217 338.1 939.217 338.099 939.217 338.098 cv
939.223 338.078 939.229 338.058 939.235 338.039 cv
939.235 338.039 li
939.23 338.059 939.224 338.08 939.217 338.102 cv
.0117647 .0745098 .027451 rgb
f
939.211 338.118 mo
939.213 338.111 939.215 338.105 939.217 338.098 cv
939.217 338.099 939.217 338.1 939.217 338.102 cv
939.215 338.107 939.213 338.113 939.211 338.118 cv
.054902 .129412 .129412 rgb
f
834.871 224.308 mo
834.871 224.308 836.29 236.324 839.79 245.324 cv
843.29 254.324 843.202 263.324 834.871 275.574 cv
834.871 275.574 840.29 262.574 838.421 251.449 cv
837.094 243.55 829.298 227.301 832.29 224.308 cv
835.282 221.316 834.871 224.308 834.871 224.308 cv
cp
.333333 .356863 .337255 rgb
f
600.427 482.683 mo
600.059 482.683 599.76 482.648 599.54 482.574 cv
595.79 481.324 597.54 475.226 601.04 475.226 cv
604.54 475.226 623.714 458.661 624.79 458.392 cv
625.168 458.298 625.547 458.254 625.926 458.254 cv
631.312 458.254 636.512 467.249 633.29 470.471 cv
630.044 473.717 606.329 482.683 600.427 482.683 cv
.223529 .596078 .243137 rgb
f
817.674 298.218 mo
816.246 297.649 815.353 297.288 815.353 297.288 cv
815.728 296.361 li
815.728 296.361 816.619 296.722 818.044 297.289 cv
817.674 298.218 li
cp
.152941 .168627 .156863 rgb
f
886.507 265.651 mo
886.484 264.651 li
888.384 264.609 890.059 264.366 891.464 263.929 cv
891.761 264.884 li
890.267 265.349 888.499 265.607 886.507 265.651 cv
cp
876.397 266.768 mo
876.085 265.817 li
877.618 265.315 879.266 265 881.273 264.827 cv
881.359 265.823 li
879.431 265.99 877.854 266.29 876.397 266.768 cv
cp
867.455 271.689 mo
866.917 270.846 li
867.948 270.188 li
869.201 269.387 870.295 268.687 871.317 268.08 cv
871.828 268.94 li
870.814 269.542 869.729 270.236 868.486 271.03 cv
867.455 271.689 li
cp
859.529 278.06 mo
858.767 277.413 li
859.979 275.986 861.252 274.747 862.551 273.727 cv
863.168 274.513 li
861.922 275.492 860.698 276.686 859.529 278.06 cv
cp
853.939 286.65 mo
853.052 286.188 li
853.924 284.513 854.777 283.029 855.66 281.651 cv
856.502 282.19 li
855.635 283.543 854.797 285.002 853.939 286.65 cv
cp
849.579 296.045 mo
848.668 295.633 li
848.948 295.015 849.243 294.345 849.557 293.635 cv
849.937 292.772 850.344 291.85 850.781 290.888 cv
851.691 291.301 li
851.256 292.26 850.851 293.179 850.472 294.038 cv
850.157 294.752 849.86 295.425 849.579 296.045 cv
cp
827.373 301.963 mo
825.729 301.352 824.062 300.716 822.513 300.116 cv
822.873 299.184 li
824.418 299.781 826.082 300.417 827.721 301.025 cv
827.373 301.963 li
cp
842.646 303.89 mo
842.21 302.989 li
843.727 302.255 845.046 301.241 846.131 299.974 cv
846.891 300.625 li
845.715 301.997 844.287 303.095 842.646 303.89 cv
cp
837.394 305.153 mo
836.615 305.102 834.94 304.634 832.272 303.723 cv
832.596 302.776 li
835.769 303.86 836.992 304.124 837.459 304.155 cv
837.394 305.153 li
cp
f
639.54 420.991 mo
639.54 420.991 636.457 425.407 636.457 426.99 cv
636.457 428.574 640.624 432.491 643.124 432.491 cv
645.624 432.491 645.957 430.074 645.957 427.991 cv
645.957 425.908 639.54 420.991 639.54 420.991 cv
cp
.956863 .937255 .788235 rgb
f
649.211 400.158 mo
649.211 400.158 644.957 405.074 645.457 407.574 cv
645.957 410.074 651.957 415.791 654.874 411.599 cv
657.79 407.408 649.211 400.158 649.211 400.158 cv
cp
f
667.54 374.403 mo
667.54 374.403 660.874 376.831 661.624 381.494 cv
662.374 386.158 666.082 393.283 668.874 390.491 cv
671.665 387.699 669.867 373.232 667.54 374.403 cv
cp
f
681.08 356.574 mo
681.08 356.574 674.874 359.991 675.707 362.991 cv
676.54 365.991 681.423 375.925 684.707 372.641 cv
687.99 369.358 681.08 356.574 681.08 356.574 cv
cp
f
693.39 336.574 mo
693.39 336.574 685.995 342.173 687.018 345.707 cv
688.04 349.241 693.957 359.585 698.457 354.205 cv
702.957 348.824 693.39 336.574 693.39 336.574 cv
cp
f
703.54 319.574 mo
703.54 319.574 697.54 325.408 698.124 328.158 cv
698.707 330.908 706.04 339.241 709.29 334.24 cv
712.54 329.241 703.54 319.574 703.54 319.574 cv
cp
f
1185.17 657.978 mo
1179.78 659.727 1174.21 661.874 1174.72 667.91 cv
1175.23 673.946 1178.81 676.41 1178.81 676.41 cv
1188.79 677.699 li
1166.59 665.195 1188.69 651.719 1207.31 665.008 cv
1200.8 659.893 1189.42 656.597 1185.17 657.978 cv
cp
.337255 .0156863 .0156863 rgb
f
1221.63 681.287 mo
1220.45 677.923 1214.78 670.335 1207.31 665.008 cv
1209.05 666.372 1210.44 667.864 1211.26 669.434 cv
1215.15 676.888 1218.48 687.913 1218.48 687.913 cv
1234.67 700.393 li
1223.22 691.146 li
1223.22 691.146 1223.84 687.564 1221.63 681.287 cv
cp
f
1223.19 693.199 mo
1223.25 689.601 1222.71 686.015 1221.56 682.663 cv
1218.92 674.276 1207.5 665.164 1198.92 661.563 cv
1188.83 657.234 1184.07 658.431 1179.19 661.399 cv
1172.12 665.883 1175.29 675.354 1181.79 677.699 cv
1173.85 675.945 1168.76 662.475 1183.35 657.604 cv
1196.23 653.267 1219.31 669.365 1222.5 682.385 cv
1223.36 685.938 1223.7 689.62 1223.19 693.199 cv
cp
1 .172549 .172549 rgb
f
1149.92 763.525 mo
1149.92 763.525 1194.35 712.247 1178.81 676.41 cv
1207.97 700.468 li
1219 734.872 li
1149.92 763.525 li
cp
.0196078 .0196078 .0196078 rgb
f
1314.16 757.778 mo
1314.16 757.778 1305.3 783.197 1294.66 791.609 cv
1284.02 800.021 1200.38 866.866 1200.38 866.866 cv
1200.38 866.866 1118.03 935.33 1086.41 954.303 cv
1054.79 973.276 1026.59 982.781 1002.08 984.11 cv
977.568 985.437 971.591 968.36 971.591 968.36 cv
971.591 968.36 969.924 966.119 969.247 962.428 cv
969.245 962.424 li
968.655 959.222 968.807 954.936 971.422 950.072 cv
977.059 939.604 1003.39 919.172 1003.39 919.172 cv
1003.39 919.172 1036.1 887.307 1045.47 861.107 cv
1054.83 834.907 1067.03 798.96 1073.64 775.692 cv
1078.89 757.194 1074.35 732.168 1072.27 722.682 cv
1071.75 720.314 1073.05 717.914 1075.34 717.105 cv
1082.01 714.746 1095.88 712.065 1107.91 724.169 cv
1124.44 740.804 1187.85 735.424 1196.91 722.626 cv
1205.97 709.829 1178.81 676.41 1178.81 676.41 cv
1187.25 674.25 1211.54 680.244 1228.26 695.222 cv
1244.98 710.199 1278.52 725.047 1278.52 725.047 cv
1300.19 721.076 1314.16 757.778 1314.16 757.778 cv
.196078 .2 .227451 rgb
f
1082.04 933.703 mo
1082.04 933.703 1100.4 882.101 1096.95 873.298 cv
1093.5 864.494 1057.45 844.872 1057.45 844.872 cv
1067.12 819.688 li
1078.33 824.361 li
1084.06 811.313 li
1073.76 806.533 li
1083.53 781.47 li
1095.2 785.463 li
1101.23 770.895 li
1090.4 766.702 li
1100.98 743.305 li
1100.98 743.305 1190.24 778.522 1255.22 760.253 cv
1253.55 787.634 li
1082.04 933.703 li
.352941 .372549 .458824 rgb
f
1089.12 716.674 mo
1087.28 718.124 1090.15 749.265 1090.15 749.265 cv
1076.03 752.114 li
1074.12 747.174 1072.46 731.064 1071.74 723.204 cv
1071.48 720.354 1072.71 717.555 1075.01 715.844 cv
1077.48 714.004 1080.88 711.814 1084.13 710.874 cv
1084.13 710.864 li
1085.49 710.475 1086.81 710.294 1088.03 710.435 cv
1094.59 711.204 1100.6 718.344 1100.97 718.805 cv
1100.47 718.634 1090.91 715.254 1089.12 716.674 cv
cp
.956863 .0666667 .0666667 rgb
f
1089.12 716.674 mo
1087.28 718.124 1090.15 749.265 1090.15 749.265 cv
1090.15 749.265 1078.55 721.094 1084.13 710.874 cv
1084.13 710.864 li
1085.49 710.475 1086.81 710.294 1088.03 710.435 cv
1094.59 711.204 1100.6 718.344 1100.97 718.805 cv
1100.47 718.634 1090.91 715.254 1089.12 716.674 cv
cp
.427451 0 0 rgb
f
1057.45 844.872 mo
1057.45 844.872 1055.27 846.674 1050.75 846.145 cv
1046.23 845.615 1047.09 856.557 1047.09 856.557 cv
1047.09 856.557 1060.97 854.979 1066.92 850.282 cv
1057.45 844.872 li
cp
0 0 0 rgb
f
1067.12 819.688 mo
1067.12 819.688 1064.21 813.624 1062.51 811.473 cv
1060.81 809.321 1065.77 801.435 1065.77 801.435 cv
1065.77 801.435 1077.39 817.146 1078.33 824.361 cv
1067.12 819.688 li
cp
f
1058.75 822.792 mo
1058.75 822.792 1077.89 816.19 1084.06 811.313 cv
1073.76 806.533 li
1062.24 812.287 li
1062.24 812.287 1054.85 820.05 1058.75 822.792 cv
cp
f
1071.58 782.755 mo
1101.23 770.896 li
1090.4 766.702 li
1074.12 773.859 li
1074.12 773.859 1070.71 778.724 1071.58 782.755 cv
cp
f
1073.21 770.393 mo
1083.53 781.471 li
1095.2 785.463 li
1075.83 762.51 li
1075.83 762.51 1072.3 766.926 1073.21 770.393 cv
cp
f
1100.98 743.305 mo
1100.98 743.305 1114.31 726.56 1119.31 726.219 cv
1124.3 725.879 1129.74 733.144 1129.74 733.144 cv
1113.19 747.626 li
1100.98 743.305 li
cp
f
1118.71 774.729 mo
1087.49 850.715 li
1101.23 867.015 li
1101.23 867.015 1195.02 792.707 1201.37 786.357 cv
1207.72 780.008 1132.71 767.133 1118.71 774.729 cv
cp
.411765 .439216 .529412 rgb
f
1314.16 757.774 mo
1314.16 757.774 1305.3 783.194 1294.66 791.614 cv
1284.02 800.024 1200.38 866.864 1200.38 866.864 cv
1200.38 866.864 1118.03 935.334 1086.41 954.304 cv
1068.43 965.094 1051.56 972.815 1035.85 977.714 cv
1035.81 977.725 li
1023.89 981.454 1012.65 983.534 1002.08 984.114 cv
977.57 985.434 971.591 968.364 971.591 968.364 cv
971.591 968.364 971.02 967.594 970.411 966.215 cv
969.981 965.234 969.531 963.954 969.249 962.424 cv
969.491 962.765 981.48 971.876 999.51 967.657 cv
1033.71 959.657 1083.25 925.724 1102.02 908.884 cv
1119.63 893.084 1191.05 819.774 1221.29 787.164 cv
1223.29 785.014 1225.11 783.044 1226.72 781.274 cv
1252.75 752.685 1272.99 735.184 1278.52 725.044 cv
1297.47 721.574 1310.53 749.204 1313.51 756.194 cv
1313.94 757.194 1314.16 757.774 1314.16 757.774 cv
.898039 .823529 .521569 rgb
f
1035.85 977.714 mo
1111.45 950.324 1178.37 859.084 1221.29 787.164 cv
1223.29 785.014 1225.11 783.044 1226.72 781.274 cv
1252.75 752.685 1272.99 735.184 1278.52 725.044 cv
1279.63 724.841 1280.72 724.744 1281.79 724.744 cv
1298.97 724.744 1310.7 749.614 1313.51 756.194 cv
1313.94 757.194 1314.16 757.774 1314.16 757.774 cv
1314.16 757.774 1305.3 783.194 1294.66 791.614 cv
1284.02 800.024 1200.38 866.864 1200.38 866.864 cv
1200.38 866.864 1118.03 935.334 1086.41 954.304 cv
1068.43 965.094 1051.56 972.815 1035.85 977.714 cv
.807843 .678431 .270588 rgb
f
1313.51 756.194 mo
1313.94 757.198 1314.16 757.778 1314.16 757.778 cv
1314.16 757.778 1305.3 783.197 1294.66 791.609 cv
1284.02 800.021 1200.38 866.866 1200.38 866.866 cv
1200.38 866.866 1118.03 935.33 1086.41 954.304 cv
1054.79 973.276 1026.59 982.781 1002.08 984.109 cv
977.568 985.438 971.59 968.359 971.59 968.359 cv
971.59 968.359 971.02 967.592 970.411 966.209 cv
975.22 971.964 982.087 978.551 988.782 979.335 cv
1000.93 980.754 1025.89 982.527 1086.44 946.257 cv
1147 909.99 1247.87 818.188 1267.45 805.22 cv
1284.34 794.029 1306.55 772.114 1313.51 756.194 cv
cp
.956863 .0666667 .0666667 rgb
f
1314.16 757.778 mo
1310.39 768.426 1303.13 785.586 1294.15 792.499 cv
1198.62 870.032 1131.76 925.218 1093.37 950.923 cv
1068.54 967.148 1036.26 981.603 1005.86 984.207 cv
996.643 985.032 987.491 984.146 979.944 978.736 cv
975.623 975.549 972.841 971.628 971.59 968.359 cv
974.367 975.153 981.873 981.632 992.461 983.308 cv
996.866 984.005 1001.34 983.928 1005.8 983.455 cv
1049.69 978.95 1090.62 950.436 1092.42 949.479 cv
1130.53 923.774 1181.35 880.499 1240.84 833.593 cv
1295.49 789.293 1295.05 793.218 1302.42 781.913 cv
1306.91 774.971 1311.28 765.49 1314.16 757.778 cv
cp
.156863 .0196078 .0196078 rgb
f
1080.42 794.574 mo
1078.07 800.376 1077.83 805.752 1079.88 806.582 cv
1081.93 807.411 1085.49 803.38 1087.84 797.578 cv
1090.19 791.776 1090.43 786.4 1088.38 785.571 cv
1086.33 784.741 1082.77 788.772 1080.42 794.574 cv
cp
.411765 .439216 .529412 rgb
f
1065.75 834.741 mo
1063.4 840.543 1063.16 845.919 1065.21 846.748 cv
1067.26 847.578 1070.82 843.547 1073.17 837.745 cv
1075.52 831.943 1075.77 826.567 1073.71 825.737 cv
1071.67 824.908 1068.1 828.939 1065.75 834.741 cv
cp
f
1098.15 754.692 mo
1095.81 760.494 1095.56 765.87 1097.61 766.7 cv
1099.66 767.529 1103.23 763.498 1105.57 757.696 cv
1107.92 751.895 1108.17 746.519 1106.12 745.689 cv
1104.07 744.859 1100.5 748.891 1098.15 754.692 cv
cp
f
1281.38 778.423 mo
1254.46 805.341 li
1251.84 807.964 1247.58 807.964 1244.96 805.341 cv
1236.2 796.585 li
1233.58 793.962 1233.58 789.71 1236.2 787.087 cv
1263.12 760.169 li
1265.74 757.547 1270 757.547 1272.62 760.169 cv
1281.38 768.925 li
1284 771.548 1284 775.8 1281.38 778.423 cv
cp
.156863 .0196078 .0196078 rgb
f
1279.38 778.423 mo
1252.46 805.341 li
1249.84 807.964 1245.58 807.964 1242.96 805.341 cv
1234.2 796.585 li
1231.58 793.962 1231.58 789.71 1234.2 787.087 cv
1261.12 760.169 li
1263.74 757.547 1268 757.547 1270.62 760.169 cv
1279.38 768.925 li
1282 771.548 1282 775.8 1279.38 778.423 cv
cp
.956863 .0666667 .0666667 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Sport shoes and sneakers set.eps)
%%CreationDate: 4/1/2019 12:40 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G;,E@(Bc!<9sU!!;5tkdp=J;nEn)p?e`t"3WSJHgHGL+PP)KggcL!1eE&%^OG45'9Q;F'J4T(J(Z\$OR.k-pWAGRQP1`q
%r8SU^^]!HhG@1=6`V]]4B+I5oD*IkS*IU,I4R>;3I.F$Ss7j@Bqo.<n5MgBB*qa4%HT_#LGfY,7D:r@nZ/h?nm*#-A^A[Wi=5WrO
%L\G`DIf8s2q_-fUq"eV6cbFc(e\f^?s2t?'ou$h&p5:T\s7=-d04)Eh7m#ktO5"<>^AHpWVscitq>)$lmGgKHb+HBBp>$OWs67""
%rnZ<>5C;TM;dMZJ=o\&.4.Vo[J#7U@p;^O/ka-5&q8VjW/rJ-Up_SGPid*7)jmORHo8C)mHM@(k+'sHgmep5eo+0j)+5[%obL[j8
%na$.thgOL5I:+&e(N7(dobXgHH-98hdd^H:_b]TcNsQ&>/;SrFM=kc<Hn8d0LS'T5*qO(<@ANR`f>>""p,5AZIaIn6hu;*:\,ZB4
%L]@)Ap#g6Xpe-#2nBEWDrBL!N;Q\!5s8$+$inH-CIe_*ihL/lEegXgLMa)^kq:dRhM";=QIdrj[O2#f9fD#&uf,oJ7p)=qnn%\W5
%YO6$6F'lo#e=XDQc!,Sbj;7Wu?bcR)0Ac^>hX"&*-/so]f(f(_NlPR4eV;FCp4pbJ27m05qtfRTY?qI2`!PI%GWA"fF8PNXp>Oi2
%hL5('CsW+0Odcl=5Pjm;o5dU$rSn&&F$&_O+-5e[X!dh]rp@8HKtG60qLdF9q<"0U?cA5^i-bP"AZ-W15Q<%tj4.5'5JR42hrnil
%^9BosQ&WO3hZ(aup>"T`fdXZ6[6GK3TDe#$45epr3:S@\qG[@Kr9VbEpt#H8O$:5Vp=Ffle_e.Aj@;F[qY^<L]m]YtDr5s6re#Xl
%cQE/Qn,AYjr5$9HrjLnc\"t0r>H7YVPQ#ESA?D?Vrk;tArIb*D%f_H/*a#]'9]!/&(j>=q]uSanIf0Mdj6#^!I<bX^^U7R^C&e3[
%r;ZLOroMnL2k=oZi,?f$F[*C>ELcdS&g!kF6eMEcYs7!X2SaF;='tpTgFqF`)V:$75.pm[o7t),rScACcb98P(U(T"rS`<WnSc(*
%s'uAhHQL-jcK/PqnXtqo%33<IZbP(@Z7Gss]77,uH#4eepUY42,/:R)`e1eIIY?Uh_r\(NY=lS.jr[9r^]!HhYQ*uC-k.3<(PDas
%fRLX<?0_0pZX<^obJ/E(`Oi=gjF&>hQg;9H/_"jSp["+,f_;IGfcN4S*\R%0l.1)Q_dB3pF3=$S=aT'MX394*2m[GhpO'a5]`%?M
%T7*OPrScM7s5DoihS9*Mhu9p&3AgfoL(D(E$QPEKJaGF(gYeF&"[b6@s,SP[49(stT3UuJlm"4M#'n)c\9l!fkLX'gna9I#?N9jD
%hS&_n+!=q_D<Tbq=[B+GHg%7>qY4EF\F6uchb.CkiCs(B.8u2pMrs$mckBnXd1_;PWM-NnQ2'&t69/Vj"fS0a>k7nn2sRF+iRR,[
%b^TAZV=7jIkEl5HqO9GDnF.gorpI\i&+ABSNeI^jqX<<iA]FP`0>Dr0c!-TIl2Fk$/FNL0[!L6F#kUtRb'n`.ps[ECceE-*R<a'8
%++O.9J(_%W%kkZ.mdWdh?@Vt"/D$LWr8bg5hqH-La5>O;cTdo8S0)'brlL6#k*$mTTtJelec(5]<+d`'2f`%]Fo5s6UWnW[Xh8C(
%LT*K8pp1bYDPs-JXqSl%kMZqkoKsU7(JbR4rde5IFrD4QTDdNio&AtbbC0:"GG0A.nacU2nJT((e,7Vj00Xl1q<ceki7jb@G+ols
%kPtJ@7lf\Kr_5EEhjeP?o`%tk>BBE9lIYtnp2AZ'`Quj)jM)M?hm<>hmb]PlI@<APa8RCbAcD![)h7BR/N/XgX7#j2O2QJo[0\P0
%.PJqcH!+J(UF$7^X1aP)m.[5<f9c/1rNmU=&>hp#CVA!$g5G[[?FEq-r2>%tPPo67IIu2oIpp*YrDil>*;5bsX@F@Bbd#1:GVNNb
%=7_g$*kk>FNjDOZo/'guQh/c*FP.eG04!r(D0:)Y]'iEFIr53HIq/L*IuD&hra+sKZi=@cn!/?F`ZOuJq\eG.mISj+Z^5q/r>Ya*
%\)6c6'7V\5pM@U2pt6PTs&]3s1k+]Y+9'Z;1]P]>)O8'L^[AiK^JB<CluOG!l00Y!\F3MDIeM`-(&MF\-3!7oG_n(\fh_W1g[Bjp
%T'WrQ2u0f+r6bec9,f'..t4,gkbS_C%cCk^4p4*m/,S9NqWES2T'WrQ2siR!lh7[Dp2#BO\aX5FifbHI-i;ST_'b9?k$Ii[7/8@F
%[HA>Z?9Go'0BS1$6aOJ)08`K*o]!)@o#bkIq<>lIe'iW3:ZJE=[AWk#C`91K_hO>6'76\@ojY$\f<>k?Ch0!_Z.F-NJ9ti<qeTd:
%BeC@D_a\^R;-e![Vg6q!Ht=tjfgbq(NW*XuTTAfgO).:Q0k[]hkdp6CeD'[&raFsV\,6?mpL=0l%UNIjqG*Z[:JF"2Qf?!:`1/_O
%Rn_CKhuBqLqpHh]P>11WPM.R<Q>D:=gQZ&fRK@0"#ZCKJ^Ai8".ao)#1KBU_'`9f&gsbiYnlqGF`D=qq'=?YGR`*bVlbCW=q7^57
%=9".anY:N+UF`!d]s:j*lpYO`eC?a.[nf5*#X$d:Gd\dcb-]2tK;@.-Bf9XZ%A%-`k_0JCQStd+[:,D<O;/^Nm<e7^J+#%=cgUQ<
%c[$HD`t.c;ZKpPQ^jP@KE1UkU\MBl<-sKi5GW'n=NDfqC6U+<X9bR?:ZmkQT4^FqA-;)u*"k2N9Vhn-2:OZj'"Ht+ad(g@C"R.g%
%18]ciNYd*oUX4"i?fnQ][n"ehQA/KUY2f/2j7_NP!P`]ti*QHVLOA^jT9%:mnL2a$.JqfkO"X^B_Hu*ep7-'QR25B$D[5_;Dp7(s
%.oSEN)Z0[XrqsnCo.(dJpk5j5/(7S'Cup,Ra0[:q_BljTB"uWf*/h@nF"HP%cnBC3^$LBo8kZc3pL2t6L'/=fk@o6pM`b%MA4e\E
%q-gld)a,iJe\6^brOq(cpW]Jjp-/;Y1]FiYplUTIbrj_-[aWG(_<Y+AA8qG9YT#L`'I!0m+Oj^lKs"#ehG)>(9K;X_M#B9(8Chn*
%PHk'shk;3P^7)/>39u]!RlI<f*R6YZC-U$%qkG#0o5[bobkZ@!p0j#=*Gt$X#L9Sj5k+F>.=/_"X/BMILjtV)@6.3;g8!=RQTP*g
%ccZ.'Ianon11JeH<`U!uYps#k8$0gD(>I@Mq,\[6YOk$Xl6"75r%H4K_#_)`?QI(P*f5eaUG?2`'OT9,9XO_j`WsbD-Q3A))UMh?
%oLoHPO=,>lk#[poE;Bcu^;2Ypi$nR+e$JNTZ5EksI=u=S_UHb&3,IF'Sq;4mKAOJ/q[;O@:dZ=:K"rBVoG_!&mQ9&nCl88G]naMl
%TY/ec<KF,TX6TM`ifR:CeKa0sWZN]5Go7D5A4hDfW,g"3.ZuQM3eB\m8qP0hNJ9,+_JkV$!98XmK.WEu66*A\A4Xe+#\2jN-YQ>d
%8[46^ZZq8Y^UX3jo<[,XYKUHNAj'4BM8LCpac,@`[V?Vbe&SM3;jiJ79qu1m'*#>PLfZc(c4SKQN%?n>T4pjEKVYLbj/(X&b]EQR
%mX\trRMn+'3AG\6H@5XXDU#XFFH.Q),E/F">g#!j:;:lFB[V.BLuOf-;0Iu"`)3@NKi+[dFcNP9qPLH0+iFYuN\UC12Th?_X0K<c
%b#'M32.&gUN3Oa;igr0I[)f)WaI-ah)-uhh\mBE!I7e]Z#&0I#(gFc"/G0TdC?93!dP0c"_YCt2q7\Qq,N?]2(_'9q^!KkP4qd5)
%^L]5M1@aV[+Q"1K(^nb;ThD1UCb45+W'27tXn$QU&$B-4>qdK%F^sDN(#M5.?N*UX_T#!25')bpkoeSEH\B<S\W2j11/?%1dTCeV
%_2I>/B!+1omnk=CUp1Tel.L3DrTLB?J$8:TIj_!,Tula\]5Fe+)$;m/+!4!8W2CKsGic2iHR,A3"QR*T.n8fBeQ@cZSJph+X5(8*
%S_>OD[ke53M1B<)EI:4Ql\X#mLj_.@(ra0B3m?)_`+q*aor1Hm\p`<\qhCsQD!acj!OT.?k!))DE`]X$E*Kb_]X5'JZb0_,gZn:f
%q5(8)KknTSg@4Z3HQDo^ALqKH+N*A$'k(_S.lpUJS)>WqMlZB*cG^1&'U,[fUD!Y5ih5<SVr>bRL!D)D@=79H>j*Ko6&5]4(1e0c
%&YR"NcbXkP9?)7K(uZ?km/5]P)gaZ]8'Jst2G_(`bf8f'mhN7@`b\=A]JP',_S3F0.\1"5U;.*[U("1e1VC#0X:0hcWe)ehYdNk`
%Bf1QISeu8]%(B1TFkOdk_4\tEe!)M%<3B^)BOeF(=KN"I,_f]5fiW^3;>k%#HeKn:N&MQmUCZti?J0^N[X%CR1W6qBRkN#u:17*5
%0'K2=jWSjQ+5Z.Q4daL<b.pI:nABa7M>nD+s"Pl"@ncg'0l[SeXHY4JFcV@AjX-=A(.:-J4[:,#^F._0^N6cooGc/EIVT/Xqf_`T
%%f3pqk=ZYk:l3><Rns(Ahu2#.q""@_6QM64?F&D_HL(fKf@D"pER]aP=R%/$fP^FTs82,3`rEg(L8-4?rq\S-rpTRDs(0W.[^/-p
%r8DSnkOJ';-TpZ1fHDj^-[th'ddLH0iD4@NI:IbI4i_K-hG8]=pLf!No\l:+n(n&VqYJ*J*e)+M5Q'Jup[>kAprUu,qeQ"$+FqdE
%]RKI5p@8L@rTk?==8j!UnUKI]qoSm0[lV]*4nbL^$fS%K3Atn9H]h5JZfYG6kinTT6cnIc9(V#F?h:MM*Y70L7X\N"ebkt'C6$+4
%&@=@;*[%[YRN]IGUju655qW[dG[-f#BoWC3T#6:`5Q(0FZ)4p&?uN"*Kg;(%*=pIYX=(XA4<A*\Zkj+3DLX5%Yk'D-HS9QQnMkRT
%&$nA>F\]]A8aWou9%WFbXl6ugOH]'$_5u9AV6B2n#GpQ?-(Q&R3tntV,d:F[,UiJ9\sA)r?E<JE`a^dMLf$CKlWtX1RG&0%gIn.;
%CoooSjQB7Ip]d0MCn2)P4D$CW[;DAZL/`UY<>No('j$mtgp,?T8`Nl,8aV&W6XkB;4LF(k-KXQE?lUV2^K-+8:$4DL*67/2qe-9:
%f%%!'kB!_=T;qKeRO6#2g+0=T9X".bm*hBbZ$4RbKa2fp8$P\eYM\_GQ\)j9O2G4g33q;#b4ZU3q.R>JK;Cc/2=/\34JlTV#QpjJ
%e1#+R^@7U/07"%_q8%CJQ]r>LX=h=L&gkVD^CX1tf22p"1ge4^8EoY0e<3n@D^J&aH0pCLa'nrZ`MT!p^$ulK4n,7*?2-0o?s7R.
%YU^\r2cgM/+?##sbo<^2-+<_F8erN,8<:*S(d0c%m,%AgbFEb@g$J1tFUjnG\D)l7NBc'BjQG)_+eD]nO\=kt9q.ZAdjGYPIG_,_
%7lbt;`n_23f'+.1$7'o^_mQdJ*&o&3J_>\eY:J7(,!_-m0b2YRC"`j1I'g`IBC55NG%Ai8,AV7)Xnl]=l@<8O`+M.t8f2n5iQS^Z
%'d;Zi2sGmh!<p@Fd'AuEAOcd@TF&j%aHtr2+bk*k$fK]r9tUY#1qA%ei7E.3k?FhJMQ&.jRT3kdF4k23G'A,=Ad[J\loCr6OFIk7
%0\[u;>Jep`_T^MS/=:&C--J>COLeCW^V3K9bqY!<6NhuCV_s$"%NK+SP^1gooMjh[VO%Ld]aJWe4"\d2O\Z!a1G6/%7S_LJC8[p]
%8&<B=VJ>KNX*m'W<dW#uJkXrXe:BiSWBuOa;i,)l2'0`Mlnj,C#`u0n57G3c'N]q:hBJbcEtB%5+^6&TSgjn?PM#=#SX;+m\L9%Y
%fQ"9@3Gb/PZJ1?P^PQmEF_!c#fL+U2pL`=,()YW<@)re`G9NUhpW#q<hA@0)2S`$U-.L/kMKRi/fh0f^S!u%geDAg;jC=%k.bY=>
%RL-Kanr@Z5#d/q'U[hq#+/WaL`_L(T$370cH0]phCg*i<4Rt$0?cj]<`j\+u;)']jhC>sN8,GoPQ#&'bgc<NWYW19[^`mHH:END)
%p(tBA=Z7..#-"0:<bT3dD"Hp'*72g)f4d44!+*UCmDlFc%d@4iX+FUdLLDrOQ*=\4K!fV_FY6`iqgUQ6_Xun4;o-J?feJa&Q_E90
%(N$"77_s:,iuGsWAmPoKVXsDf!=`k3bP9l$!"MqK^/bad4LRdgjg#%Ef>a4&<EX1'/mFD+r\7p=/hh"e[k5Y[?J4Z^IR`HW9lOK/
%`?%icgRMBp`rqVF"^$q,p4`W/#SLaLR4n9bcH@6O'ToLUAdT9EI[[0f8MCY1p;11h@s#'Nr8I"]C7(A&T@I0n4'oh!@3L;`LFI#9
%@)p.^At+BsL]KXm\JNl-iVMOq(*jFfH^U`a[uHJ`*^@MUEuWT(2Ph1bX_ROTQn#P$s)\&kZN*MGPtu`/Sf4ES(DIhqg<f49#WTed
%oX,cR8oJ/jR_DsKX>+rBqgZns"5N[9i(^]^>'FI8Hb"NP\Oda<Ai?A$N"<n!5K/f*8VFK^l"2WVBHC`d7&eP%iZBos.)js/LIRq.
%_`0ZLUG(@[i]E2nHg-7_N--e/!G-k7ad@)";tc?!P!!Y7/`s>VG[,e,*hg^MU5<#MU6[Ie;dXL5Znn+/>%*1ufV/#jp5L,N4Y:]i
%Y`,SBpin/EbdQ2*[(f1n"uF@(*W&3#3)+8(*qiKOS8#k3\96H2JTM;@\#QDE'2Yb#3..Q#[9!.afkoEb%$bkk$UM!jf0.dd?0Pm6
%&PR/2Ei7@E`.Y+CBb,bTGS&)QRG)'u:Tg[tDg)=^gqCs"J"3T/&;!@bg>:I3g>b0[oq=*P3_=),*imp1[imf*dl>0P'A@kYN0WQ[
%oD,haHV`dkfi5@6%X4.0Y!U0tp8g0+bl<U]D!f-`V*@hQAf?OL3sm8g8'5qu!&Jf:k:8;9+<5VegGXJS]c(L7#ne')6S?\Km',*Y
%jf+O=+9?Sh=bR//093r-1CcR>X1>%*^kJMX^/ThX1[ekk-a_jQf7Y$Pb#WRA'\]Qj6_U+<0YbeV^dka\d$frO&Emje^UX^>h9:tZ
%=N7;*VX.uVQ$0P]&I56m807+2EQ17>@-+T:f>iQP_Zm=#IbBGaUa)?YXT#1BT[a5ILLu/+\!Lc[$6sI2[kP'\W_X$h2_E1]K2im=
%6@CKiYep>u\'s]uo6*u0N;KI6J@<_l1@73Ne^.6@R:^J_TKDM2'9:!-*a%gc@lEXDr]f!(;eqhdQ\1M91f(5]&590&)$,<Yd:s18
%5.R4IiNh/f;iid>!R>1*%L$pg9iJ&kG8SD?:%=3)*(V%.[!5>sNK1_Si%:Mf7b[)e;;pe,O-[].2Jr>AG4TJ;jDI^\"&;.j$!KZR
%KbUd$](%*2j;%)+QD>@c't(h%ZpQUD"NI$)\UMH,6u!1rG9qI+-^HO#'RUT:R8_tN8P;$^oN*/c\\K@P#PA7-h`e1O]j\D[gpYar
%*sK),"c,=Y/j,D$8hu(E*%2%VQ'i:CgD]#,'gkHXM297RSb*oZS<L\&@+P\-k!`_?e-*&p`WuZ63W!iaGM/2c@Q@8)&2</J!R4^@
%$L?(#nC[WJ!u`$)N3<IP[h32'ZDo*qr/>4NK_t9D0NRnpW;1G*A\\jk*eVQ?;;$BO?p$RQI!']7,Aarei/t^4MTA8@NG30drLZ%2
%=q"%1*kI"SL\A*_1OFc_UTe4iR$k;GF_mMQ78muBC_hF6gE%*5(Pfi"cEIA2FWO#qN5c[R(p8d`Q6TXd6'&:9)9W:#/MeOdl&J`4
%m_rMKb#kSm648cr^i=+SOCia%#Z5!#_OF3tl1g9X\+[%;7l3o^!G0^5BkJf]dqQ<)K`I`Sa>r"1BmIYhK]Q3t`if]U.V!bj)!XK.
%Q6-?Y%KRCAABBQfPsp94iDtB)jdG3tmaY=D15V(nee1*XMO5@mc\uPbhVRZ4I'I`?\.l@i4X./Gp9n[P.S)eFKhYt\\71X0qXUob
%Z/L,"k1Q%j`g'HLYkq<rqk0,m)kFgAggGeNZr\fiRG%cnQ7pG[/P+t3^at9<T<!`TTEZ`;e)kY'4>64lLca/ul2eON8Bc=?A/#uA
%O9"GdaUsREEJB*k4#G!XeG@[g*"#qBp,(_c(uho(e_qog$t[A=YV:+>b;Rhin5)>N#<ch<`OM]?.s>I$d@H1>BA#+39c1US0q:lQ
%Knb-nVoQ"b!_H/;-*5QFQ^*Ud83bUj8W"+0Vh@tWO,?e"$2c&#Rf.8(qCPeoU%P[_bWam%_R]#)$7mZ#^q'1;VMf;#.tUJ>qm`"Q
%d*Xfq6ht:kPp"G^__"gnI'0QER;HZ5<l]&2DN]dY$E!"4(i+jdZ)E0_"o?J21l[5m?Og5V\R:M2Y+KeIrGE,Vg-Q4%$AmcMGS$6q
%Pi/uBP1RI0UkK(oK4E/Id7#[4+]s\B9uK:FZ%3q)>M\Bo=_S=UJ;,!q#cqZ4'.e<OgCqU"Nj`Y.@Bj5L&n*O`'iWT>6"l7D=mAVi
%]SV0.F<nf<F14UPLZ-'-,iQE\5);5/O0%r7Qm"?TQkB7*6nmqqSSPl03%oG[8tXeD`<(#cDRXVL1GC1`N%c]*!Y:n4T,P/MWA/an
%^htAfJACp?=B`f]!8bMrZNH#W<gUZCJO#?<6jgJ$YGABMQi8knH))DG-DjAIgsG%aO,,G8]K2#J[F[4qA.SlS?3Ce_pu:M[SFE]n
%KroS'l(E&,%>ZqC`G'7P@0M*V:=+eL,>Q:0Y.XqWe^!BL)=3T"6jaSbmt)(<I!aT2>a+-#2\DB]!s*Gk)q<=r$\QZ")pf*B8B?E7
%<u=-f%L$?DP?F#VcW?rf0R5@Gl(IVE^i7ZLjfG9g&&XbJ`\fpAL%r`?pMspR=BTOu^>M7)%+<(Z#l,@-cHDb:$4r@X6,PaqO6_UC
%+I*.4Osbi=AqJHHTn$!a$IWKlc'ETZ7^r[6aO.:U,7**nB@CaGQ&+%"g;:s:LW=]3U$4NI.=&QB]B\n=kHhqF[506G'"3@_j#.N_
%&27/f!N,!C9Wi!TX"_jhnVMgU)9*Ne0OGKF9CU]#bqp(A=]2j,d%Rt[ktr6FCb@ZIaIi3FB*/a46\#l2@A]J4$DEc_or@7[4%02_
%XoTuQq&FQ9mW!61aZ]QM/si>HJ3_h7j_g#jRUBJ06*k"n@,@q=_F@?&N)O4#_Qr1Z.eF$&r%i#n<Fcj10LS:.54+#!#Q`JC#oGRs
%THQO@PaTglkZk6ioHR-6lbN]\j*3G7V]lN1a5O4=^tQ<?0FMi`%,`j]:h]AQ[t'T!,$&<9S%Tp`euL;_QJiPK,>GY3RZ/4tZ'M]=
%IQ<(f)q@8j8B2:&0UX1rOpX9i?nV]5cbhFWOi$30K!We!*#ob=830,$9QQcNQTVTm@a\iHJH2@:.KX<gL;R__<Z/-_hSJnqM#Aa9
%rj8D86b+sl?u!Lni#uHfOYpFMk6OQ8hCpr%+4F\B.)&8EUj@+<,7S*oRn_*d0Mf\F"prYf:8Zqs,j//>!o`OoV8HiIDGZ]if8tgX
%j-g<W]&hO+TmaGcK*+uEk<:Zgc/G?jR/_6nCLl!2%C55N5R%GG@Oa?;-'*+k+,h!!MM2W$2JIkVV5uGIVG*1dfci98@=:Esp/hS[
%!i4&^;3Li8Qo=i%)fY<YT[7J!au5jQ+i#eI0X5VG!+Q'r6,9S4@:p+r"hQ#7dC2;8ZJlG>PM/g$---I:5E6+PpJJD\4(+dJRXCN+
%=M\s&3N._raSNlr_/XQP&F[GMKY/E4<37pnQiTV+"nm?$\QTO5<`_7`;..k[Z8Xb.6Qhk,B$`/pF15$>6Ma!7%XBr:rYgsX4":T:
%3@'],llcsPK8'CfN%lShTHQ=!qfr`SN-9H-ciactq-M;06#5D[-ZEK:).<^SC;(N\`i<&S#A40T_NQb2i7i,X'cA^1dt1%ue9E#4
%gkJ2+?Ui,"?pJH%,&KLKXVkLO(sDGdIt^<\bIL\TK\4!J'3e[;%oP[\2_Q?*HtX=CN+;G=+Zk6s4Jun!B8REj]Pkl[kNo/WOg?!S
%(K9e4Y%njZ;E43iUIN_+5Zk!>X<?F$LZ",":KoY&JicVX%<$]mVYDUf4Thr#KEF=aU*'Nq;TldR%53bDguaiXOTo^LC_$MkY\O!#
%Anbe.FOFkY!Q3<^J/HC(_k.ToD/MY^e8KMSAh<'9\6('5k!I8qLE67"+I.1N-A&f10o`@X^*]Vfo2).cjqT6;F,\.s;.6>(fB!Kr
%S_uqVYsKeQef;Dh%D\Vj;94HWLEUMGK&$0@LSA,eXNP$Wf+D.uj8qjTJ,ulUdjF'@3:/#!fO9(W"Q0uh6?[b9Pua`MphKWDiSs:D
%+-8Wfb*\9"ONF%E=?pt4E'LkeC*rl6_(FN.NA+mE937jW-BdcYJ>T/J'1Vk"eWaN#1F#:_*sAfQ.gK\"Su?YboBUZ'&c"lj`crKc
%R#Y)c*.cErj;59q9uYVLGkHc9Y!?5`i0p=];r#!QDaj\C!g/*<$g]-`<.ug'Sm$mmS0A?&gU95s92o;6Gp7l6n4nfni;<#(MgWY.
%aM*8a#F8ke`)mNWSV=3*&BSgB0-)9(Y-V9Vcjhmu6@cGgfIgA6Q\-4@51'H+OHD+0>-;+cqW`)L[12^KT*RX?0HUq>H-3]*3J:K\
%Csq_#0E\2.)`A#(@/LX/?KA6l/%]=dYqQR2(04-:0^$e<5XF?AAKuKgj0Aa9#fS2K@C?2gBdJ+^N;+`HD$:gKf$:1_K.0pa[4tOY
%p>VtPmRcPK&_+h6R\W&,Uf\Z]OJh6T(@b;l/?q_%p*sO?nDCOk%sOe+7%f7<WpJq?jNd9MrO>4,C,r*#F6'jT]]0S!NoBTBD5.(.
%Qi-:]ILBZV&H1$cQKB<l/Dq^Cd3-K%7qHu<kX`JsG)KYk%DBtf+=omU(L]LT\YVuGG)'!N5a]'NK$O`"_70rjp(aR`!T?ElNaJ'L
%f1b-n`TX7*1F$90F0!A_Tkh&aeX#mM@2^p=>&U*:PB))PLc3%10:o8I4$$LZ2QaIHA6&!:KFHQ'li7Y`^hc@`oI6/op`^;d3'5Mt
%$+VB66jNe11.Q'eAn"mE!'\GfTP4VB!]S(1.HgsP&e#8h\(9T=/$Di%/)3UM+5dV47LtJlU-3NX%jP[8Hb9RbH8cDNJ>WC)">NYr
%fl&&M+]Lr%ZQ_Me5\;GP(#^sr&[N@C2J`EA2Z#;*U2Vr?&&h:h.$T3<L#rA?3<QF7SC*?LDU647K9ebR=S(R7"%%N4]gS"fc#uO[
%3GB?)Eh0ud(`PT%Ys&[C*mT>-aeQ:hK2anA)JA$&@(P7W+qbc3P`Gfo$`bc]0[l.idkU_0!BP';*9MXcL076B7;hN0,'LqP?M^6s
%m1u:;n7+4r"rJkFD!o/;_PgZA/sT'L%oQ>UPTIar!BAa_dmK$"_MLk$iM).b5-C0@o`6iB6;7isWGNe,Q!]?NH67<tJ&SV7:ci'Q
%.p%+JH(Yfd@O5cDlMGiK#Ht#c=<5>[?BW4"LBe;D2ii+_$i7CpnbC"sP*kE;nV/!;;#bT@;39dK!$c[.b@(mk\CQ4]_0QH32J`ej
%O[p<F"?mDB['d_lSZpH&0rtD'_4_15B*6-]$Ns3o/%ls,$BT9uefVF^k0S[`K:^HO+GEAgQlQh]8D,0=78RXIEL?RS!@H\fN8Oh0
%C$dh2IRC&0-KH;"eP4QV[U\&'#-/I>gPBs(Ob;QmK,S\P*A,)6muKDm"G2+jB-L`7%1@9$=;!`F!8&rlZE1QE:CaR_?qDJ/%^7_8
%K+Q6i`/&'M'2jS6&oia.gKoo8hVsr!b\!1K0R&]o8T"T+,SBJ_6S!5!4n]lP"L$FWRob-++pa%,,SQ`^aZTm9\S\MedQnSSi[<R6
%/E!"39Ym%XH0.!INSB-Wlj<`#S,U5.HU9E>b227_X`n6^_6&O;m$KQn(ri>s1DO>39;)hS2*I#J4bO.7b_QWl\k"1^>)XS;'tV>K
%=HebrG%(+4BY$Bl&-`XJN.44!6d,e.Tf,%WA>JM[\3A3UE'78)>n%S5<jU"H!hRF(5bo,+^C$U%i%&@7nbB7B4"\ngUe4KBK'<rY
%NsL>WQ,*H9l]N`QKrErD62!Z@l@qB501`o,_#!sUOqDen]-BgR%NN:/5Tkui0K4aRNBW#Wc6]8kThN8#,R+aQm1`NjG_\-L\[oq'
%E:o+`7u'R8b4m\FCeqm_Y".=F*[e7fR8.'.(0RfVcqA7Xe,equ,X0iiU2%/2l]0<h*Ad3of_r6NZ_..0f]$G6rXU(Ln<`$[Gk]al
%*e*\>`RC;8hgYBZpYW1o`Q'9:NnU<i5nHNVWerGs/;OAGZF,E,;bDjr3?1N-kj1bS0a:,J#K4tFP]XYE6*ujr?Lbr*g6mL;S,dgm
%`qF[XVGQ5R/rq.'q[87M**lC.F2,\fNtbZ^fB#T.Y+i,_3(tA@C8U3f_!ba@hPMp#.u\VN7M+46]`#8!&1G3.6hZsV*"XB^#TE]i
%Ob]6&L^E[HK[i72W^)`);]qdJg>8E9\#..cm[lrXd\-dDq)7a5cnF,tjr/mm')daL3$4sVRX[tb.8[=V4_I=MnZF%f+Tr4=6]h5p
%&uC6@@%-QER#56<fffaF1M>#=F<q*CgK][8l/2s'$_3esbJZ3*WYc?%L?aBA`DUlR9+J/G"FuiH08Ecc=9:5O.DQ6dgpNn3Zo<!r
%OD9`$h#J#"1u/\=@BdXUq<7BY`Ft9B+%e8^,(`mOmRTsEEM\$=*\^n@_CSCVk,d9u$+r&`/@2W?"P4emGTTFgCO/="D@n,R9O26q
%[\.X:EK-n5LJ%<YQ"BJj*-UA?AG2c0oLP0pqeFXB=SPuN9/LgeH%6_Pc\(>nq_ISp*WEpFq^qnW)aH-pJ;*ZU[tL+nX>#.6WUME>
%k9W9iJG<$T5?FIM+n/1K:p,<:L'8CZUDX`f,f=<383m9o2Kgjj^Y'G0k9H6OBN$$db%8$s"h@`8[i_bu^$(Es$'UC5Cj8u#mPZ&U
%3A_<AEAS4=%HmQn!?C#X[$'r=(0boA%m+u,$ZIFE3Opa;39+uU?8VaYe-Em'HC)_J&XR@\er);*bi6MX5QE2Wp5.K.fF)9&kI(*H
%WfYO<W!'1ofh_[$*+m+qs/DSHL;QB_&pIOon/LrB<'++=#sYRif9q@KDl3%4,;]nrT/e.R2X?K+]cZ<%NuR(Ukl6Ygj#@]B/nF]Z
%6j"8Bc*k;iC!+!r`rr#d-*Q-cF6RKZT:%,74$B8>Qj5>uOo&7'-Y<DO#0\;P8?Aj)qZ5h'9A/6>5j-K;gmSN5^EW8EZPqL]\3)*G
%d#KP;fMlr4fB#!g@5o5#iG?:GadNnDPMid<g'dKmehtmf0uF\M4sCaBRfsmQ0m*C7?^k(3p4@MC0W8B]UQUn+#BQppiP+1S'JLRI
%aa$'=-DLUNBb%Io.e?PNJU++?V-H14W7^5n<+X6M5Ys_2Mm4@`Sd,Tp1&d7MA:DI5!!1RLW+X?Zm-/[_W#S-X24q)pfPr`Gm4B'K
%g7[E7+<q@+F2IV%@NKG^TAb<j.4L8q*PC4fA[b3fcdPEOCl3p@&8PfGeO^C5UEi5?,#,cl4e@di[kPaR7%>/HPjg\kQg.Cf62E$[
%Hq]T?_&":4g8hjll,3+6_;EV&&m-OeNt;q&]]r\XZ$6^8nWFi^%^F#S;Qb`UV@euHr-0Kl8;N.i'4g)W8n-%!nF-Ss9ucJ7,Tuph
%!DD$B2W>Mj5+jpPKsag(+@Da]3TL01G[8?rC5(>2`/]l^p`1N0!&A^$^f7Z.Jht%dCqoF^3//Uh3`rQu[UGYlW_O@SYM7#-9M4kk
%."93's5BLL((IKkb4DF/h+Pjoe5_8l!%#mgPM9Yn4DGj`J[$67-pJqk"5beZLki2L<p+Rm#?h3Rr0.fK?:`rn6F.dOLCmj[;NP;'
%G8!2/3KIZllo`SLW]7Zp9GF%0,;7(M#,r_s5+-Cq5"5SN@'1Y'-E!aDBHDXbPeorM"-M)i#sd.BK@>]jQZOt5%5-Ga_<;I=.M2k7
%SF*>\A?renX4m4l/M^a+%KS%4QitT)^13X@1orh2H9"C5)j_'iH,-jNmrAbUJJm617Gs#:)$!;rA:G?g5u\>gYbuFc#RTcd9a-*7
%f15m!JskDmKJG%^(_Fn"HL/O3A-ptI`Z!)Q+PZub)OIQt1ROsOBB<HBfE^[SjLkTKc^&ohmJ72#BP)rop&^&TZ8";.r<aet5.V<+
%eUq*3Z>O=&+/3`\.fC(+r(nEVfN!kX<)E.sEWtIW[?rQp-:PA0OZO=n3]K4$omsU*&G!c&I>$)o["]2^@U.a-UB#LpSA@a_j#$bi
%RE_U)O?u/d2?l9ef9eciC](1W\3.(V7EI'fn0D2V'XIC&A_"lJfhDLWBm=qh(_ot67)>&X23Km/_1WtCWZH,9K&MjR2A/gdODqoK
%69pD0Ngs*776tESa2.U3&Y0AB;EU7HAR$J.YEp>skOLs`k(P:fX.SG4.>0W#ECO/eOa"g?QuRm/;t@n=AqhCC%&CgD'*qF%`>L.%
%EA_(.!YK(`&HKS/<E6S&i(J`OLU1KT,0.sC>uEAdFEs!]TlSQJWB?F@;4<Ag]'<m$$2tfqA)XF(KgWtT!ZbUE*5R%\^A8Ibq;#o-
%ibfe25XGQdc`tLO3%V">Gr^'B=qq=!ZTp)uU<U[+@V65mp/G0)_/!q?'[JbE9HJ8noGchqrp`+58MuUJKYs50]]L<77q<O-Q`^*8
%n+-M4oLMaEJul=.:cANu&iHkDh1s)kSPaa`8_h[WPN+!UbN@RuIah2r8okP#99BMY#V]e3qMO:V.K8S;W\(8DDR^LK/OjZP:5_Vh
%gUP9!OjnqTK:AU4.ulrHJ9>-/+LqTj%]hs"[?o+di\l$#kN/Ydg(<K<9rsNM2="3s(.BDc@$>[``(8m]MA&qP0\C2JQH/YK,qj<f
%4!<dlN8c"ZI2j'X-m,5b9*;29KK^uHdUE#n\KMH:&qNQmI0EMIg_$K%Noqj5WEV>NEIOPe:qm'i;2]XT_VS$93Nu7?.RPEk&T_K)
%=[A+&J>5;TV@3Ndmj+*/+3-VKaqCbAL%&tfdT:9!(/VXDcjcM@nHc<denB,h;Ka[iXP0sN_/8e'KJT\rROZmaqIV0RFb&pHGlDj]
%!R=,i'@/p0^fXP+<JQ1"lG@=rVdbLp>%;8s,O8#nkA[Y(p4155\uCXlDO:&9mJVReYYr/,@q+Z6rRNjM;8#Y`'"kSCkJYVGR&eH&
%-lV=,@!Qp8HJ1(g?`aO=djO8*\lr&=ThaG*Tb-[7>-B5W%g>W5CDuWYLho=R(/8HJ.S?Ri7dFQJrSPFAJ<EZJ_\#Ob,!?l[(f[j:
%N<Jq-BL*)N3.eSqaMF3n6Vi:F+i3%A0uCNieZ7Q<(OD6OCKsuW3.i>rD@D8_EV:.LB(Xfr4i5n:,pMm(i&q?5OHr/5N@$:KQ,qXO
%r*X#ER-a/`S)Zj\4di!<H^%AN&.A,A#X%^&m$tD*>Jjg+8njD+A2"(-*A-9QM$X)P8j"^cfF*<MYs7<fJc!KPRn81-I2#c=l#iB;
%4#5=K]28Q&KC`o0"Yt=A?&&6FC]obW4Zp]RVT5p]NJ_=A>!@9d*02ok_1WZS+dhqGQqIIfi/#G0[E<6Y_/deW]Vh;C"E*Bsc+C[D
%3Y[3QJZms_j+9#?db0&J6JrR\E(7OqFQ/FNY:3rY2/.`6[Y"V]?=t%g#mD3o\@Wbc`+:bGFHng3)L#-1,H`ur.IcAPYVM:AaN(#6
%=9?9"ORiN57RW*44Z+k.p-]7j+QQ[c63Je_I5@1"/OhKk-k<)@N;-H'<_KUOn:?:1HAEp3kA4F1.53lB#!aN,&_jB/=^D,ao:-e#
%DQk80`*aaUh!"PVhSs\Xq=J5PB#=s11'KR$B$^qHQik2jk*gkbA67-KJQKTqP4kBZmdiE:,m<Q(=:ihgS6f"*O5m9q'FQoOl#8^D
%&aM3Y$>"fRD[1Sj!"5)L'j"GhO'$s)3PkHjTSLE,quN@\%:V=f/"ACd&;F+\+=j,^"n&Ks_l%!(A1D"`O;9-I\lcK+!KqTfiI&9b
%VYHl^-AlgsV]!WXqmVUh0#3ZV,>/;E7M,0j-:6XOQopt7.X00.]Mau^b1shG9,P;bECDV;$/%BaCI:8)f].'a](7SF[7*Kf1X6;!
%%sm4[QIT8N4Q]dHIDLifZa*aU#diCGlm"9PL=](=T+_en'NWiKTQ_st`U#JDZ(8$T'-YPXh@M=mX21E`n8"8=Z-!>.<\G0o1p03$
%4#gaeEgdLO;[##_ihp9mi(%,N?N'?O98P.).]Z33,3f<N=DKu/jnIL`APets'ZjKm\-l:X^`Dfa7NL368?kdfqpJP2h()QBK"P&9
%H`\#RJdOaP_#'>UVb0qH1.8%/<P>d@0]Y\9/]^m33@(sE%eo9[e52Y>Kci6;&g<#T?/C&mJd>cZ9Q%SU0V?*sEM-UKnfUj$O`t#i
%2#>j@HN(_i1BE_iW3^p@aaOVKnK38Zfe;4]qX*TehL>Hl*T<pmm5t=Fot.CkH[c"\hgG.sn&]tD9onaE?OoBsK875@/,\qLXN1@1
%FN5JE7O-9lHF^@(A+h7&ll7Yhc'a4L(bmNP/V"l-8psrPn]\_8O'D0247P%A>2WGa]Z9NbB:57_(p9uHH*\R0#@e848pUmW1AMEN
%o,-5lgRp[K2GK/]jY7:/8\hPJc9-^9GR3cN5,(+C[LuSM_01c>/f5QsG2.U%_t:W]*<Z82C=uS,W#%T"&g8TUoqP8`Hnl^LV<%-J
%YZmbnK'0WZkL[Dp*7nS,%[uDb"$N!7jgZ)VeD4i!Wrm71jV[OBL78n#EV#Ih`c;JMW&TL$jHtf!RSK#UKRop2XrPK<K]J:lMIVn6
%1.;c-,2r^qr.s8JE.HI#a`#tQ'"ZbU\_TL02PtGqPM-kO+mDHM)rk\8f8k`I)\R$fs5Gm?DR7-.$XR=&G2f%%dM`@hFgE!1-i`&!
%`dKnpl:Pb!?_KH^MTb<&6Ho_.1"L'B*^8sA0'@YRCrTsjfV:1[U9O#[B,j?Dc=W%3\EW(o,VpK-Cj+hoL.SHdXA^!tkrrH.)3=%t
%kuT(hiPCT50fCD6TphW/?='[V@kgGQknHmMi?[/iHn.18Z(:$J_&14sp0.[>b6nKD^DPN;m.D<Gna&l)#(&(:24W8@0?1]Ce$sB6
%"&&nh,H-N'-4C%ieAYZ<ac^kCJj.tQ%I.E*PKlHflJ`8"]29@XogU,l00)2&f'ciL[Y_\f2_)$a(H7_>nbNi\%H_-k3LKBO&f32+
%\ccrVAi9p'S[Xue3!*_OhI9&Xh=SPqd!4cDY3\tNhMo%4is$Y:k:NQne*$*H7Q57m`QJ@__-.8I$R1oW7>o$92XZgK9,6AN=<-0r
%n.dU;;;LGn+iNFK[UK@f&5s+F@baIpK%k^tOGW:&`L$o"=9H,BHljNB(S]mmDn<@$;p7O<UY':<Z(/[%^9JB),So6=O;,/M6Jin7
%DGG_&j!\dT=U^="0K`a+#":6P*mh(K`_bGQXqh/Z.!rt!JtNt8LWDkZ`^8`U-321`:J:b:R@B`aFp0Gq.lf=e]$fBh`*F8'?m\@%
%*TQ>&9[#9PSqECIn0st7>5>hnj$l[H]kT!0M8:;n<3AJs#$D0-]TWsQAPbg79GI_GK\l!k,f]Nhh=VZ3$,48!,\CotQp:*Qf.%]u
%)]`p<`>NL1#^k7PK8^X*(HR<-\;9BMXV+UOfpAOC,6$5^46)nBBuVnlF2.;XU\Fok,d@o5AV5iWZr-c'[TlC[K2X!SLm]S(IiVl\
%%a+YFZ_Fri^blCRE?u7s40``l.6j,q/,_.P6In_+bedu_ZDhLMl#Sg,=70K2jHm,0oe7lMosT[/6innAicsQ*DXMs8bqSSI,U%o1
%>"'ccEXm_3)R7S\*6*.L#Ff0/fOhPVQ#IT)Ik\hGh_8[p$=C^r\2UU-_^HA?Je_h6m1ASbE"+`o$<;:r;@Ol:%P&]iL;@BT72W+P
%L*gYc)p^5)*giE_1CP;Ae;:L?j6uLmDC!+o/.Y$$N0G>VpL"hUW1qH%:,!*MYA;WdfS8r-H=:KPHKQ&uNCJ4pV\TK,&G%-6Ku$Ld
%lC]*$0J]<2@HS@0]Q0j]Bn`UsV7<c;'5;I99e$S$K<pA34b3_Qb54XW$k>pp]*>#a>mK/e'+0?nP`u!e-Oed8WHn(APOPod9dbne
%[*"q63%km*"ds=1O>3\eED1(j,2lEV[[fo*Bl$]sRmsn%]p0Op0X>n*eEe0n?+^6.*4Vbho"%a*,Q!VHQ2rs3pFll+%uu=K4sCQH
%d7_IknHWPQe>I?!^fKN"59^V-ogB`HG;*9WA";&bL[qEgk$V$>NH#R9it^+.2Y`sA]9*;-m6]GU3.le>`'UaiK.Gc3)e1RHJ$Em-
%_Vdf#MjlAEM6#l9(Q9p%0fE5il@A/s$I4YW]Ige;WoBcX;_WDFq'6;RJs5&:JqnHtV?o^l+.TfJ$'+Bl8T4rf,BtXui9\4O?\QgT
%AI(bVkpi/k(t$<sr&X@QHi$DG*5Z(g7ZeA0]?,VPaPF@W(Gj`e;ZhYh!!Z.O"!;W`21&-cji0Uj1GEbrX;2=Yi.E_m1@NH&R'36i
%G&#s-ij'c3F`-,i7Du1\\UdTi9;"pS"2bU!@l"3C1u6lV(`83p?tXLd?lM&SNLL]N*dRR;("d+KAjh`GJUN23NZ\L[emN1Q7LG)U
%9#Dri$kAGA$PPc=ojI"D,>MXOQ)0ZWpi+Bi?j&soVT_+F0V[')6jZ%bTR)W!JdrXOkccd^@fs`&"*db+!J?2Z`DTPYKKrKcG:MP;
%/\IS[QrW$S2\6H!gTXq$4M]XVDF"A`FLT>Z*.llY2S,%O_f.t[DNFkY<=@3V0KPki#k-OsJ3t.^^qd5!R5P.$h[7Iu/m*A6U+gD8
%rtec@.*&"\`SZl9lq7:^4N80'^W#NoKDZMk!+MlZ7<iA.7R"biImG9_83S4X(kl\m?&=&>T0NJ^mk6L=#c!%#[ipudK<Mr&2"o*A
%AENd+q]"9KhVTo,hVX'aUTR>gqluQ9g;/S9487Enp/cZ;k%=QdeVhO-m4SGQ944.qm;FJG>i)j&fT5i[T`%;,2>-4DdJd$;J9c,.
%6DCPTd/G@-8G;rnm4V9Sr#"UZh</.Lr_gVf\Zu.2&ff]CqCC9#-VdTpL/8CgY&:>U,_?iR8?BQc;AkX*r?[Tn#U\RFL'Osh@%Hs,
%J!cg7U+O8I0["S`r>!q&/LTd9+-7>:+T:D/,pu>LH,B.E1;Y14AJXWGlQlGj#GNEUOo?P)V4<p:ro.34JJ+cn)?NUK>tKO6U*HJa
%3If.,b92pgrj$eLK;:HO?X,m!m,7f\/La[9SA.08K=s4lhiraq0M$["diqe/OT&.p0n3^3je7:.3U8=EKHLKb0-mXU\?l0t0%\,D
%8Uh<gA_G\4rFLA=)8duj0/Ia>=&/Y9n<&lR4u68]@-rsI(JGR_;./mp5se/aBTW4f3LLfI>rdC9Mh502r8hgkSW(<C&SihuI(tIB
%nH0$P0>h+r,B:_14GqR12oaa_r1sYWmn/UN#ejZA-'HaDT6.i(7]L[&QcW$YhJBW-#fo\h,Q"%b_0Efh$\9-4Sa&.S-[2FpPd.];
%o)(7,=1i1?#P&nVH0>"bEtdUR7)/YQdpm]=,?GTX]^bnPen-tb0-Xg5X?"BU[UD%#3IW,%U?6$?$R]=5eerqYH?uq[_/DB)YUp-0
%)4]m"MMsDn8$Q0&)1JR:8<t8)^O5X3>!'VT?P`Y'`ph/*r[=8oQeO23KA`'t-O)a@I['tL@h\bi8$hb5pgk3GX:7+??edMUT-3o?
%Tb/(2+S`p>LcP-#nB:M>Le@lg0/Pk*N\gV(]s)DD9(>P'Q?]>&AJ$r^h*LQ=!OES$MI/o,)7XG`%P:^InOimEdTn;NM;BKXa=2Sk
%hPDZU/c5]Q%'Wdf3.?SE[-In906^o7W,qm6TI.7tr'JQ=7aV&;lr,IMM)7cp:@\c9;3F699*&)e+Shja*Ik4C^X2):06WXgojLrc
%=FQB4V[g>Dr'F#R+]s1:+=Tsfr)1=&pFFRnV"Q9ikEdQ*"fCnh6GSJF)p^0a=PtW[k?!olaE1J7qVLPr`q-6CC;"GT?h>N$U)lG3
%5]mm@jun!=M=hY?[kJlRM3jdqQeNM:=.3JgQ"UfZ/eR,4Gm%7h20f.>/AHdmBB;42-"0k&fE&hZ]@#LpQ<tP\R\rpPM\kK;"K2&a
%V1APaU\TUGR'31YKuB<2Vtm0BnUVY(DqaS+SE6+#,1C),quZW-Q5@B./AHF+=_#;=bLKel@OK*H$,fNrNTQSk/7;\6jVJ0%Z7f=/
%nM8#cEF\eJ9]+N]S`LYT9E<+@q+],GLu)9`=XFht8^M4*/-Wk0Q<tR!Un#!$r)--k03EZLn_9/QpDpU?iY"N$*eM;%1qt6$aDKE(
%6LPO[m52Qr#-6WqIOU!0(,Wcc3s"&$o*YScXW,M<;ts;H"X;>SS8^Z*IO,j(:@jD00uG"g^RQV0ntarm[DN=.:;@lJIAf[CP$d?C
%F4q&::f+Kb43oRERjU6G"NaJI,?TCVFO*hP,ejm3cGhrR%l6>Bp]^"$<p#\+QV@c$7V4'P485*1K?Z:%S_gi:SPUH2j)BTVkNt]J
%iHB8?b5?7f/XHM'#W"-4I:N.HmCQq)m5o`=%aJDMfWn-6b3V4&Q?r!F[csIXp!#"dDhsq3f5@1i$)dEd#QJuooUT<3+,%B"n4\\V
%!N%["gus-`=$m4`0@#LJ?*O.M6c8[gju^5d;/l=@`rH@00/se><Hr*G-*:r7S&grNWGWba"M:?MDD]'=@aG@<0=ETEK#AH;EO,LK
%3IDDNc_>/`\dpN7AAa#9QSJ$#mL6hcXbe1i`V]gFE=ho*kkf>\mfb:E?Y.^\U7i/sH,8@lZ_.J'nm9I,F3ITAN^80=T^DuQ;H$r7
%NPktg=QsZ9pEI/:7WmQoE/oq5m^0Z\4JJ@t=aQ8`<f9>-ShRWM`gsH&I;`8=/';2J%nn[04(Br3,GPe;Q*?T6"&:Z8lg=*r#$il2
%fRSOaZLtNU%I2'WH<Cl9ETUN>k=I:*]t8?b1\F3rnRG@3kNN/`#NJ&*bop@`H"XKL\WZRdMl*4GheC3s$Ar/f'Y=tLP557hIT"hN
%K_ZPa]KmZ\UZ\2n"W[0I!;EgabLq0W2[h9e,Ni?i-#[[-\?>2QiPj9NI:_Qs1+22f?OjV[:II;InlJlKj^^G=apW^Eq$3FZMU67K
%#<PM&+VeZo!AU<Fg.BF[8&a/)0<Ipa3Q6$!YX*dUb9HZq2`p^UV"RF'MhR1k3CnF(N#'f#ZD_eiIf;gY$]b\;_P#uO4WW8"gO*S_
%+PeGkBj]eLK9B<5L$4I9#j*.^Dj7oh\d1o7#abZ$8mVj,mX:qmV2<3]G=l2i:p=f,;t>CX89s(cbJ,8J0*?@D)E18p8t#?r8m[5?
%b1I-8%*F^0s%:DVO:*V2T]@D5##?mEhW7E;2b%+93Sj[BjP?tM'XApo7b@.LaK(Vo13,L5kk0RNLCUr_L3eat3q5]onj_su#^KSG
%LqC82nhPNFi>I<]$nf>2$US/(8!lub'(Tq@dKt1Z*\kWcOS<R;E@'\Z8eo&1cpA<7Os6Z\4!-*fp/Qr\;0S*83KMG*Hd[FLq07aB
%`.B%X]]*C9F7\q]9@@C_naW>;"`A#cntO'[4E@J#?##jLA)d`kb5&iPqd@]]j`#TVAFE<9jl0i&Kf(5Q`[`=:>&11a!eU+X(U&L&
%$5Padk7K.HP\Fau`H`ci<A9N"0O?ka7'AMRnM5uee")L8E?7(m_8\QB]`f9,$V0d!F7D:/QP8nL):UoL:I@!T2]?#DMCLLjb8Xbh
%)^N)6Vo=XJ(\g$(9IUN-SA-ltGXjSk]+XTCn(JHQ]46*!Xq):9E(Ds<A`#p$%]J,)hsIX$O0m#Q8Ii?.SU21N:8B:XmTgAhe^cYO
%/d\5kSTqV67h,"VG(t'iFLQUWn]&+4/;f7.RG:;^P,t[5[BOBigUT',Z>hbMF\]HiqXcU'hemRuf8X[7:k1D]gFdeB!`9S@]3l4f
%q'31Npn>d3"kP@HJj.e`g;Ptcl8PSGi*Y-G^km6f*%B.WZO:*lH7.B7E@=_a_6M`k>Ik,aJ\hHOrPl#KiFmYglN4cKg=Rse5ki'l
%\WQ29#*[X#eno.[H9&u_I,9^&;+=?;\s%WjG_^A([(<37+^FoeWXHZR[WZXgh<&!oK2WT:5i@d=;<gK(86SjT_Q6L!GR#sR:3%Z1
%"kXjJ?K]d+C3)AJ/h@e-.26pN3QZ4/]PH'BV@3,(j#4u#;,N6f`f3W8\U,#i]$'t+"d:Rcb%0,91?eiGMf=(UklP0#Im/+!!P_*g
%mn0>o3:1,$>ol$;&m]=oKf4c?o)X*O+OQ1aI;nCFa7.t7FA]Y@2qBF"Q]ij&KC8=*nVodMaTt5OHGm&$c95"6RlTe(TM$^\ILt]i
%17RF6$$7%PcPcd2K._MH,K^i3\leYDn-]HV'KmhH%(bWDH5,t]:(.J8(+^TjHDAh5"Tq+E:8,kd/3C'tKs"=m[GE?SBqV`3a#H]l
%\Yc`,cd\FmGD="a?kV;W;275gmYY?@cCg(tDt,M/%2,c>aVf4sr698R\4rU-<]'Slp08TX,gMB3QW9MTnN_-X/hc#i7U-,YgpfJ7
%F&`n$nmt=5m:'rl\9$!odZlq]#.tm!.MRQF`+GAoM"cM6k!jmEG[Wl9LBdln&L$S&%#X]D3sVe';D@:6/81l89q=o`fmmti\NBqW
%,cGe[gb:+H3d5N"W,ihG-Ja5OkGj\jY"bJ1<*C$'m=bf/E2POkF!1O@C/a<D<Yd"LV=kNk((A/ic:.)lI6ds:N#de3H;E[.hGgJD
%3&a9-L`juS]`M1"NB!8&:A+QK%TbM_S4b_pfl\ObV/7WLg`a#]%FsC]Kn+Ak,L3,qML0R0>_4We8Hs5g<Q<7,i`u>ZG]?$>MZM,b
%1Pg+;ln%HtS4e;@I/Y86<Ur;N9q@3d!+5#N3gV*@/8B.h>R9Np#'I(($E`3bEs]6>'Ip&&.4Cq54fTkRg7:2>.6YB6(<Q=tO"6$-
%Yt+CXr0')VTF=:(K/f3c5MTd'iW?Md/k!:B]9l3\n%E+?OLE#OF-1e-5e6FI6HX,99QcFLdJaX8>\&[.Ge+LMP4f>KCCoYq^eeVS
%k>D;,j[Pb5,,D5p[GVO*7Y7>l`48!j`BIA_gdG7f/Xn^9e\K]E%Q+]'%sS450>tCnU)deYkOQ?VX9NfB.Sd<n,L2!BQZM0A<19-r
%3H6YTnF1>6\W@G:(W<l>NGlXiF*Zp/FKd,#&28<e><@<P4u$KL6(PUk2t#I"lK#K84_#GIMOOmC0',j"Mc;<=Ap_#RhG96rSq8J<
%mZn'&D@2-*+O?%PH/m1E[;Xc((0SN_$JJ`3eC;Rt6jci%ABegT,F\m]-<P>W&h=;sSqS1)oMm!+WI>e[4(lh"hnm1AdH6Th%+?kC
%F."%JbLLRdZPSm4BQM;@G]8ojD(^R/!#e.mbGjTKm;)HX9&ma5F0S:@_;NRlJ2Yf72]#@9@tQb-!q0GG";M'`ZX8Q1q79u73cQd9
%^(K4d,uD0sftJ']i_q@6'u[X.5oAl..kFWm3lN%X/ti\V7/!)/fnk5<F"W1h>CYIsF!5G+H3b'a4O^d-F"(OHr5P8M1QmeSQu`T/
%@t$P-F!2-Qm3KuR7EUjr'BdeU,r&()k7SP#&qC@0mM9^">cq&L)qsREidHsfm7*TRYst&nk<ctCl6ag</n/D*''E0:0,;F9@U>O!
%V(4`f/2_Zbc6WaXC#ECE"]@c/=V3G_;5862c=Kh>Y<Jn+=WL,qP]Pi)#4U<Le@G3rdOAG;3>#e\>B&WI4f(nb`82cr5?A95+5>lV
%%b<kFZH1jA@Ehe<IbLU.0_4J)"_TI)`JA]p.!*"0(n37h$U;?3F/R1\msMYm*+Ht==96Eo=W(kqS^F8(8sTj'Y[<G/XKr82>_fN>
%R;u.MM4t8G>G-V+(gak3<*$U%`fgd03>`*n-Pp2K'GguT/Js#k,PK9C$R+Hn6'@-Ci%[/Z/h.-'.s,:B"TlBAGGGLbZ+\d(;?XP_
%7V184+.#[=2E-4/(DqLL/b\!$3_Vcu_WAcg%.V>PJ_7YdhTO]i&@fg)IGr0L?jK/#d^B;[%b02m0lH5lZ[QK)KrL3nB/h=m47O>&
%F5hdZYTEB\9&*<t=4iJA!5*sQ?rqnEJG@Wb&/S6?,(gCBk5h*$oAQ"0#./S8gk,M-=_,%`bb>Fq7LX=qAr5BDE%>S;g.]!bZ)t<g
%E8g_YeDSK%Mg.`T=`@5NUBOh8!O06ZjCu/d&4-ZRNhF2,6&VNi*jRcTo^kV'MkWpp3Tn.'<<E(:VnWBf"%2FtILCg&Au?d%aof#%
%5Zi!__O+j9q($"n_QD%d3V+iF?oRE=nC#>rkq,g)P0kWp:4a(:[lB,d*`p?c^iH`i[UYFH>'0HMI()A'AJ)eNFLQK_EpGd@/RAHj
%OiK^!U.ji@GWNBkl\W9;)$4EsleG1Cbj<Z!-b>!CQ;-l(7P/c0gbRiLQ?-,n>B[;#Fd(VKJlq3G/RHDEj1#9^0T5m-kQg`pC,HiG
%&ab:p]b0%_Os@*RDp&n;^q[DNL$^e]S_Y&J'J'L"/JpNF?PD5'\5I@MgMN3#C(67i0\aJ*b-Pnn>?$.'O(`A:M#a'_=`)!&Jm%01
%[Wi11L#+e++[iUZ-uHeWM-t`cg4BQWN-&^>%>pSs[)FpO?C]@XRt+,dph]Im@&jL&D<VOiE1.Q,;G_XGa_XiG`;2FCO^Og:ntr]]
%9bf#7NQIL:%LCOEkku]QIdku6;qf9_`>88CkkAJi`AVsCK#AGZ.'C+#f]K2;m7h"nI/o,?[Sd!N6stqcMO0Dbs*CEQ*V?`V\-,*&
%fkX;Q7kgsuY];L+lJ/e'35ME&ERuh/fr(%F[^$V?A?LVAS+@lag*SkSc!-Zb7<R<f%#UMAXL48jf@)(KSK,m%B._\.54XuE(0hNK
%]6D7u"=JhoQJJ7HVck`i[6j_+ZJ+:4*9X?H?4V2AWjP+sg5\m-lS-u9<(gPMO,7W)HF'2*[9?Wi9<E%D/TG:"7AP99889ksfau"\
%C'jDZ+&UN'ff6fERsjZ6Jm-_h[sI58"nn^Pbt\Z(UT*.UaD"KUFek)?C$ckh]")Mo]76]NVT#"F!m)B=m/]s+Ep5P@/HV0nZs2a[
%K;H@=5>Q0#7.8+f4bKn%*V-8$s6)P!nIKPb6`4B[hmdBO<ko7RC>*'q$>*J;d(gWE,Gp0)%g+>,Bi-#`@lA"7S(Ab==D=J%QLLTn
%SZnJ9oPtgc&,l1cHaG>-VI62gSe<Hu+J^;:9<WP'g?&R0&X3JG'f9CHb^r='ZXbF$m7a6^#pEPl=:J"o$h>B0Mk*PK&7X#m-JIPj
%'V'sp[%1$`2]c-jcJ_.o%5#_Q(cP+"$PJ)\2\Oh)<PoOs[*sHJ@$_n*D7i`m,(R.%[R">W;Sp`)5TAH:!nn1is6O^%eDQT4:(22R
%T*8nmJJB!H,i^2\BD;+bH8^Gm4?GZA'u[GrM(!8SZ[g;$OjPYogLR2blg/Sdmu;F4GVeC<S/i*]$&2RkoqI)a-o4Cufj</7B;]gW
%#N%(oH9n[E).sPp/*\1p&-o[5.A]L)<?SC_h<]5-T4".ZhJXjqAuBha^QHc9pQV4aFp<iQWFdA.HY&WTNhdedS^UdD"jcOWjN!g'
%G'\`s=CtW3SPP?kK%)\/5(.Iq;OGY)R,pUiDh_EEk[9;'#\M]A8WEgBdeAbCoWg#hamIA+$UQ1nR=\[eH1g%VQK?lnr\c.3lu]8O
%+I5G36m\JN.uSa_46IQbD"%[J<a"2k9-o3i(8Wr@;S8.7+p:Kon]^a(Wf3U84jS+ZPb!rbF@+Z[1f(?r`f.[;aTBC0[T]rXcH(bD
%8*m2""F&mh"e?!7#"+8YcT6nnM2r_D,9Bu!M]=mN1pUX1C%Gkt*KCuIOiS"Trk0R[,^8aP`]P\\9ctq")hVrsKR'AW5o*cW.1Chq
%FpkGmZDUMEZJFb`2M^P<JIK.ga:_q!h;">^F\PY,+]!Q\-+9.%Ke0J$X[d^i=RsZ"#b=0q/kku#jI*kQMCB9)):(L!%FLS9+CJpU
%NB@tUR_\W5mT=#Oa;43nYp9%%Dq)$_BX.f21WRqI)VPQVZt-'c@[Yu4&(F)aIfmWreL^@Ck)G)HU4D$a2RXg>R.C'm+XgKcJ5[/6
%eeS2>g'WfO)*\MS=Aj1@Z709J[Uu+\E-ph6-tE:"Pd,&N`S;Q"Y,Pod"W-@V8>I9mb4,d'%`qVS0IsNqkV#_M"`Ga=ZV58t,;(_4
%\q)G9V<5r%N:,ad9+r/M7oL3BiV^7S6(Piabg$8c9].4.a@L1+.7sRfQ;^%G17\[lhWEoj-[Jj-\nlDZ+qu)6,h6bIK8]Uu=o-34
%JAN]<-ViZOa'o3O=8(M2TLK:_e9abtP/?4DOSF+,\%$0ZRtl(3,5D@c?GoutUXZsG'G?Q80HJA<8<B'X3OH'GE-?qj1*-$>J]it:
%Z`318!oS-D@;+N,S8Eo;<TEf=;HMq"0\2;"<:pjK)^k\9,s&$H:6C*X`EhbQm*SH#[Hn"Oc[%5;ZA5!*<n;sCZo]o[\m:LDQ498G
%]n/=[qd+$m"Eq9@I(s3k"u@8F(inEOS'D6h,PQ3;KRpn[ap4H9"$R,5E/Pc6CrclRO0U`&&M(GgLbJ8FnJWiAN13"2*e*1qdm`X3
%>K,3gNY>."2Vk5;b'Ho"_qR\kI0QG_>"fK^a\N)L%Qu0&,+rd/gGPZ(![7)YNVq_+j;?aV*,epGb6GhiL]VY3L9X3>g33p7O_m'&
%rrS%O9"4k"?BF6I0:+R!"/[aMFF8>J7T[DH`Wj*YE9;6;6m'JX\n-1)9s(NPaeHS=D64VdFaM._9HLLf.'*Rt&jact1G)K[L3<],
%(^5mqnu`t\H">mkGM*ZjfFTGsS1u,B-rlF9/&/_@(1Q8#a?duoW`Rm6RFo6<GbXu1]Eb1E%khg.UJ>rqJ<nLGHS/:L\@u@.=ka!W
%3Q;L5&2T)\_qEfW>T+lqa$*!]3S8);Gkn%`(O&gd#@)mumDuJ.Fo#%1YX(7T_D=NCZnmlZ&OQ#$N$2REGSd#&r)&B`4gNrLW`F)7
%G+;=La3Vr[5]DO&XGPrZMP?qmacXE@1Z0/)-<q(NBtpBPWE:O12;+$h6#dn-lid40DrS)7UVRh&&&$_Ii*LtU:+W84$>1uf(]5_G
%?P<>n\[0)\Z')QtA2'&$)T)\aHeeupLtUL$J5?*i#h<)aX;dV?nA]^Y!=]`C`,*j/n.EW5h#LPM/-dF+o0Y:`$mLml/.Tp"9*-X^
%M+?JeOX_8k_p%#%n:6[t'WUIScrKTrL1_$"LcDC3$DN$srlPeIP3CDI&2TM=-?a4j*jE_IIAT*9R?FjWDH(h3_-LLYln6:kSr)u.
%/h]j*(>"tVZ,u4$BPPG<M'doBab+Y0%oQikP-@m=#fRLR>(Uh>a[?X"Y"t[Xq?&F=@j-a>^fUHmK8]BsD#KG?EU;s.E&/qD]M'.C
%DJ-b%d>)Aq(]kk8+[NPoh#UYB"\Ga2>>.a5pu1115f1MQ\-0&$P`U+k"#-@+"(#i+5\/*'AIW)nY`Len!nPUB#1):#;1YB+Pap7!
%3prQB"A'ILP=1g60+i]?X\M`Y<UWahI-"%TLdaP]S&'CT>ofe9_h1[Pfp90=S)5:O:5D1bQ?pnb+W-"O$A#9aT^o:P9L<:u`T2Ds
%K[k)#!MR12$16asHG)9pl<WY1-T1*#eW.3*m.8>R@#)(,;;ub#o8YDL8&T4tZ)Gqt(0rW9f$MFF00q#B`F)/H_*0<DS7c'9m-Vtu
%7p1]TJ,P*4+/f1_nRM6b"M.2<PlVEOb<2a\LX*t1VsIQ`Le&,o!;D&]a!8r^I1lgi.+lofTabXni"0Qs[sF01On<Kp=sP5X:gAEP
%F9RF)?J1(>G_[g=R*6"_ld;7-?/HHfX;11A;nZ<LNB+^=*4fbuX,c+U_rj`e7hWrG#qLIL,ekE?!:LD4\2t*N2,k_YFUH:-L:C,d
%fqF_L1VTdHdX7Y/D,WbcHqY9cY^NR`QVD``qbTE[.H(eC6PZ50s"i4$<K4g;BrBiBU2s-AeJ2>k,FU2L3RE`NT(@7<QU=/**,JX"
%B#Fk+eiM<Im+^eHcN/sY%m:%sjFDn^.t7rM/N_bi9Z<N/ep>m$`]Y(bgd_HQK%uHGAX_sRO9QdBd+7Lch*jDrl%+(NW8A*hEHilT
%@L/["o;8Ch*kFF%eJ\5t$fg/0f'Mk-B<$&TR)N9qEP^eEEmu=5.'mB5M0Ua^QZt]q.OTT2M#N69/4YZ>A,!4@g:/*RQJ1p*KeO6Y
%%cTt"ejKq"QuMaM8+m<MF`Q"TWD.Cr:!DnV3^n"H$o_hqDE=AN"??T;HH(q39!(Hm35AP.JfbmH,9\n(JE%;q5D$7'g$;$\53QqM
%ob*']'QmgP"$V9Tdm3CtKe3TaV(H\%?j&c@;2C]?iX$h<)["%=U+.-)Ri$EpPj[h%Vu<nHZVRhH(3)T"[*'!IXtpAi&4B>KA-2@J
%(L'd*QK^nWZ.BLAcH@UA3\dG1oubNMQh\?,47CtP4Z(kqD9f1MGSiY#Us04Va]6DT@.r&jhP1l\0X*V9RgoI5e>6<=>t1Hl/9[42
%Te#Zag.<FFFand]h'9RMkUf,k0Fs!0Kqt<i4=]IPl'Ag%;KH`'W8Z!#jLa?.Slu\iCGaOtg7KjUnG[FNWETrIj1GPJE8=7gE`An:
%(T45j]pDHelbNo?:)o?-T+N$d;$(bU858*<;BDDB5EnTk4LFO:^Mn(hbNhuA.4$"P%0`L0o\iW$X2sIE::2@M=)ipKn3)WPOPP))
%c:)$Q6&)`%(;ct</(VVN9TFfs.79k6bYE&4?rPb/Iu%)<6&n]2=r7ef`tTbd.MF7"O@-<Yc4e!#6tf?##-W50j]J$E[`e++a5m%[
%<#$'#!Qgs:HmI*_ADFD64:i-Q4kKF;q,[[^.`a]F&Y'H(N8h[,8n2<\Ub*qn"!Os<ZMD^Yn^\oC1j8'eF@@0h&0G%sDIO/%r"FA^
%&uRX\LUiJ1K>V_N-qX![F\/t<ZY5$M`G='QNcu\=LZaOk#Hb9;p`]'SLarPZQqcUrQ?;*u4[aFF)5Y>K<M2[[K3Bp5YW]U3bicTp
%a%lk81r!;r<9!2trX<N6j;=AM']l;N*5CMPSDHX$@Va*d).Hisqm8`W,!!7kR@V>LA'lFuY^-<kG2WKTpV/bs?7l^lajn!GAQHYj
%ema8d2F9%fN1<5g`A@Y`KHMOJF(F;`;IC'?qN6@JY5i$$ibh7!DpKpZD.eHB*&b#3,QUC^RM+5l!!cptcL.Xj3LEE-'UJ'CSeH3V
%K0+ZpLei/l4t[LeKrYu-E6l.pJbk%%,Skb7P-#/Sp*`3l#SN9ZZWY36!EYdVT4_F(^XpA8)JD6%=#DfV[0<F](Zc<rVSrTuqUL3r
%V[=8q7qOU#O7[HWI!YL>af#4A:'uK<,SN\QSN%OR=MJu,$,q0g8V8h^l?!`U51Z]s.EG&3\(r;REjM1<C;f/<pArHJ*p6Zpap,\`
%!B>U/&Sm1Mhp(,rC,FV[P<aX3:m%i$*_6AI@`B@4._)(3kT/TE.$p5F!+_L:>>1+CD7pdmDa*#K[m!bhNjm9[r/N,DZskC)"TT-^
%-2BVI?A52?&<*je+_:NqU_AJA,V7F(If,e!n6SuPR-T#CiEMC!;TSfe,_AF#pP2+?.+pa)o!+TBME4Tg3Pr>$7P`)P.XpLl\3pJ/
%HR(@K2p2]^N1GR0$HQ?CQf[Q]=nV24Ojlu/6KCtr9ps4#ODm>fG_lQ#Yc>kn_$58nTTMo0S\\F;clhj`QfJ#el">W&d^mr)1]t'-
%A0Qb+9?q1)qdq-H%dg>F`=$??P5Q^&3O?ILRS3"jHP?X5)'h5;O;o\8I0Y2;L;D"kF^X^hf!m2AgWl2rnR-*>WoB<,;G;LZD."Ef
%:*#bs(h-tcN/saUpu%X@T&P@Mi>>^hWbP%S;K?qU3@;9J-c9_-_#ho)YW#E?Hm&J[c.^;Nm1'ds]?V=bfanbeqN-1t!K-"6W`$'D
%;*9d145dgC>]XRK#.68A-I1t@I$nR,MW;;]L!:;Z20NN-'Ot=b5t=ii!<8e:gE\G5Ag;rJHGm@!n`(oqKhlF(\4UH&80Y(&I7C8f
%HTEF:PF"G`M#c=J+2DA5#M1IaEq\?X]EU+9fS=h`B_ZiWquMs.%D[jE3WSKMft<)oTSpGYXVCGun8Gmk5=Y./ej:^aqXF:L(g>:T
%Y'?h'MR2+g7ZM[7XZIp[UaG]e$VE=9(h-Vt;tunW.([19I75K)!4M3?h$+k4H092P.Pcsfl)h\aD<0j/TN$.n1^_0SZVX?\,g`M=
%fiH&f6AbF"]+.*C+lu7.-Vjn4%nL(.nrbRtUTVcdX'iidKeYiC]4DZhOt,M.qZGjW\W9rn;[qTO]3q$sbL%nS\p`+\`X&0\NX%jD
%%W.*6*l;"/jB/#!_`jLm9A,!i:po[n+p6!"?.uR%>QdV7K@EemZleQ];2DoRR)>Sqa/F[D/TsRk0Tr$3**MD)X>nfbKN`%Q6+J+\
%P'aE;@92NsVjt*V:osB)fb[",_eahN]i"loCUl`3KUCG+$u2@Bo74r)F[:"`&gc^@Ro9h?@Au,`\ig\NEH:[uUY\G(enmoi]>8MR
%2i8pkFZB7;dC:M,'eXe&G3A!I<@Fo"E!h?T67!m&9Y9KUc5i-kM..MsM#aDYb@QAn?bC"=k7YVhZNHinTgEgn:5L3u4#827JN@o#
%Rhp'a0X)&:m??;GQA<:CY=%7s[M4B_Gk<&S+gV+V>`>fm8_<+H)o@X'$V#0.n)8,0+Q7pm?,g"0O[jSF!R"0H?mspd'hFucH,G)N
%Q>ic]S17^fn4bk3[D3QrY/-a5?C0^7O8"<+#bP8V`fqWtTWgb9h[bRF&:f:n^HZo^2-ph4-l&T&]V6*jJfW3l(g@OZ6jTMkU'jQ=
%F%@K9!W\Lo0`eQ3m^j9>-imE7\KeFoXT%XC^8N.-*9.9C4X42Wp@T!3ibPkhL#0HHig-orSia)%c56OZ.T&_h!$b=or-)B1bdgjL
%W8h!<5I/WR$8T0-hla;d?1uG_o<(sU\L!3WDoRK0>_P?f'm&E;Ok^?1V.-`I??4OfZXudq6R'IaK3=_31O%PE`2>7#VWhBR&[h&@
%T28YJ;'II`F:>/p4$Z"rPKUJb;L9`;i>HN!@H9]W_,MlmZ#(h@'ZiVO76QMPZpT]-08n3`.ptgP:ng[V"_f.PahD)\!\#P?%QG'O
%W3gn7ZhSK<ZEbjbp/BZ]bUC\_P"2Y<G#\WuF4Eu^KeB/08Kf=urX;K[2FZpK[@W.d#=plnO4f3]7SG>uP)!^LR,)0<FSGjo)k)%J
%QGXq4i%@6]M*;o3Nj\1T$IgS"#>)HIl5^:p31J]!J.%l?q=$cEH&u9PX'M#CibJmsZ"Z-!A6r$$G0=]DJ'"0;I<[@I@c,R=5>"bB
%bo7<1]8G6[hleR`Lmc"Fba]"C'%X_iFY`p&I:SBC#KX8KCI(jM'nM#3HEM@8^YZ)W4jrrKBMc^.G"B2ZP`Y*+RGmFGb*02Bp)GU)
%<XEV_7dM^HS`3VhkDh&@DUM?m&.q%C^6"DVSSHA1+;?+U.3[XQrf<DM,,5fEs$!_JgTERsX:d[LZDYN9M80:NqeS]Uh@t&TpgJoH
%Ypi,FVQ0]]]t6T/7D'V6ap'ZF6dEndJ[:''$Wcad@3-1Fd<$M,2k$g5o&lh^5b5:(*kDEHgD*Xg-'&s2i62eiq\Kn!1u,!8+BrU4
%S\r$jK_3LT;b(e6^a([[j5Rl1GA9O)V22dE;0f=LKWD@&"sQF^1(;K#,\F0==bJ$A\'<8TiJu#!B&K5FkQjuSndmq8i_3t9l&ru(
%9+pA_Jbs:N_jhu09$u:c@!U88&J19LlUl+_D>U%to^t2<l!L4e&HIOVpDn&9H!>%`N\nrgE0@P^I;FO1K46-b]AqccpIsBD7E$LA
%9`KlY41YK@!B5?:4dtCL^cFE.`&)!iW0<tg2m'mT<YH:ie):MOIDeJ&.^\"Uc,E>GR&4,!^5./\gB#sl'QrdaJ?9/t&JW4XOgkT-
%)^nZ$%;sP-5gk]d(fa*peo<(jb2NLkq1#Gc#6c*#bIGi1%APt10PeHbG_QP[BC@UI=9tP]3LX28[;o-]g]da:o[U5`apE)e`d+L2
%Ar=X=LbNFJ(",KG3F#HH/B=C;c<c'Y8X`Gn@>_TGM`l\i3*$V9g:DhZ#W%Wtl#9]aGk),aB+j6<:3VYXEQ4FJ*`Vtd].X6KR];)>
%!f(5ZFJ+;8MN<XKktpa\)_#cUW<&P?'(/*b7V_R@$,.j$GW;9RH.\S-lIl)ueG,,am<90DX=H!Eb%Mg=Q6Cg"`LFqDJ96MP%s`A\
%WqYRp2KQM?iKRB$p3GN<8;ep3/BM7#U;>4C.SD;K<EXGThJ)/3C*o+?%>d0_AgCQ^riVYhA_A1i*2t:]GpIO'^.D1!#3.\U"L[sq
%kQr&rFqWM.G?!58Zoa:hZ&J[$a:g8.N&1Rn'VHoq8DgKq8&#-rgls`35^mr''si[WY3e.3CfR%n@#_0S&KRCPPR`aOE\Y\jS:d2%
%Bs%B)\-*%NX^UljnedNG7leLi_H\Cl+O_M18?E4(J0N@FKV%9&e:Rgpa2BAY8r!HX'W55XZ3:/X<\W=B[Oi5M=W]i?].roH%/147
%eq-:a>`8B/pQ<=E&9F7n7qcYuRQYjd&8V'.-b^S'MX'5[&;nCWd]t'N5CAGf"/Op%48u2-Rpj/qUBB#Zba:6rK['TF7bXo*Y.dgF
%8l]ik&VUb;Ef#lU\05TcPVqMb"M9k&;V[]PFm@Y(4]JPJH282PldY$Q'nApnF"C+1'[Z=^d1kD-T#1`[<<:9R5pL?f%*f?Jm45]`
%?j%YDRog*Y0c^-%S#")f8G%6@P02*.Y@)tMASsp'+m?b]SEQ,qna.fJiRt]N6<?OYIOMe%;ol*EI$uGhE!0diDhJ@=UN].7aCDj/
%og4+X,rIEe-rN@*o!e8u+gIidgFtAV_4)S5fV/)T-`O*qJ+fRNdY0"Y%,)_n*8uq%H#S2ZO`ZMj_H+&L*,Xh@,!hD0Ch+60W`klG
%[(]CXA3SK#D6.^/h(A^ub096@C7rldL&aTkqfM9X`?C+k'+^_K`/1+_NGVg0VcXurH6a;>k/8X5kuq2=a^$g1'N,[d6-R:YECs+B
%iY$'#9puJTq\dI8:Y8'OcPRpBh`:OG="%.gT7%#Ok';k5%Y:#04YudO78m<WbVmDm@9mLp#E2A$H3'Gs22W0pmLbNKg9#!qo*;.\
%VY.g/hB3Lu0^-[k:Xq8'Yk3\*CeB$H!Yk;6?Ph?2"-h@'2Dku"KL'rQZCBIKd,&B.=?C;LS9IGpT&h%];&A;WaDJj4.l4UWEPnZS
%=o#V#.fWZ=-I4BON9CAQ[\_[uEl.Z91:U<2kg5U53l6F:_:fn$oW6fb9,d..';Ws$)eli.b@X`:M2r-04K"VfDFI,q,i4H:P1MgI
%\*qO1[\s]VJo:._eMH5^G]l_^.iB12*%=2hAE;tH,R7O.:V6O_%M_VG"gdn=V1['6Z'prW'sAH"c+c!$$@(e$krb1uA/(s(8R>D2
%JpL]=/RBgEQ/*Oh3/Jl=6To+E*R71]5f6Gl6apks%q0fV;M)3>Gj6?2?:loNZR,gc?]GhS,pM$e'3+6r#mpQc_n0]IG-1,W;FPU5
%Zo$<>&lfsiq76kjP?s.A1*ut54a+^%f-/F$m&3f,&0IQS7d4l*E\M^40Ol3)#!HXE`I(g#X5Lp>#5F.-dnqD7*-gTj8q?"HVID.6
%Dj:ra@HNZ/_NLudg?tboD6\=pDEom<P/nIdcUG/\KEp\%01UDClMabCZ=*a5&[`mCLMmVZa@?fR!i7*t9eHQ?$IdH098+h*#0V?a
%4EWNUHWf]k//$Q;ZUC&(LIK-i7/E%0"#>3.EF_ZQ)TBg3Xe8FGX*A\TNl2tMqb^3=68*f,A-U_WVW;]d!a7Mpa,P6TGs_e)G9qfB
%$S<X"+[NG+GS<2=FadW1bg$pGj?ta)0<$OI^!NPdeeJh5U,3`n\LtSQetU.oh.2spTPEQsSrZ0H^ZoqtYWBdaLS+W7(Tf03#/FP(
%(DY&R<%fR]qfYo^nGn.BI!k@k,[e37-^VuU$F]_l9eElKhEZXBDr86mSVao07]gO\B#9j'nLM8L_op!^J7[:H35kiucN9P-p>Oj?
%AD4%8XK#R<85PVc^#gnQ9pq9jSs9F@/60"EU!#i1Bfd>A`HVOXLk'pPn7EPRH<DQ"K%*nI6Q<Y[ZtjYc;OW-<I^5tB%in3p(2iU#
%.o$TNoJdptmEAItVGja4$meK;l(S2UF@(Wd%)\Hp%&5USb$YG?U$N=FcD]nC#p^6dL,B;18K'^o]UW]'N6OX"q[L@pU6,MY)QPM/
%K<'mGaWBor!UY-?FZsL0Qn/UJ-s.P!?;#Sg$*d?mOPeB`Ud&;K\.g_H=gbn/)cgT"@Rtc+4+olI\j<oY3&Z:ee*sA7149qAFN3O;
%g#<ohGo*XB=ojS*!\"i66t26-'9<o`V_qMfk8_E7A(U=hJh7\q>aaF[Ca"l2:uRpPnHi>Z22Z);AI#e%R)j]!#C>+@U:)!Q`:N\A
%G^'u?&uA/N)m,""N4(]+hM72i;Z6=a;$lf)N4N7D'ln;!V80?@M``0/\1KQmM[bReTdRSX`Va7s&5GPt%h<Xd"A2$pNR5CeXeR-k
%[>'U5jgmXuIn<7X'!K[<`hk,sf5HdC+FqJp1<YZ+,,3D"k=)1NEI9>aBB\he(GPqQ7(7-[n+@kj':ZS.\u3&b`Au:18LOoTbO>3/
%5J6m0.M>TB9au3pNNs'l;^%07/&4BjSg\OhRG.l*S14jBV!YPOlHpN]S-[PRVfbBcc3oH>RiKQ%%QX6YDYB+D.e4l:TB-nm+<]fr
%kWu'b)[_`nm)aJn)U3oo)No>CD24X,;5U.Po,%QQf;m&\L2&J+!L"41e8lfSj(0CN;ueW(UVS/WEQ*KalM%tbor=?fo*M^;B\:U(
%D%V[]CT>pChViosMu7#WFEhMk3o#rQ9msePP[af)ED\%g')SA22j(31H^tY,_<aA2c4,PuJq3lsW=hE"Hu`2gf'\&"&HABa?mtg^
%+25)%6?9$%_>Ei0)[D"dTY281l3ep%;UfKT:o8Rh=O]2c"c^2/Xn\T@dt*lpAL%mrI"=Jg7"l.A4>:O7;T^C\(9(!IE,c%/_\X7g
%oi>tS24k1bOT1F%$qNI7`DOaR'W_g%2MZ3<YPY]\PToZYQ!)_b=<slnRTG$61DeO*6+[%B!h0P>kD0eGs'N.;+i]EQhD"HpWE]oJ
%5<Sk3J.O+D!#70DQg'1&5cpoC7-Q9eoa!IFm$V4Fh(e$JHi`<``Q[mDD"ZIYSAp7K?3Ub!#ub.R^+K`scKHNg=uiE&DV@moeni5P
%<"&"%-od,p+D1>;r3fog],5Mqb$prX.#Cc]h+WUc[U)Yq7GO6T/7&qDU8H%4rH!?c'm3qSM&!lh?r`7@'C`dcHHd9+?;Xm<B<uV?
%Jn'&rM`G5i8(bj,.su@A;q]BGjCVED;"`<"59!?86cimb,nGKXW&Zs!`!bq<gcs=>:OOZ;0D)'jgO;sj&5.]--;;U7&0Z>P]N,,6
%1=mIV&Y&_YpI('3/(HdXmR$\'6*RtN&4><jl9J)S>X8gLQI>o/!hX&IPalSs]H.=;PcB@QaJ)QqHcmWnX\`f_G702^Wg<_;,1\/:
%e/mB\5e8_ghbbbG.[KM:.13C`qHCK5N***6DcJrmL*P<I-/M='&?C8^Mrgd^7[!m2Sf!@(plWJi@K6h\;8>aTdXq1m#,)Ds[bsCF
%2iV,hc-*N)A+r)Wog3N@pcbi@&*-^S@6mS;>R:ZADO9!,:38f-LCtF#d-CM-T"dZd)mlcr-!@9:19H#.L<aokU6-[I4-Z`U.^Te>
%CXdpc3EgMQ_HJDk*KGM>?7s-^8(*8/#asto[=+tlcpZ]icr3XOYL>,hI0Un`jeBZ'6NHl#ct/I=n7'JV%AP.;4i,-U;\dW'YjE2\
%Ckir8[7't=<uh@Ji]G/u-7[4V5YPJi"Ca5MOs_*1F"_OT43e)udE*nq>F?k.Sfo\Ycr$K^l7UaI1p@)g?:2ibfP=1pkXPJ^s"A_;
%[[]sQ/St.R0g"h(RO8XY5tjTIZ\1dnco_LD#fJ-GbhRL6S+YYTIFHdG!c?MlE;HH6c2Koi)7&+tI4]Z(!=:2S[<DX$.P7u[j$`\/
%CFroZF-/mDo(,LIHDJJ+$usa1j>o&:d8'td3pbUGgks7@[B78/NHQM&T@`&Ic(_PlkY"k<7O#q!OCNTR+6kX#h=Kk^!:9mI>p8XD
%-;gh(<DP+&_5/?#hB[*O"N0ITlp@'l],Ha>TL]]`detj2*XSgUKS-TG7>T)'*JOgrp)]/i<"c%.d*l4g2a`r6"FHdm)e(9AMQjNC
%#6n^uh/A<Kp*fo=-Rt+u1meoMOnst&Tk=+e?kd")7]@VHSH;\hRc7?oIY#(^Ni($,TX&N:49W[O#(CYr'[@VMo0A&h$ZS,k0SPjt
%m3H4h=&[BETJo^$a.(F$HIbR[9h;OG)aJO3Ta?lB,)4sH":rs!:lh0$L)h0P]Rr7lJ7T/&R)1Dq)6OfXdEP[!5WZD,drJd3;e(MI
%+#UJnMRXSB`JPde!Q>/SDcm-'1(Ed6I$P4l`3b5#KK%W$ctcSk;74>'Co'&Y&DOoA+-(WNDkd8cc3Vda@`p$98ZBL1gaU)]%W87+
%P@_ZH>b9mDQBM\7"$22kh&*.bO"W@[C_ARRZ)$Mk3$FkTm)XtVLLV0bcFb@&'KtgZV8?a864AYQXE0dMp!W/??o[+*-;S&jVFHUo
%m#61H+O`+e3UHY`EqfrEa]N!,qS6GYh8d<2'P0Oh_g$:NH17tV=:ZZEcip<)2QHq69;;Mu(afDKi0:,c-9crK?""U"YsW/*[,>.g
%d?2:pb&9e&A5KEP+qmBSYY^5d(b4S@_?13-CipMbK!o;[>$6YrJ=<2N#pU?i0gs`"Rljl@@?,"^\eW\V:]"(",Z<oC!t"\F7^abW
%"R+?CMCj^`\WEOaDd;Sr"M]$iiOEEoCD<9AQ(`^qJYTbt2Ut7/BYnd5K$sc=@o?8fN"_uc0Fgak0d:QM0KYe8D\\WnXY[3`Iu8\>
%n9U3\Mi+Pr6QoRHUs9']W1iK5MMsTYi;M7YBG(ERnEI7<39V+)4pX+2dV.PmV#c-M$8F%F-ED4N9[76>pG!O1RT65uktI#R^ipYJ
%M?8c8"S7uq+$`I(B9@FCO%p]>O<K5O,V4\+@>c>ELs,W@M?8luhVOWO_-(a5Q5*fNT;>]8/*Qmf4<.h/,+T_W@OsI\ML8"#;HQWs
%1_=*>3p)&t$dFUgQ7,Z4r#\^XGR@YQ<!KM51;`I3LC#*88dn"BRO6$KMDe[8Vq*@,T#>!AM`WV/P'P5)(kClY/^S;Z!*+e^8]:4?
%]FTfYB[@TA8TVIVWUrT0p5;P\FO1jWg4;@94YUs\iUB6d]%pgl!M2jjX?u-102"F?:"F-1-04OQOZ9YK'Tk[aWT5>285_8K$bF4r
%N+![BN"?)[*Tc%1kq+HNEhnJY*Ea!@T8GB3;!5$TOBmu7RkTbVQii0Xb,d1a*YA\Eg*f?>+eesi/_oa@!KVPEg@6Hj,L7RuP^0"N
%TrZYhI>U<+BqV6gEJ1?h_Lnmdjp,!*L;PeN'58\a>[nO,A3oiSoVta"#NQGo=K$%:bKP)F>pQMZ&(O%$g:QT5^s=8\";Tbh#"5]6
%:D`T!4S,cHb^&9&)eTZ32[GkZB]`\^(G0ejhRH)c-n^grUsfuk$Y9h7Ien.U1'[gtiL)<[3Q.e0&f'JXA'V7qZS:O7ma37RVqiC\
%Ypa[X6-PIpUM;uN@1ETC1iY:pnTP$D`Bf+u4C5F?jVkfE:Zn?%>!FBFF*p!8S'^ZIl/clbYU7bG`.jWMgP.8&H'fV(=R>T4o3ld:
%bO&7E[uK*&3g;F>3NsS;W8lm'!tP`Dr[i#5=Q1-"1&DF8%jqW>LWqC]1Uh'+>7P6J)9^.+jYG_VS_.uPiC3MB2l<>\6^SqoTq)u%
%*l?FOaW_J@r"PAOb9:mGO7YH<*5*jjD1G`K2t>"Y%4m9=ogFYsb41\TL6Z8;Y1p$uGQs=A33!s)KcX&C;Rt"ZN>AH4bZ^/RfV!7]
%*`Y[QYR/!f/fb^D9Y&"Ort_G9d?n:1P>Mg6(eMr0%6%W:"646rS59^MG_e8G/Vi:sY:qR4hCtq`1jB-)np!_bT:?/_=a4uJ4>Y%b
%16E\FBCE1[fapYD&#1#3*5-_g)SgmKWbRp]':`TRQ!%EE0KIO9nC5_BP,#H.;i8)E,mQS#@mF]!h$8@]Z:?=-*'Q0kZd"f_3D>2A
%al22<#W[uOBD536H/tF2%Z!-**&nk0,?m!FW!D2Ck(8`])SHC1@Zb0%S]"t`d#a3QK2C'n$hbWNp[_K<EkEWM!lZ%8*)c!_MMjnU
%T]@\DO''b-6L<,BNZuLHl3s`(89kQkVE'MRoPc(MEtgX59R$^*,*D3XVL&\=%elsLHlPP7\!`mpcNPMjab]=p\8Y!4!=UHQqLr%a
%Vi*qQaU%Cp+EG-Y7F@ViU\7e+LKnJrI1&EfmtTg9EX5'qR;QptaC-TMGB![E=3<&o\ZTp*4"#Lt;Xk<aj2\u(U9YV\eA.b;18e#S
%J_b8s34/iCp,LiSN>,I^C9=Q'[)5<R#DF$+PW3nmP:;a9if6A/1]%*]Yi?)&LWcEPb;u!6(j4Vk0R#h'A`ct7T]:PU6)t`5NW["K
%?H_:qNm$5Ia,/h3U[q[-ECf#t8t-"l-UBS`R.82lA[!.5N\6b;9^AL6j,o/5,%/5dX0CVgNZ&.$5E7B5C)g!C0Q)H*`kc62RPO59
%<I30[if&Y<O;mAALRB%&_MgiMW6?5UD9=i.M1c'#9i%'8@"6P8.i;b9&ld/d[u=#U1^nY<KQ0,5<p2Y5hdq`K67[kE0+P!*p(bW+
%_g*SgMIL[I&FPWUmXg@TMB+08?!Q#oB;*<%aH!^RQ?f?[Ck1L+0!I=R!GV2!(;C$_$p@['=E+lUE"-qe`ApK/Jr8S+WlRNjn:Fkn
%#jF[5K?f-4?VV;jpS#aN3T54J@n7[!M8T,s%Nh:"&R%4Ya[DRW^M_[5'8I5C]`!Sk`5>PXZ:Nto+GcU?/s*TebQ&D9*(o>RMM%-5
%Ao)E*+tb[%R`,hn"ON>aKK(5R8qE0K%fR.t_fVY(##lCuo:-n?-TLYT4;cSBLWeK4al23a9O3b8lu8A"9#f9;5UTVMru6r[1:mtB
%"V/S?(8QX>DE-jEo[&D&_\'Vadn[-HiD;",[$fmgiBTj67u#2qG&$.`L-mHJ5LHGM&d1\85U.e\9lpcP@Gsas&K*nTWtK$_IuXj@
%NY;Rh3(`(J@#RP;T^XX*!cq+]=Q&[o-RLt"rH1(G*)>NBhNpOF-,(2-(uaBkJ@K!I#S/_@Fc-e`EH\u&&2%ts(Cg_+$Yjgmr?*1%
%DldLk&N1\8KP2<Urf2SKkZ*TX)]X=H2HMtb%`US*":bV@PELNKAW.!,,?ne8f+o,AGQK)(])hF%<e)W3I4Oq&D`8>7@>Ab`0nc!q
%89]=N\I7@e@96GgLu>5laYj]8iA$9*#9I@;L2InhMpSk?i$!7jB!K-=lknH9!Y8.EU.k\"U$ui=^d/AB"t8E6:!uij"p#7pc+VW1
%T*Bb!l"RF2!Nr-DRl]>'!dKMib?=mbSK6q(q;44pNo]tR<.JfY2ge$n$eK8L1=(+OrJfJI4bb"4kgUi%!;t(MJen)bTlK``p=i2Y
%;8954%fOtHZ%Jgad2FI4Foj7mbUgG.2C;7)^i)<N_>CYR3UU+YJmUP*Rh&..lruuhJ?Y*@^-UF=O#W0r%\_^B0thE/>'L6o(SdpI
%MK9&]2X3AWm^/-8JGKa!'GK;$)!a6`kC*h&c!]Eo3hr1K$hb$=MSd./e7jnn2D!@eaSFdIdPpCVGY#\;h`Aoie56S8&=O@[hZ2dX
%@ZEdFkq+#GK&'q].Gk\8:RO0pau;jf<:/Y/mguf#\\!Qk:pV(O!k9B1&jf*f,9L3'TY1KjD&K'H!aY'HKPutb)_Ae6,gu/jMsh+5
%)>/K"ik<11"hi5Ah-1NF!BGp^"&5>tHTKj:,/8npUV0*>;7&dcL'/3n?!qT5*DUXX2n0AHgtMimN+HTGF&BV:QD>RpN(JYAo,=_a
%`^(eg=4)D5VRMi5Ol#$$JK`Sal&G)KUc(:a!YI0ZP$**g-*]]dMrtO0:rRDD]HqH(j>_)IPJHs5:@j2I0IIc#bS+.XRUEJ7-(QV/
%*9D%JjZ,ohi(&P1(^G=RF9iN=3M@D%9NYR:a;adcacWTBh?$3d=pZgC\"1Z,hQkEXopk(@7M*$tF]b"JN6o]:VUmD62T?\Ar%MrL
%F1fo8&`Y9E*,h4V36<_32e8`F9[<0_I]$8U3B>r`M?*pO`_ArbZCKT:";m3#L]\W8(iGS;@f9,sf=EYp2h'<p.lu`ViN(J=f"uZa
%0;llgL=CI,%TF(#OgQq#LrdBQ'oqfR^JI$PiYZUp,H2)FmVosqA4grU(iSahG47u]_F+UAG>l0%ZNd\SN8fg\24C]$'Q;2>0_DmX
%cNb$b(p;"1hWT*?kZ^OH#+m']LicM,d:o5IR2NtJ5gV9@;)!kd$rG(hG#>p"=^+jBLc6S%/Ad!`;q+cK++SSD!kUV=Jp;p_'KsCq
%&9%2g7SC4KiXO!DouSZ>kUVG\Bh%X4"<@"cN&U_K_eM0N)cOO;@:?el"c`IuN&O]E;;7W#%K>N-/nf7;d=Vde;OnYC]R?2D.r$X9
%ZPYj#A/oNlEZf;OamfSA*1DdG``ne/e#l.0L8u'RQ(JPB[k@9nDT;1c>cMTb]\tl^0ECUn3K0L"]@!.(AnI(mL74dARN(2p5u9Ni
%35Jf8(tk,U]FfV:^ulKJ)sja"$;AJ.#,`FZjN[2MkbTNOgGEbn2dGj41!CWo%1/8[b1PP>].h-LgZWN/$Hi!W"ViAk3hl3L#C#4i
%n.a=9"F"@`7<Y+d&&gm%!\fPf%8jou/Ge/[DI'",E/aDp2Ecr:A^kV1.peo0ChPc'8rU-:Fq&[)2*FlK2r5_(i'%p]><p48JVL//
%X+WHcQ6X$+/gJht)B7@(=aLdnQPQd56S&D9,#KBh^a3sEG9ORARDsq:@Q,XLANcR9N<u-JD%jN9)'cFHYoDSNQP4=I2l+e^;-h+X
%0Q!S\A.cF.HikMsSCe9N@YA5=Yo@1BcnV"7]-.N6EmZkP)]OW'S3!(oR&i&=.Ve/Y<9BjsRGA^qJO5-Mfo9Ds(@IZL#qCk+ill:6
%TpKLTRGI(+93nP7ZPtQR6M_dZG/O#B*D'M_DX(gADro>`bU>9W.(b8+*@88,h'i3J9.h*kg[`DHfPX4c1\eCQm=nU*\B:c+R"->=
%SD&rOoL:P_[Mqqg'M^9#egc`nj4J6+>iC"l_KM\XKe=nrgC5T?H5+?&h3^M0$r1b#9h$KT#4BKdd=>O1mY1jjs+Up:NL/CmG6J4q
%;oO<]]GZ#f[5%D6\=;@SW3AobB`sX<A-!2.7QlN:[V]tB\t?<O#J&[STh_Kkj*"o>SI8212^YlK3LQ<><U-;o@Cu'#'`-b+G#P;g
%OTs8i_]p-LZ7?#jp]C3PG@S6^I\[s5`pJLmUX"skgJ,p:/0rg*iWR75)K2]u(j)-^J"57f9dL.ASQOZb_7GY]@CrM47?VJ'2]?=N
%%Qgq&8ubL[3KEJr@?I.hF+kDg?OYn9EP"MfT[C=Jp*7qSBL"+X]+K67Yet&lgPqM1H8PrFG/JhtMl;?s(1_lJZ4kuP@:SL=`3J-C
%+!gMp@b>Q4rUEVb(Ub9H;,lW/DOM3$D/ArNXhg].^qq)N0b"o-)ic+VF<Tgj$]#2,]+qk5#i%l0l++=[Qn2`XP%&8Ie>8aX]-2m>
%h7L2QOK<+(W'Rsj+a*sA`U0NOGj+;NG/Hu;V.6%M%;2Kdpqa2jE2:PeM)Ma\O$k]jMc74gnpp$S#BI`Ya3W^\E&SURklEM3"d0W1
%+Cj&A--X8kSCDFI%5H$BmQHXsTgapnXb:OmG$?=jfQiNHlrNo0`3UnOFlhb./*s!P$eGj/\e)3NUMUEW@@*P[DCT/<ls`qcWi7gM
%ggYD1#qf8fS]Y'j)Vb'>"?58DBF((@eZHtFqSUHF=n<E,Rt#TY\ueBCkZ/G\8]r"-5iN>dT:=2e]Q2$F`:Hn]EMG_>!Sri&Y:4Sa
%\`%c)@$U8miTV0]_XZDbL^ebKSQk3BVf=[T:iPVuOc7NobSLThFeZDY`Z1lL41*=A!a60RQs1:B^XC6cL.%Pt*6Sct@2>\i#6eL3
%k2:+rb,pD7a$2[2"i:\>)0.&_,bUX#$d#M)RDg@jK8gUSjIF;nnlb;ZEW`TWC#b`(Xml4O3K>%$XVgTdU2aZmUR7gW!;m>1"6M.P
%P!I9,/eke32$6>-#.lP%[uIXI//5XQ_i:guGf:cBE5Nh][/r#h2mb2DkNIM:is"DQDDSd;*X^.(ge],P3-#V@Yun5DEWA$T26I.R
%^C:JtfK8WX*"Zf2[kXm<XP3/\kAtJ5[WR3Y7rPI+&;tV<Xjt5kh?Hq*NH8^eD3`ol@F;G>ISlu#\udF*jke.W;bbYKDM($FXLa8C
%L_o.R:q3BUH'gPnDJS%X`PpT_39$G![NV^S:C&su)mJ>3D7F96HAEFY3G]Z,DEL[,XDR:0$ajiL1=A)MEVM-8(r3"'j,FGQX`OIU
%Vegu\C5FJu,R")?g%C%WAK-f3%`F?QkURo?.,1\/EI,'A`A>#6+mk1d[NS'S)6oZ;lMu3P<H:sF@@sC.#H)D(@0UW-ODRgQE+l`u
%gSC!gBX&E/=>4Q%cIbShK#WZ"G3fVCS61!\fL?'s`c1&3:.^#of'[!`A$9?X#\.]2nA+W^cIg,NapN;I[dfqc?41LQ#8rY1GY&e-
%D^D<7,usn1`\q!B&LQXLCh#6s@;s4E[7X&k:"2XJ,JEcfak0(((cjQp`]!HEHO"%s!t5j`M[Qd!9gAe63F^aoO#^[=c?,W5-=IjE
%7HRQc+gs*/CEQj4;2*3-DX/]<gK98K8>28M7bG`M>$P*5KPdY:Fg0nZD&@tkMT#nV+:qG33#?#X(4Rp6$5fqEpiF;1V0ZhILs.2^
%4-CIi)m=J*F$<@OL(n`KEri_3Q@Z%r#Aac=5A/=DMFIS9@9dq[J8H.=e.7E=[aD^K7L1fc2KU_agi`_,+]K!*Bq2C:0l%JDcbe(P
%HA.P%Y79o>r+Z5](dJ-=g$oiI66]EN>]=O:+5p\Sl.Tf766?Y3f>\MM&?\`+Abo'l9#YFO5WP`Xj#cLB`(mm%[>9QN;/#`1-q$dh
%(1(4s3!S3Tf7mZWZr:tW[\cq+g7i@mE03[?g,<1TY5+b]V77+g%k&K"EO*$q![1iSD+MT6P@M"#*otSFg+&^`:8g'a7e@mLAo1C*
%CR??S!Eb/iXGa$ZZ5^e7TXLlk#]dr6"s+_PJ/gOc\.;,?Ol:Q-N1M+7Ajq8W"3;@fB/j>R5X[tE"c$eB&iX,NQ8UMJkWuUNdT3Fg
%I2GKoT&ZJW/,Y4S"jodR$:AU(0*QYP14TNtMaB;<+\J**&_c/1J[S!Bd"^RI[(1.+G*oo.\bOj6R+&#N+s(k.Hi[;[:<sENe0W73
%cN[/u)A^QTg#1JCZ/;(B*Tiq)/p'!r-R"_.PI'ds2c`\<qZ,q%*h[+4GVXtX0PImgR6d@1%9aJNft)^eO@fVj=St=l=eTDe1U"V,
%MiqG;Ztu.aT3/=6R9dPnp_hL<h5"lQ\g7j/7XY@R?cL1lcPJ_(FCDJK'(cY`7`gtl^$6T#%In$%VCO#=>NTl3cH$2)5S1J-2JEXL
%&Ufb)O:=8\RRK1Y)g3To&[TkB<G"OADE]sLr-3WGa(%L,E.i9n2L&bH83h11Z$!52EAk6Xo?.pf)I$:1+0ZE<%6i5(`669TJAXc:
%"p\W_0iR'<RdL#(TUQP6@dECY_4kC+!e6b8`Q%KaUhF]s2Eq8JT\/1hL6b=G'3eE2AJgA_X`M]87q1f>nEqQ2_[-h_(K[\*!)@:e
%DVD$L8aMHdRu!'GB_((LC]Vr%bZU#6RULr'E?VS1=[u!a7q*]l$S`kGM(MgggUN?tN[HS/2Pa/#(2%(a!fR)"1U3&uJpk\-fQd<7
%Am?^0^H<,O_VkMB2N!D@E,[-^SiPhSa/R^0,u*-1plh]0+EE.fXhZh/>M#!6@3Mn,1OuqfF!<M5(]m'8gWiZ8*e_R7S;.O[+q$J!
%*&d^)&'8'5ClB?G``e%(l\oN%&_GNK)3tM(fZ:sl0\Vb("9KrkSN.,5EId5J@A?^4enc0]C38B<^ff<':$#6\2UE@ZWg""==P-_8
%.;Yc`;)f)mHSsWoUaMEIKoIMq*3/S&(6QSj3*FlN_*[T.Ah7c"\Vg-I1)@<`iaQ?60.A6&Z`ml,ip@-i$QJ010TFV&ZEPL?hYYN"
%fT60+DE`u4N?UG/>WZDF6(gSY,tDAGiIYC;9M*m("$=e^_T&n?!m!pbJp"s>-XgNW$SKOr&iQVAfj,M\D[%Z#)DMj_/r(9pj!%p,
%36JMX<!s:OFLq^nL(rq&i$)U))NArLE>5j3+b::!<2QLB"[s(08D'kBMdaRO@=p1+j'F\OS";Cq[:E#F2VMRNGJZr(W*.MP58XbI
%=`e)\h)]BMi6";pA/G[n=`g*-+_\6<71NRDZ*;X;"\iooKoHBO,@;tnC-7mc\Xb!^3'CiD^e!,9YX1#-iZr?]6Q=9=_FCmY>#.*a
%)in.,ZlF#o1;2a:A$a&qN<L&"q-\QEBGLfh#+^s<+r:M(NS,!HbWsf'P>Xi"PH_k/6-X0t&iR]ul(Unh7b:'i+W1S*;_Sd-7Dbqi
%TW2OdYUN3R@E/_i=%?ktf1!PGP<9)FlPNbM0J/-FYYbe)W-9TqS"<Q5,b'IH24spW7`#A9(aFhr8_B-K?:mfABKi2F@jGka5nfH?
%KFQ%f[)bejR#eZ],@TWM"U9(W8_BsY;:5nDNIm@f`bm'@__*IU"iGL/1E&0aJf8Gbj;KUHe@34b_Zii!g'=a=,1k!t%GR$)Ug`$"
%S;*"Q+n[*g1i,@'h(WYr+\enJ*5DX&Tn.9hnJIJGJ7:Tf@]I^A8%JuA0d`o''SDAmOYdp!M8?&qpoHt&>#T%RHlRcuGu/'qENlF#
%2;BD"3S;h^_JZNLFpG6uC$^k!RtH\'eI\<=1Cc=74WuJ2F0KX:Eb>L;9grJ?RW&fr,Udo?b<aco.76:U$\XL_-=f#R&iQW6*KH;e
%0nDAO3(_cT$[@WU8_A7h:G9=l,]#.^d*Pf0#oa1[@0V@]nNLnMXKq_EW0SX5(gAp*)dQ6-IK9X*$R-sGEtgO$?gn,A(CD+E&`[c&
%YV?;CMkdL2"hcEl-u=8T3Y69F2B$#nMKFlq7QX=8*?\dc">$i/6("p:To:N82BH$ueqK<@D'sB;2K"#UU>$r0Cc>'d#"[C.9ZJ,#
%@7(Cpm,B:,b_$s@/eU&hA!_0J2ME)bJrRW:(J&j&M_jW/>rtC^m4H`a>+s,u`PTUs+d%W42@CHUj07TI/8P`37dip/\-@cl_7je&
%2QC&7,?<n:,92bZ-+H4mFt.!MiMB'2Y&YMHDmY%%TPn5]LLd"rK.ULn$U0K#%Gd![86HL?L#"KHAmd.5ls_-B'kWT:#hU'5>dsge
%)DaEX&8N'5Dr\#Y4p50`CCRCncC[sEZ%]pC=?)9ZI19V+kci%Qf/R)IOcuub^BLau0(:a]&6n(.n2\D*NjGNM()cJU?:,n?D)1B6
%*'Ap3RsBu`=Lp>>]G=Y[O@?g:"J&hX9*$1YUbfp#9qOe;39WSkG7Abd?r4@57\/kl:>@]pBHXUIe#k]\b+`07r-E;ull,f8^uW:.
%fBD]463nrE".j6-F"PL=l=?,pM;R47+kLtC("*:'f5NE=cc$a\)T!Qb;JhH(Q5K227C\(?4QtmWCPdBfEkjOPL>d"+0"s22s6-1O
%[t[fjWYMb3">MfZHb#&O*S)*&SYN=7BW+Q^fim@+W%P;3S/?r#=DMl=6)#Eu>/S;i=@sCZ>%&>#`O(BW+eY8KXl7*0pN$qK_:(_`
%Cj6:JJ_3%][s?Q_5DTEgKsQLq%WT^6RPf?Ci-rdVeo2=`ii.iINCmB1L>[RdXTJ$MA$"VkhEg4s=G,&C&s6U^8gI).Nj+81iAEPH
%KJaTcX9]>q+V$;06k6F*pHXjH,ActPTtZbZc1'9I6R,OA4ds.44%,ukBNl]o!HT$g)Z:MioN2E\?I@4gUH*.225F\h-O3^WS,gj:
%<]H8hKrr@aE?qQ2TMB5,E\hC:`'FPZBJm;iig.ZReUUIcHm2']bD[k1,$#qo"uI,#XHkjMN:X%m!DGt#>W&<d!'[;\"31VJIN2At
%D\F[J[:ml-C,+_HC(TWk9Zp#XG`"]+WJ2W2[.eQ62,JmDdW%me`&r_.OD;nK]9+hJ+V9>O9c9ZDd;eA<k!W0QO=*f%L'5(>Z6MY+
%5]7DSTN^>6!cU=\nGI5Wi-8uEcgIN+6UVrS]4<WeO:=-"b,,ph2L/SAC6<iPE\]Kl$d1(?]us9H:fJ6s)U=4[bMZK;8AH/U.$[us
%=/EL$e3je>*!2$i*TlC?+fT$X^BTPE19QcM+>msTGQQ-8e1eW,`6s@7Q6Fa2'Xkn0@54S`dL8SSeg`MX]3s,L*l\ONMa\Xu\%l2r
%C6_9,%ZmX2DQ7JOa.T=B!o(+CLRPct\hV\Ql<l.X[P[83./PP$[>*c(5mB1h=n&F"NhFsj*lnB3g`et5T4T][(4BBJpJ!@:[)f$0
%h!f$3#*[^+C$&?.Tr7G%i=1&N%pF4&-;8<cAQdZ"(`rg;gp=97&.F=B$;R.H_9FeR3b`P%UtUpTS<fO]`KAUnQP)8t)?]dQC>/eb
%6bo<\6VgRN!e!UO\&u%F:&9e(E:'Gq1N.CGS!MIQ+P<d[&;C^K`<"OHg?e='!m[5=o.5$`jfE1g7h+u&b<673?$SmJP^jHoBd/=,
%^D5CN^/=r(1W?=S@+/P-[V)kB3?$10:!4`UV7T:I@#ps;:'R-k<X?BLRW539*X:rI9ER!PjVUa\"r%>+HtACR85NG!><S-<Acub&
%BfPlVLFu>hL>u0\5EY?E,P+`AAu>m[='ST?2]D+bk/WAq?!7mYabV5e^fM:g[^7Y`K7k0q%B10k_U6dm^R9e>V1Gq1Tee=*ZnAS@
%,ro$FU=#oVOCa%tn4_1tQ.@d8O#En.CFi<#Jjfdp"47H.VR4Le(KRQQ_G;bZ[$BPn9(Q!i-k1t+Ga0\t7"\i%C=4`)2#%__$P?%^
%"9sj^0PUEZP9nIP/X/)TY]\2;8ZNiViW;](K6<RAV.$,sA`h@Z1")0!048lmZM_"Q%Zsf&',;laX"lb3FWmO]n3ueRV?CUm?fJj%
%dP-_55-fm(emoP]`!OkZ+=T36)NEj14M[$/3%^'IUG[3B*61S0p%+&'5`Z*p-9X1un7_;B`A:<0NWp:tCeGR*g;9%nE\tWdnMlP[
%UGW7VG&sE%=Gu#jX'0LroVPhfNJ>tQAEJ1W)NC_jA2C"NGFE1gUOgCDF>api>'F;>#qI"T\WM`mGgR@X.*;Y%BE4d#%?8i2_7+s7
%V_D40[]U_^YbF!E]]Gr&Y_ggGAHn$H!m->\k!X8W\:oco6=FCXVaTh`og*b"U1"O@ll_'OlT>f91SUENZ4YJ&59K$@BT4'o=Ysg+
%3k4_,i4DVge-lisYVp/g$i6rZ)8"9"LBd2M7"b&03)/!FA8(V8=7lSJ1`TpIc'<:BiA7br)&?Bbn]M'+<+n6/do[kYj\ggMs,/\,
%iK+N=R4]bl,1DW;$OI8g2I]0:'A?&t6)![F7YOk[3m'c%K6f(NYu@/!%G)QG]9AXd"*%V(+P9NSYYO"Vh+VLtF31L<nN7<R-;h%!
%d%F3lbj9):"bTh[@[tDi#3AQkpCuW"K*2l*>r65&iZ_lu_k7%i6uNE?/81;iaW2pGKt2G2-tq-$<5D$i,?7d-#"[)h`X.5+K'&N,
%"bK5"=]#D`d%G"rXbO<1Qplg6'PL$&:qI):%@Ac\c]pkjOiX7i2?S8%1.qIdfk[AlkV&^%LHb`TjqRV*b=I\nAr425'4aXY4Dm$_
%Ud@4BVa,d/a3A6p)TOf:rbohor([OF067rAl"ZbOlJMVYh>/)I^OC<IGhad:pp[kK+++gn/cF(q2p%Be;SZ&8d-mB.X?<Ij`u*$!
%XAnM^N_.u1oW;bp4o7nI:[^g.`%RI5=?l9<1hW]CN-_,XWgM?"8oI87VU;'i8-sO\[BZm[n't=>ih87]hl&"<b<3f0m>CE^HsWXa
%a[:J!e#4bF._M.f?G+g,Q:MnRXZo"Q;]05mH*c5jHDm>apS_ikAb6G4\[+&@N-?"cGc8IiX"L$0F55?b?GBG&f?IpTr4F?>Y<He3
%les(hd-"EnR,*5Ib9G7gNiG/"kB1M4)^iUrnXJcSj`"fQfrPR9jNjl,0Y1l-A%qZYi:Jc0#P*qUEm7Xf=7$`XD7PZ6Ftm@<>5-Nd
%Y1t'7Rpe/c5,uH^>EtWVCsd29r8W5C8JgJlrD(bqm254_[HKp3BR17LR\LgB6OW+V7&t0JN*`RFTdk6:nQs,6c!cO*]48dAc^.&#
%d;F*-4`Ag2(R5%j`m5$sSi"X)aAeED_s0pa.Mn\VE`5tUS>u(l<Om.j+Hh0O\5hokQ+;)h1MULH_h'k!b+&]ph,K`1l>fg/DQ:lS
%Fh+J(pK%(rIkP*Q;fsEWQ]%?JRIsh(.(+O((5Hr3nJc.'hCA'/oc4RkFLP=DR_Mjj;hbOfbaElYI7m!I1nf:!JYl94&)4)_5o":%
%;S]H_mrka$1HrHpj"33:QolZJCLCk0MkHCtGZb)@,?-D29olQOjfNR6C\BrZ%21kU:U"^M3Qp_2$A19EYuP^b2L_h<f3;Llk)[(i
%gE=ZuW\N\QLS3DjP`;E*.iR7ojN9Yl')nS>FPCEtUd&\P9VV@6KD#D4mamFnU=JW(N2DqF^&?'ol50"t_:0Ro<n$tE"mqpUW5:ib
%0(Qd'gZVEDNUl6<F[t+`/]M&u(;+e0cddSrQ&LiB<L^ZhD\fL`?WW1+S#V6;DO<tga7I;,p06ai3t1nYC#^^V!olGn-;E\!g*t(P
%XT0ENL"\4hcIj(sBoIbjR[<hI)r^GY;?t<:*Mh*5_95q!Ar(KX+[#%$p\Pqn)kC`IdP-#S.Pjs!itk+MZ/6MdeR$h*%b2,gS)\$/
%_-aJ>IUsZ?AVV=pSS&U>E[%>#mh>)8p;\g<`RN(DlK.VTFbK5FjcaAclLBmKrorBhB^B#Pr\]9c!j[Rn3:9gP:TMA,p1"_e*eM$d
%7]G,91,O9rdH[1X`I"R`XW(T,bU6$+o[#<+F!g3aOF:QL)QD6@lEi(DHL'8%E]8_faS/lXVMj&n/mdEa*mdPfb]NCOkK'@S_3ad5
%XB>];B1A(@^OL::bU=k6"FIt6_n^Lm,AZZ/\efp;;WbOqDr_4`mJ"spe(FX1A,F;iAkgFf1Z<k9@K%k(!Tl7%@Dm-ls!iB@"?9Hs
%4:J9IffHfGB'dj6c9.W9,Uu9iC"@?;h(3lY\%M[]W9P2jE(olrqRujLLj,>![G.i'7C-D\HUgPP,.F(s5p#4Jb]=sbSWJp4j*UBq
%i;3':$KIabKK,QCXB3?FheG=,e0\ghqT1G7;6FmF#R3KhBTX/#p!$,Ljs5OC4H6VNTCj66+d4_J4]LQVch_XND.Sc7@HD7;m`fmS
%5.V6sY]Q*kXbN0g@(&q__o'"N[CjS(XjP\8_]%p@NqMsQ/H2P))ot7D8p3m--Ton^<3#Yl^NliJQ$$'6C:9R;WW[O?ofqq3E)k&C
%GuW<LlG"9&L?Ss2rMsRQ4DnO`kGYC[Y;T+m6`<K%W#(Lu?9IWr=\#psH0D#d(GHZM2)<_56T#3i_k*2n'q0':RYB.j2EX_-[9lpc
%DZFAWBN%]kYu"tghoQPN94]HhHnk:^)(5<_Vi`k1F8\1GU3OM!9qX#ZoZk7ooL8:*[jG\PR;cLI&#/0=pnI]0loGg<Mc0IJ^*m;;
%1\F2)qP*mDG+5Hab*_EST/`Kk:L=f3/)o3"[GT(B`Cjbh7A?CMU:cVia2/Y3dhj&$=oY%?;7ok?;J,mR4JeH6T,LLRq1[KZb.aB^
%Gb-8nYA$d+*cY\13oZKl@[&26<rBg:jtV]TQ,fM5+e$@JbDX>X;Fj%0%?CCfWBVV5=MI=nRBC=4=kAo&]&o[mVX)rX?(8!4'="^:
%3[A8dY"cmCEF.3i(o5V\D7Z`qD,m&4CK"YY\uJJ+[I:E$3DY;L7rZ1*DGB,a$3&=njbZ"uS5,i_:Et!CNBB&6F;dlOO_`1^+eS,;
%JWEk.b``R0,O_QV19rlMX+-N0Cu+mVplhHR7oH%1qB\q$\GgWp7VaDN@cH;t4s;,)I"G&k)tK,@,NNe6rt4gUmi-Q-I^ZOUW@749
%D+[7m2:_PX<0V8>\1!tNBqhOSJet$"^FU.3,ZUg%94k`g*.CnpC\kD4UR1W&5E<B$eNgi8Hl4ljkb"LdNmO$g>qTM9Ge.R9@\!5,
%<Td`:NIRJ1A)&HRciX3"UR'"]%NGEjq,X9Hl4QD@Ud&[dq?PWY;(_tX?Fu&!"[!Y!C;VT7cH^r6,8:&>eA9<RWJtkWGcAS7=!guh
%U_,(0*pPHGCsQ+:n>*-cA%t)DSSG@V0RI,LOpTni4\PVb[7C3?pu8d8,U`+)ier4HNV&]0qG#:cJ(aYd:IanLc[WuXg&4t7^Gmt,
%"BZ($4AO>hRIBdlGC&EKGN_`Xn'(N1hLmUHo:;KK:="<cB>2hN?VfgV0s8gobkIa+7<ho:qOKAR<HDJLkcX7s'*UK(!nD>%h_c(L
%-BZ99?KTP&?]9!lkWJUnBs-6dWmqWd?>ofAH.D31k=UeG#S[<+lCiBR58a""DqoO^2@[CJVW>9Wh`X<m>?T&2H4kMkQtA-@k+3G6
%g.:nI(&=ucWgg[ma"0Y_*MYXeZsXM@B:]mZWVu2>W_Mkn;u>7_[/FfeQ0d"L2RT0&7dbL\E\m%BP=Or,,O`]S!6mm%N'FA&IW*m;
%I'1_Lk8^ap-<Wckr=EM7Ontq#WM4CRKX?RUp;2$])%h:)C4$kBj$U:m(5Y$*q.5Zj,<EC-0W/$t^L49nqifEaQJO-ZqP-dWTJ'<l
%rlN[Z14$hG1UBoq$a[^CrFK_gR2TD/L6nmuASQH-g`<;IQbePQ%51YtbLH%P'+?OhPD6f4T?l.,OE+%RR:luVQZW#-[n(mFhSf/F
%V#BC%UJ\0fP7=#N!]_*AfRt'^_77B0][U?sS+pVJ^#/#8Mf27XnEr"jrqg3=g<1DbU%\3EjuC?gg:2'];\IQ$F8Y4);q$/7,'9pn
%g)HpmVXHr]qEhqlkt=tOd\qn7/G#70(o>gPdn=HT<?O^OBN3HZr/hA+^Fh!cPZu5ILU2?;.'b[GeT#k3r%YdVjeWG.DHk(Rj#oQF
%I[7Icjf[9hg!DHH*ga$$S+A"0a+$Mui:#pdn#6_S>L35aA!"gsPc9Bq#o]6TL#tTATbZ%GkE(sK<'-Z_p/7I=X!LPZBIr&>.V!8?
%;oJ.^TfnI4Q2s;F0EAf-n08Y+]iDq-&H?6Lm24!qN\LPQcI@k/Q3+;a%I=p<l7fVUN3/s=Ble`<a-bR8`iWmNG)WC@@m]N!TI]aF
%:C]rp:&-l@1RC0mZ"MRI>?*=obk-+O2N7>(O]8=TPJ)62;[EuCWc,kaC%`JnA0h0:M=TWL4K;#-Jf\;X"f#k146C>9C_j]t3<T(I
%<OZQjf;nV&_i22[isk(m=6lISc'<XGVq.+%Ci,!g%iY!q'?cqI_b3]XgZWD3iAR!.bKC[V)PO^[_kK(Y+MD!e.0Abc<,7@Vo$UI3
%7j*3n!n%c%oZPK3B"m.Oo]p%GR7sBK-Rj/m[F?Yt`(U,d,G)#E%J#r+9"gTK^6ca(Vs6s9_jA%s4:[:kSslt*c0<Ep&0,bX0/$?#
%h@<o+cc!+\4&1;5I3Vt/#Ci6M1rY6I[eP@%(-bFeFM`/\DbJ#JS,6i"BWB<O[CN7ppT:e_&,Z9(S""/6;f-F;*qle2c["G:9V=T4
%TiP*7DQ:uVe[_Y?2c]%<lJ/'3,C_@hc;Sj48"I8.[7\ac_oqm5e`Fe;QO=)V5b%@GM=7RmH'#'S(ru,oDTqlu5__"rcD4\I2t:.0
%.3EWRQ'ah>`!@mfI29#Y"3;==0tL*o#C<ZO7\O]6CCqX_C:0%1[J+1KPMNItqbd)sV.TNm2=<T`+$VLOaCBWFAK%CRi(`8`o%F]9
%^?^/.oB+p8n/;,8F2#&(cpb0Pid7eEPC6f0#7lr7^Jd%JB!,flP6>.D7lAdY:efSbP_iESmj\"*r=&[7N,(rH]%9\ujW7F(I]mu'
%!Ni\Dg]JYcc-FH@ra;bAr^56*I#[I1lq?1gVZ#YM'?('"aK1S$*mNN$]H^W1,nF4MnRo8WpN.HijW%9KE%r:4PNQ#(:WY*SV2*o&
%Qe-[t6#[DqA=LP;RN!JcDCQMtKOjSKMejb13q+8.o88#`Q[&CkOk%dqVU%o)qP2k]RU<(frKF3W1_kmsThmS2M10b:Ebl4]Zr$D6
%lda%'O8X6Vr*SZc4T<68dOpKGCh'pZ8Zjs&O0^Vbe#8"f#@XFjAWG803(:L0@2OgA<<m6NlS-Pt_GuB\W0cB0is0=@WkD$BoQ27o
%7.$,n%FjFQ5LumKXAL"<6;BJ[0j`5HI<5%d_2nKUkbSd<c#K9)WTh,V&\?P8Du:)lj!7fiVj@jQX3gHR(AZ):O'c(JM&[,bOQ#fE
%DVtF-QSO\9bhqs9[jbr*A^i/rBJa#E0Z`9:&1/`5%2XC8p<S)8=Xfup(B="^&p_Jg=Qd_Re(Q+_mXF)72pn("^"#.>BWd?h1@`%$
%+5]NPqt1P@URX[bcc?B>#=q>"K=Eu9P`/s^AK"-_:B!iTYbR`e'+C<(Jm:,*6g`WRf)7aQB*&Q7i$\UUQ2bE/l>LZ=1)`%#bN7^s
%.8GA0e;aE9kH']!BYm?172%=NJ#A8@`nFGGm%g\Q&_]IhXbV6m_+X5lKQU2bGrWRS$=A$85ItlrGVr(eS&M^j>XlHV+:G3`ORKdl
%Zeak")tblu^AhXX+/s;eW]1P&SF7<>DV<3-$=c'X^F%Ki]o_sTX<1dZDOCdJ#HcNi-0_Dnj1X;8Qa^)151OWOhXNXLZ2?I3QG9@$
%?b?MU5*cdIO/Za5\dSnoA4V#/DDec].ELKTYk5I$>\uO:q=fA#DW>pZr@V=CPQ.64SMI!+Yu7W1qVn&p\)KJ)R`;\enXXboUl:po
%l(d,_N-`269K*BG2;`0!f?&O>`QC8LY:od)X?`Qomc+.rWXUC!e6lAbQ^R0$)"n90&H3(;Lt#eqk8.L'ho.Xi*!!geA3(bg>JE,e
%'?nRp>;@0,ZDu`EO`O2c#u9/Y[F).H<i1uI"TH<PSD^"i"&dFcItG6SL=NL]'N?qi&S:Ng,3YI`[)8Q>L)$!PmOAFUi'(%?5N(!S
%q<Na1rD$P5GN?BL&,Ait:;/iCaZs01,%X&iE#>hQoj*2Mq!7tVlb@gsqd9@!s8Mku^]):2rn"paj0/L\li6q<s#r_K_QG*=lfb:n
%HTZ)nc!J_louIo_;"1=91\-'6YCf;ldS<VsX$<:0h-^*W^L`>l[F<PM'#</OT%hH("*()<ZQC1:_b+$]rtcAHdk*L>b^6c;pRR]u
%Q9/E'*KIj[bt"Dd.%0IS-hu]InF1[mQ]u-,4_V<)0DUe0DU64!m(BJk`6%T9bLM&dG_23G5%&*>qO>%^q@W\hf("E??^p6VH^aeI
%/*,G2s2MN7m.]2C4g;$Ho<gI:O:70\-_5$MGrrCtn,L]+N9j[AAaW'`d&P!Yr[6l(2NTud%BN%@<jCO)C2_PaOk,tN>iuEt5eomV
%>Xf>G6JFS/%i9dfAkNF+B0GB)]k*S41B7-CX?$<j[*\/'rap8`O\Z-TOr;"/e8So_VX+4@nP.PM2*Vnt8\TMO=>N0QAmn8Uf!Vc]
%@%l;-$O/h>LF.;gR)tc0A#tZFME8*DbX(c[2p-p8r;<>!VPo*CdaQG0daKE_#[^pQ2Lb83/3r(^)":AJ,*<XENA4Q7Id%F"kSbRG
%_]DG4U%a]Gc^6Z%cb9,Qg#`$9;n6-3I14-i"K^\?HF<NrQ>o4;6GE+Ke#7amAT&Aa@jrC!<0'?,F=A3ZF^>!RL7[h7`feu`<fatD
%!C^%ATlB5eqL'8(5YEgaob'TK)H9[=qm9h)`XH60IZ-k;aQaFW[6CTdU"(BN`h?Q'STLmXT:>5Q0Q2Ft2F7SMQLpsSmj9+eWIer0
%@o88@feZ5gh"h>2dJr1Bba+X@`7()pjBd1_B,aNH$3e>Q*`b]u<^bX*#h$!->EU?J;Dj#Q&-$_3H1%&#>tHY?<l/9J_MjL["hQso
%N7.7dED4WJ?,b)g8\I5J<mTiCbl0fWCpnY'*pmR"Eru6Ug(34ddk'Tbm0cE7=\J."]i?cOB4eb_mrIm]_;Cj#?Kh<pqeMS'"5dQ(
%-9A8PXCE/'dXJs!mnD@m9rj.\fV^2BJNc<QW]#4VlUtmh]%M)*$N)KtC:@J-IN05r)K43Arm/@Yl`^?dgOK7h5Q:M/rqasUro7qs
%LQ<_YhgbS8o&p&N\,ZH:s31eRB]mWTOUMKOj:6TDi76#jc?PMNW^0q\%5-mI`&"`kDk5;(dGecsOIFZ-^D>Y[S50^7THo7\mnXM]
%K$e^"duAKrKpL+80sg$4HW,md_'U6^^*SKb[V_7$G2q!e22lEinE&JLX#HElW)reXXRaW2e?0!Y>*pTN>P4"dgh(r=I]qip1V,`U
%;uP/bHtk2W#X1F<IC3[f=DRSV^?87lhu5TR[G.]#4juo#*45=Mc)pls7bd;)]%'9bDFY2hb9:CN=:=ulgHY&L&Mj!o5H/LA!&['b
%<@s?r=nRkJ-Yl)AjqE0'C&VgQkJHb'ApYh%A6G(NB,-qJpb]1\%%h.?b9/3r-<XK^8NU?;Il"Yr]=A&G=(XO+fBiEIqXWbj4^Y3g
%m2:Um^"W?<0`Nl6AL8f$Cqo@!1n)a=j4X'9>A\/OfW4=b5=q%ncnh/%5i@QI50&VfQ92&.OkHj=,8S=Zn'!&PXl"J<q1Ki[oQtF1
%BKuM'Y>3/?[L1L"?Nkm7M`oLeA>M2GG49,-4+C21=50Me^]s?7l%Nd&(Z&k8k>0gEZ!4u2SMhH^]_;faQg;+(CY+>3=M>H?Ru^3:
%fD,![RN5f)_:$(kk/AS3&oi9"8YW5`6aFR7^n!8splN2:>*&u0m^5TD[[MP<D,$+Ij\D39H@e\+<cNmY(JA^6Do!JE(q<#\S6=`*
%H=U!;.[ci$ZKk\:LZCU7'ob851fnR-N]^EXi733r'9jUO/f_/`/XB!&lZGC_01])61!-o;V2*V7g*>caG52[`+*1tTVqd#-ao&NZ
%:hFo/=*SC3TJVchMIrsc>k]unn-?SNj_nfm0WVf.T+3]uTTlhpCRFsnB+'TjO%L@@Io1VQY@F49ad.-c?>jDM_<gki>_A2C*#1#k
%*&tUN=?'BI_o"9;<6a=BBVa7C==]U_kX&,>C#Q:O;H!l;F*uES6uqTR>5*XQa3h>Q."jh+ko='Ja"HEm*4fQ];hmLR#FP,1T<("'
%bko<>SOc$=C=DhJaM-jmCU_o0eL[9ER9O[l2O_=ZNsKb1cPUhAmqdK,($DrB^cq*H1k.=IT6(f)=I*c,k!c[^V>E2no\bo(DJOXh
%4&&Rl@$1!Pl+gc^9=*?SOOAIn?OgWldk$o:UoU&(n*_+Aph$T2STrG(X1F89OTadpk?*]L$ash?I\emP;r/;0CI@1,@]NXP^K]7'
%e.P.[FZ"e$Gj\,&B>2iU?R^i^$3LIZ_NO*]Y\Wj-6UJKedH!NAJdEpID^LM9YDl9Bh=&[KpPaZh<se\;*A1R^@'iM,9,=#bJN6uP
%H,oP#8tiJ`WUbRB_e&\+_MY)Q1tP6p%pbpUq:,$Kcc*iG)#<nNe&OmPZI2>A(L*Gn=aHuX^@gMeci$"6kRNHVc'@EbOr*fba=L?g
%%>W/V^[+iF6m'fe5>`OC.k[d6Ygg[#WO6kIVkf;J9Rn+T?ul1u:cTTgT!4JD2ftm?A]rhTLFPC(50-)+Q1YNbEl;65LG4haA5HS,
%]WhTH.\$<%CI.C7RYsAY@scVIT/W-!hiJVKR63AFHf>8[QL8OsC`U`$D5&)l+s&iUA\5(rD.ED<9</V?K1@^pN!Baa-6KnSW"8=_
%KA!iDC:c_\>5KRPLI_`BY1Z-;lAr7e>P5S@Oq"T$2`5uZ2Z,LoP?_^3J;2p!'f+$SbND^/5&4huS+:nPL"_ph#e+O<9ej8nHE]f0
%Kr)32l2Bd3G*^H_b5NN%]@7ra>eTC8'^a>H:Sk3>G0]jY[,(/SHlp!;19pRoSOAfs,+"JuZT?Da[BL3AZsbt#8%?F_#?DdS?3KR^
%/F]%7fA[Pl=d+RVP\0>Cb+OUf#K<P8kn+b>9Z[PbCJW&Rpu+khL]l'B1=Y7Vc$/MSY2M@mHGag7>4.#u[0G-G@?2AOpLXhA2Dh7Z
%Z9jf"DY:R)[+:*Vc2.Q(Wr):RR'Teqed%J'pQq%\U"X9!DiKX,\_[5S[`\8<Y[O#%L1MP!2X0oVR+sp+#@t6NN<45iVp2!NS%V`-
%[Q7D4&fU5++9utRahCqmFoLHsIRpn*40eR"4Q)-iK--.?QAN6!$)+'GOFL_&mF.$/I8\O3Z!B$^pgCA$R>T8WLSL8Jl4LkfH0R)Z
%QDD^h7b^:OY`'Z(T`*ZE"jJAbp)bp0OKAn.miN$JbXNCea40l,0,aApC<rJ>5uE)TWIqio]a(6G?o<8FW!+k[I?pkbBsg1K"7f6Q
%D"=4[lSuaU5(,(d8..nbqb[UPeK>6nF/SPi]B?9IB:5<[NA<>;_s#U]""!K!gFe><bg)Ba2il,+?EdE/AGr9kg7<8bq;L<<q7?NV
%2(,6pHE0]=CR_B]'h#XL65@GPO#jrnCmr\)j#hZZ/eHdrT]D:k"<#>De,89@FTJ(H=;?45SKf#a'n_=qk!uNW\]c*srL0O0G'gn!
%]RanaHY`X'm@a>]$B+Xb[SCK)e4YmYA:8ojF\#!15rssun+EfROd\U$a\"J(O5C;A;T#Vt%a!C=(I))C0Ltl4m`-<D^,Q":i.mrG
%+@LkIHIsr+>IiWBIPb/?-Do<t"6TQF@9s$e2kOa[<.?;SS9!+W(BX4aWIuJZM@pJQ_D(AY60(&(eG#OW8MYjgAR"8N'S%9t()oJ%
%;MQ8Q>J81Wl7`r0hjXnDD$2IC_S^E]b5^n`k^%WkCF37S4AkBmd!B4&G1h02mr2NJD'3`P42ud/e@qK.(th*RcW:'"lWLPm2N*2#
%QtJV`_*1'DAusgK;$(IaB/E9JJ:FfR*G[;-eKNS!@NG:qoMTr*/,-ZSrTD?WUHeA@2Vr,XVU<,ZOKj5`qMgI3a0,4HXn'Ki1mj>?
%0pQrV@:JH<*r+MgP,[(1-rRH6^7SsoJR6DEdr93W//b#,8$`:9&b9,nC*,Z!%!hXSs'V#\,31gT]DYl-/-)9?a)-*A8-(F5TQA(B
%H"k6t*ua0ahR(\t?((pVZ/pmU^-YjHT@#BAA6JIXCQ+=1#nWfap&/2OS%c$+6\LC^+8"\N?#3Z9_D:C4]'q$-&<QWg^0!\YGo%Pr
%rnF9aF$9:gX7'g;q8(ZtqT.LthdA2&6_B?QdoUD7ht\5oC!B.SCd"F_lL4&Hi'Bf\=%1T;iN!piG<`lYN:]u\>,:RF?!nh;!b[rn
%ZmaQ;UMjc5,NFT]FhUo0/l8tAlSiSjm2m<'K))>f:G-gjmE\gN<u7HV+ue9:Ll.O04n-hYBBD"[7t.D4\;ClBmK]@sc[Vm@nZ5m!
%&8+2X^Ne=WVqQ*UpnO_EIU\>2OeSU!@C3#W=Om=GJGk)CeOKuZp%'A7P;/]+U'3)VfbPHJ5F`,Yd&J(nR]U%qdqY!3p%Kem@XG^G
%Hnm7o!-e7\IFNFjOL8G<:pnSlKb)@p,Kc>*9,#S3%&O[S!G(;U=2CG-n+[j8f9g*j5j9CU?q2*KWmUgh48^hH1][0Xd51BZI\Y7H
%Wc^L%5-%;mf'aU'2PbjF3a$hiAZ2"=VLltrBR%/J#*V;PVi0CgNktIm+DC.#BVS:c_+3(@hclY?A"3C@SRZo)+30uo7Q;/Q1-LUM
%m.$*C\8([+Hg$,.NDX`L-&3>7#1oG>V\)&hY+FpK\+VZ$J0@-XB`7Wrc"qshr@'-*=a7WjTRK1(*10(NLk'-DNm@H63j9e%hL'QT
%]mkP)Gu'n-CoRELe+H@$,?#e%G-tS_<3i]%(%8cC];:l>'jj2E+e-qBNV-nBKfs9'6[HklmM[U!=p:[FB`'PGh7p"QCa%ctM@Rjd
%2`:9VZ#;O/%r2TsSS8jr*&4tMGSl?+II4]HcsaffGUp`K)V@]teedl&o_fq;SU8-^0gg9]H2m*Qn&[nf=-eClo]F+)h\+%#=1O!\
%E,p(Z?KJ2'/=4Fg1c]8:TFcPkhDn`K?/<0K>)X;"C\uPs8K])Alo$=4cV=Fgg:t)'R&Cq>m[S=3QVqESU?B/C8)^"u_n3m_BW#3:
%djafXRhrs#fheW:Hq?N*L$#+lLYtdHF048XFq;N6nsX7Qd,3fmp3Z>m^!jm_B%Y<RWa"5sA2(Ogr8q:?V/,Wg24:&n:iCN(ad;mL
%pa33\CU=S`YtV<%=l!+jqrqX9mP=c>?b@Yf8X;a@Km0.IVs7jdiq2psQ;7W:L;29,DrX$m=\IXB2nHiFC3"1*T3g5'Q-!gG^!]\e
%E[K!(QYO/SX^>q0j-<rFU>?0Y(3s(S(59ZXkiU1M-%-=RF>raZr6QX;/\EDdV2RV[csGjD\\N$F(?3IbouV"AQ_i5AW[OJl,q@lo
%aC]6p>$-b+Y<B!W'8u&<K\9_c^=]'[7#FF.#(KWS;rtn(IC0Vi2q1TFmV/HmY[<:>kB@[DS^k?$lnGp<$5H['7eS>FH&WHI\<"Xu
%`Poj^ekos`D;8u.<HYuZQ=?Co7Tcd0#hC5Yao1W2BfU=`<%k(EBqq,!2b5;(7pAW;2)AQ?ZOL)nlbiO3,-s:VR9J'N@'(_2\'"'G
%RV4jcDI/QF2oNT"4[+)%3DZZ^XfT`5\(iI"b%VNXC-,a+<W[)f?Bbpe_YrguEo#AQ8GcJ,3q+$k^3IGk?l&=%:gk[a`Xf-)ktUm'
%k%3h.k"i(TT'4YACGA1Gn5X.EHTSV^-?l&jfRkfc2C#&bis4pFX2O(E-ZPQhL?+6\>=H'2M]aQfSO"kaN+oR^Sp\K=-8OIR=Lh:8
%MQqR"AMmUs5Bom?`o:6..@d#JmNisaA,/a%(X()=O(*B3Jft\(n#pBGO%M@1X/DN&eOjrQ\jl!Qc$l*^%sIYkVd6cpj]ng=9hM!m
%/?`s;7P8C._3;uV;NJ][76Gt*T8n(UQ1OLbdH(l3OsX6l$L,Bl[FKLpIi)urGL`6Yc^Tf8/j,$(-F155?V2^369MV.Dik"cL8sl3
%gIe.SNT>FBZ2B'Ss0aciHIL:6]_ATjIRqZ"Re@Z$`Whp4J#8_"V1nV`U8"16U^Eg?Q)**tXG+mb<l?HoD%Wg/%X2EDqZ;egc+m6r
%VX-T&R<_X=[L1AfeT.jQK@n:5r$\*amqX**TMS6.8r[Uk8`/cfh0<5Y]!NQ^oFA?Jid:LSXarg#f8t$?-ct2u]Lgt&\d=:S'In$+
%[bd<o0OKt?[FX)LcP1JL2%i(oBTkuagF=SNh5Z'"BAbZu0$e/'m!;+ENJ.S)dq?iXaGs<1p2B[#>G(B*RO4/8k7:X;H]P!m/GHND
%>d&#sV<J*)MgJ&IJ(/e)?K<n33i/BROk4EPL/N4rMmQDuX^a*!TPRkqNpl;5@dS;h^B#]Sh4Vs`_X6>+=Y$rs@qYK.MDO.hYt(+s
%`NXYh=UE(XY&b.nl<)GZL<!t6>rYCq^?,UN(:(6-/B8MJ>[,'J3rQSTY@'f?!o,WSe<11Ahsqoj)/?=Fa78a9ZE<Q';JZ*f(2:k=
%9/=Jik#St#'FDO6jjp0N7(%>EK$*m490RW?YSTiKVW;=d(2NNSd\Q^18(%-WI6SF!rjoKbWiGGc=2N@C_Rc2l4$"#^&*GZ]_*=8!
%QffD&_J\?e$@coVOY1I(behA[YdTeKZ-p)&CYV.K=YU@L`aOQpi%OVqOuj@RiS,s^\b1[[UrDSn@[hqU.L2,Lio<`p"^*`lKnfMe
%P-j'\LKqmnKBR+/L$iSAXl=8'^PH85-r(Q$KS=s1O9`a<@A'L)c;6'*TKK#=n7hT3n/6k\"GM<nXn\#;)E]e<DG^7."MVj4m+AF3
%1ILD?6T1P]VcG&'YXttKCcZ?ApYbb#rTh!M#'tm6AtUsDO.a2QLLWcWWSB)2L%V`9ihNSVn(NI<YAndMp3Qo1_eu0%`kSU$dC7gO
%fgpI6G^(&EOSR8'QT\XZ7kUjed.Z1fFi>6:>@bp[2.SmrY?_C1/:!6*N*?BA[@1[ErJVb@E>%t`n_8W(o"M@VTOZce\ougL]U0QT
%,PKEIM-*3j>0@0lWiS*mCeK/YfB.5jikn'7XU[\ug<t<Bp3Wh`<mI//?Q4sV-`k]RXZ'W:cP0)U5/G!I(Kbf[Q&B%</E\Z!gBdIS
%1NlfJ4s0pi6$m#>Lug9"Rd$aneAuEKkBA">ZcGds6Xo;Pc>TR%Hhiq?,a@u*VCo%FptcdRF3#1.8RYGTEoquT%=/*kC<3Qjl;6=?
%SL?<"EFk9RKZghleL`Y!F-qtZ[CL_8'&6Jj7J25E7VhCHe5ThX*)7RA]S;u\M*IH6ZY&VfQKr*#WR\oZ-24nAFB"lNF.M?-fiHG_
%)`"nuf@WY=SjgbU8R2d,gCQ4WUbd4#*>4/H.A!0Ne@Y[cjF1b'l+I>?jLtFam,7FKA8##PoD.*XpVcDPRIF%0PHFa8BW2c`O&_+!
%oa2Bn\7u%?;q:Jdo,q1"mH3!#fioXuVd:$9(mi1/gQ/b=TrJ`NNDj&e#:`]5.cOO7PB?BWnhF!i;:ZuR`r%V)I9-R"/DEt#H<+cH
%klS<G`$F,CrSDu;$u#@An"k7W/!f.%48BjuhP"jIQ+!<@!-b`9W2s;QeuRP0)m$g0:$#8QC1QrAe$c[nCRVROZ?t4-jK6i]=;_V5
%fOn^D;3G?Ka20_Tme/camaXVnYgiibDVuqC?8E*)Ue7K6o[Dj/T%q"[b=$,AM'6jtHo1WR;ucFEJ.BId>)L)ikqlO,?em$/Fuh')
%QVqoTU,iZdJkd,eLWtP,Ykb,m+7<3Be#?sZ8Y"BO)BT$MCNJgNRT_i/O.U$ZUc-ha@qH#1?dHbfO)l-%jDp*,@?:686:e6O$e`nc
%6(r.2dY#OGnYQM=PGm:42cdD3+!:=R\dssA$m*?&8#o&Ic^*t?])bs#LNlPKo%RMR#(t8lWDO2BSoP5KIUh,$5Uh*Dm6CKu9Ro0I
%:?$HdFEQc`Gi`kbX3o#)oaF\P.t761:L^ljdL5</Xc=5]pZpHBfEkbTIF3_!=2ln$:"uXhqq0Bo.9U-%CE<oTN-mSWfG4hAaSB;l
%@8mp%qFm^?cb@?gkJfB)_aZeR^5GUZ3-t[AXWB<AJ3C$+DO$!:)o9[ckL8)Z1lp*fEZ$#bT#i-QM(Kt\@5IZB1j5)dVXZGNkk&o(
%*_@a@)f^#tqL7Pn,<]-2*7$ci9]Pp,@g/>9qIWsbmjEa#V*K._pn_Ti=a=R*h+TM<+rPu`p1p^t>ec.aH'9kLlP9$M$(A6E9"1;F
%@a"#tQ4,ji(iPp\_m\\?7ukLWPJ2-+Res1U>$Y"JN\/HrI5%=Y\_1%9\oIOLNKj/Ecd@`Q[.@.:rMD'Y?3!&Dm,FLMf?,-ugp*KX
%XJ$r7cM*3l%rWX`Z[HkM157Q2(nQF<0mSjFR^(bR?ITMWAEV^890J#upW7G>#mTD=>3i+/PG>D;<&%Ta*g!+`2=l+-7TNT=7d[?#
%?c;Mj;4*Dji,/!CQ_L%$hN)6of'bPt%pGCnqW/(VNC3!)qpX+W))m=$6u9Cq:Hq;ul[s*j[pL)MVk<q8f:AXMIf]MuO(j=AF&:N$
%=CZ'@RmBfmcb0P29.bR;i&dWOQkA^u=BdBlqD]%i2aV(2BPKKKp;Y3s1t's/\!:J!Y]!'5<BG'"%*aK/2G0g_le<sLJRh<d=\L2:
%V&%6%%3]'0B!m`1p0*GnS=J08e!u?@S$@XE)dC:^>;CJe8$TCJo_%SORI)?$>=[N57XEofG*K&``,XdG`tB=+^>GlYe`(F$;`r7C
%_j=j$:%(<jqT3=^3__9pmi:V>GNg.^OBG'Xa`'=<+pW1oEq4ML5-/Y/K*`_I<EJNW;/m/=<]4/9p22gUkN3jpODh!'lSi[i=AI&:
%jVR'"l,VJ2*3%o^?0^CF=%'CVgEtbDV$caX-1[LaUK-P:QHq5Z>si3O@m0RJ)7A,L32B2&s*-J5PjHYl'<um.4%;#6*D@j4o!2h=
%Uug-BYuEoal=\FhpaP&BeVo9<Aq>BH!*s>"cs4au@N3_DneXBqkiR%-NeucgAn^.oB:/5C@W+IP^7I@BgU[bGHE&KZs'/?&$Js`W
%C7/S+StoQ8$)g6rYWqQ.JWs,9Q=bsXEMM:7fFTn>EI.FAgP[(W$RNht[gnEka\kK5F.IQ;Z7V2-s.o@)YJtZUDEV!1a-=!W53VRL
%HJEg<QM(3&ZER5tf+4K7S*=%g3J06>JO'B*!"K,jNYC`&ab,5jFXk:cVn#&R-'XbE)mQ^ehQ)u9A0]1!.pM8jG$LGRbK5]?T7=0]
%e[*GpFmdR`@1=Oo1,E>%)OO*cC]3UB3Z@9HP)aGrdf,LhJ`sZ-n0;3a1Iug9o5R9A4BG]h>,DY*RTCU+nQ0g]i!>CO6R9@0BuKYd
%h=5;BR6A]hkM'FNc<Qga;(6r-[O3AbNlYS9gk>ua0f:nZLlm2]U76_lo)#VA>RS/OAA0;!;UX=A2Hu)nQf@2-V/G65eeDPs]gCP_
%)sd\_K*0`C?^!R1Mp(5[]?_$(pIh/]+2h?JP81!1p!K#Cd;LIf+&2gZDL[Ql#gcpfd`Ch4mEY1WCLkfAqMre5_t6)0!ms#m:[k:r
%AS<B9PRO-_2B@Eo>?Pa<=-hGP+ruC#M5Clej-aJse;G.0*)G6PGLk;YX4S$5OgQ'2c[S%)S6L9N<),(em-;lf`Z]\T2[a!BA%=q<
%9GL/sR<afOB!`A0!#==*^KT+8hJ_m@QdVb)7SZabZ!@<6I(R59SReTpm?2lKhB57g/*Wt,H%!2%E3c_TL9AHll#?@p53INPVRP-7
%WBtARn4C@l_W?3gGfn7K)lj@,4kglh%[gkjpkj0;e_p`en2//gHrF,!@*4P+,PP5FM)_(e[Phi)9OBi==6YEfgPgpbEM<dPL"rB5
%A!Y,t7[DM2WZHY8a[VJ^dV1AF^U05[o@+13H&C.3#"hRghEo6.?bHujX7+-;L[PPY9Z$2@Q=0?e`D0JUaduXO#gUD7^Y]E1DKe#E
%V?O.4&R1.gNT5d\5Q13s2IN=Pf%Kt\F$OT1EQ;qs1S2%nI&M3]p55oIA9jk3X7QmJ>Ns1SE8CJ]lGM=3l&kCk](*"nK+k*3_7l%t
%Rh?;G_F?)h\Cf5`bCfJT[bL2#*s*&H1<*>$]6lK"4P7Du9q%O^1NoZnNSl6Z[dA+)X<`#Ub!t?#_<]G+[lVpNp@cpq^&(&U\nL6^
%-[H-F(Uht8]cg$llY)rcOVb1fmbVXQ]2Tpq]1bE3$e9fnbZ_s[qIOO!FNJ"JP/?Vemfthp9N5mg?dl8r[(UJ/mC1m%6q)A9oWr'_
%@FUGjeb,ZJ.Ab8<9f\EC9U_=p8*57Q%==?PdfR?'YaXq<$:YsdH_]_qp=@^7ILM8r:Pfpo(eCNnYp6QLk*P,9aC]sZ/H_&]-Au04
%T.emC+EV1*%m?J?bKFVhZUpE?P0]/bP@_h]ZBf+IG9/h]*Bkq,YKJf$@L^R%?edb;Xkh%rjL8U92X+[tOkof8$B;Lm]!@qZ>a]58
%g26<G?9bljE5AoYd?)qg3f$oS\&`S28C&cVe%HbG&FGP_qqs>lA[5"0ios>O7b+AVSh7(..=8dpSem]KG("\FQJD5$6d@a>b\]YV
%GV-sTLIf`5WZ)$N[kbil9/#'_2j<@Sr@/_ShDK\ePs;F&<B7hK&%3Qh#<0hp4TrQs?nk[JcTGkgHW"1:f(L?Qa0ghb_:i!%b,8DF
%>IjVs:Pn7,H4eHL2-6KR#IKcP=R3B,%PAtRantArXR#*)?4&UaNJf$n$!bXH.?TUNdYka/l+MhJ2\?MaE\<a7?_*IQYHIW^;T6LV
%$/H4H`>t9"Qs"srIfr&Tdq'c==/1n55X1Q1W/j>&/J1F!4^c330f*[5N]om8MFF8%qt%>ObiFK=rU[].G(Em]]$?p;QB#d<9Z63C
%WO#5i9r/YL&)4On;p`:P?RX'Goi]BAY&D7C57h2*1eYiYrd<BBL"ui]A6_Z)rO7\=DcTqsYK>-rTSZmelqa\g6tL&U&7se4YRBUE
%GsV:Fg]).[qh`,@nXX&I9\5V!=M-^4m0sW4Bi-cf<Hl;O?&s"c5q^j,8(>!YTEHj8DiiW5I)J)fU>WsL&5:_7RTB@]B-D3^3@@js
%[<f:u/33d<4:j9sXSLe7^iq"Ghm?%Qp%r(G)*-%'oQ%rik#&nMX1%>+Ck-a%2WbN(Tlt7+6jAp_M=#gXl5/c&k79^$rI06rY@mUi
%O8eJ4D(3#EZDU4@`dDDLSgto-*_MQ)^V=h-nh5[jcCu7*d@OZ=+5QmpSQtn>3%Y+-o2!,Nq'kS&Y:RuorCd#D?rW7!;^[(Ks!+`;
%Mp]ga7Nd3)Fl4KAC%%\[jH'+8nt-e:2]ai#Bo*TTO?nn5gqPJ*58G(*A*U%\fnYV#r"td-a:<S[TpbL2`=;TE`/cY?<,.U]Q=f(6
%RkZMl;C6lFDo"rr)0ZmLYr2)\"`hkXO\'LCOh]J-iTDX6gZ@&G,8O9+bAs7KrWif)/Wj@$YOM'%4pFn\gTO9>LI(p7bAjdbkhns7
%)kE3fOW/HJ+roEWrCJohG(jc)TpbO"fee?0iQd;p?Op[Wq:G%^3Yc!68UE,HV[@Ja\#<%L&,O]V[MlTPKSqqVJ^rDS^EP!\dZKoe
%]A3`U>mP(mrjgCIlU9V]&rl9YhC%CIn:0*<d"UXoeqGW^)k-!cG-429B6FL5HM%j`iTDJ7T2]t'i.7]UW]]ms#'A87,P`[-Af"Rg
%5ncK-m:ar(EDY;I?f.Bmc:U/+n^RDO(e_4MI"$KG9lARk;@BV-Q/25+neA9EPh)S4f@@B@7+mVaJaiq?Fu2L!Ta!unkC._5SN0Q3
%K-GQZmVT&&NXc4H%]ZS/_t:2Xc1R!Erjc@i59LS)YG:ZbFFSr=/j5PO$)oiN[Y(7DWC/L6a&/^?5:E^ie]+_15#@iG8>a"C6M@st
%5$>m<bG7@0<oX5ZoG64j(X[=;X\82q4C<&QU?_J,;.`Stah&'f6mNt'D`f>3G@Nre!+)o6/pZ8EanX92p0bqH*rQ`Wo:Q$8AKg!(
%>q\,61Sqc$^HZu]-A/dknG@G'HVi-.emZ`PpG;g1j/Z8]b(dW^K:V]gahhZYdQMt%>B<FFrMa$+lDm;[Ib*GX!"<oJJq%CkI`"C^
%Q9=leM5pg[]Llf+_U]%G^\s'0Tj@]H:ArbYSBA8;.gM30J!C:_rj@Z>$\.(ep#6Jt!mCT9kN\?teB"6XKs#1eV:j^q?g=76IX,@C
%hlj-+558.:Z/aH18!74TL\L]ckPb^9Uki)WqmR=n<WDddreZ-f@dD\hD$m?Cpr5qST=CG?oVWHcF8g:T2<s(gDr:@H-gb(:!SP3c
%LW97es*/1!fq2PH1B,`hXQn,CNl(eed+,],UAm"/^M9mIr&9[@TI'I'Y0L&I_eK(ps-/l%r.U'8SA00rT(A:AgP>c#bNSb;$_]_5
%A)mF9h`;)3qHo/IYQ!CI\2WHo)#]lUG5Q#c+[3LlZW+IrT34nTKOt;Aq59Y-OV+"DKVJ`sc&DS+Ys5!(0.tL;2O\hGgPa)69XJm>
%3g6M4j^upO#N;)pIAT2LGdhlPF&G%+c^`N]Rks6@Mu:eALcjlR<hGe*bkW>n$4ZRkE[2mT<6rYg)RJi.R<DU5Zc>aXnQ_KQa`Z`X
%(W&8!g#Zu-E]0"Xp1=Km>+:cnUt&VM@<?-@T-ECMkh4/(D";iNA9KUB9$\Pbf!]1sGGjEQr6&,Kp3Ln-EV<^Wccd;1UGH[Lk8LZ[
%ikZ"Jc"uu&;46f(`1H.(:3Od$Mee14\^cJkb$6?8n1lBgcPps%h;dhVp-IFtQUhIAF*ge90R'mM.F4QeFgpKcK,_FDGO$'u3FcRm
%G-647:mn@IFo-7IhJR;h+6eCsdJUl3n_sC\J!#QNa$t,Vl,?]d2iec`kMr7VDLT'8>+%T9fNOlmWPRfroh=ghrh3YFSM.ZUQ2-ce
%VsJfC>\ktd91F/7YuWnk#VIsf$Xn0)ZETH+DAT%t(`76.G*Ru<Kqk\PF!8<&[^C'q\m&8j6IkSBZROca1m=9BKmmG*EcIe")-@<7
%lW9#'Mu2FAj>:nd(dD\f(GdGLdUMofHY;lS]$t&6kZ<c[bKBMC@cK06\CdiNG@3:5gtqTT"j?bmP+jHG93X&QD^gs3>V-tY20(/'
%bUkC%h&42.dXM(4W?)R!9>1,:bjo5u/2"+R<jU!7iSjM$c9jP#]_e/a/n]gEddkq;ic=jojZckMDWft9bHH%_?C=U'Y-%mDDJ*%8
%qrI(cc<e#hZ7!nb/#Nb,A*(:55-,I``na7hH@NQTCH^OW/h]HHYDQNLEAb$\;claXL!$I:CWZG<jj@(@eX5UHYJ(uj_:@DdR7^el
%[e)Nu?PCnVj0d,slZOl19ioqAMVZsnlhdcj<d^'.CQ1[J1,.2$f)gO!mF?`u&VpU"a01h\K6k'C\<-0T^sh-$;4n[eWs&:F2kf/E
%r:VP;//7BcBVc0A#p*>&>m;ql2s5e4_>.EA^>H#qcg4;ol[cCK_R`d:Q.H]J]nc9ENLmM+F2%[Y:55OVrgJ6`KU.p5Rj%$D[MISZ
%NHAjKQ^nRk4=;dLKi:PQ29Cc1q90Hg$3]=4H!T(F/Q[Ua&NUQM>H0(cKLAIHmU\&iq:B@T'XniZ`U-^+/fl8ZY/RH,i3$0;F/o"]
%34gRj-Z`!R#qnM7$2Ngjb,Xu[l!C!?8hYtG>'T3#":hEKlb15OG\^5`#k)-(c@iB%k'CJ-HEJ4T8on9`[C4MIoh0EshG#9Xjn&//
%A[rY&%`tni/#on\'&QPCiFu(Za4GB)r[dfB'^A>6j]0'%:fm)%MQ/=rct@@miS[>AfG87;WRG$J]-Z*GN_V47c+Ug!G*%N8[@?R)
%YuX#D^?DmN;,J.SK<-,$\7k3+WQM+;ABp=*YALFZXAlB!2`B)?I^4@glu$'t'r&>$\!#Zl0m?H47Dao;F<m8ZlpgQfqnkthEdogl
%1I@FtTqtn;1R`QfDItE<bbh)i/T8@hDk=B=44f=km?Q,jf!/($DEV=M*Gi.XASHL.pRnk+Pq:^/+!7Rp[NBFJ?jLSXX6kV35TiqY
%ffniZn!p`qZTCX&/\0>E)gZW)A9U0T;l.HHDJ@rL/N%;1R/c-Z(6a^3C+NArIZ@\t?^>1TMaf#,\6408l_j\Nr1G(q`#n!NZgi4:
%\-gAln9@Ao`5KR\7'>.r:Qu7!(Wj4gIOV7f*-[VD-c'3]rj!/0[\&S#WV(u4C+?Bg/>pe^r394DV/`&4]R8t@,O6(-I;IK[dtNul
%GLsU7]X96p["mJ]nhIdhpO9i$[/7GGgt<)"#Dp-)[StqmWhd)t)CtLDbZb!R3tkh)I`\,;()*)PICHPtg_Z%G\'<UVrER'W^L+N*
%[h"d"DS$-X2\-]0B;VAd`O"8[>gb[bLKff`3-lY.(1SkMQ&FC`ULh8kEO9#2-][c\<Uo9!*q:>UWm?sjR$,$D^6E8kNuOR4ackX[
%3c^C2#`0q<1]=_Ff2QTA.oqV^ChDk5T7-&hoM5AZjo26FDU"]CkY(O.25fP9Abg.V4W?H:O^?PD$Z1=TXDrX%T3F5jc?$V`B8,-Y
%a`9K3T=J1NC\aOGI!0#a,lcXM(X?*>(UN;pgOkLWRp>UX]T\E+0'%d>iSpfAI<8=m8A/7\a)b\[R`j?)q>BeQS"I7XPdaRmb23*?
%e]I)SjQa:!<4lOcRT$DRpZI7rqccq0nJg$Lbspf6k9dsPdCO%fQ4InfEd-X=5^Imh/NjfVn!:G?rk$*rp#b\Fd,)M2hZpucn31m*
%;7JhTboPZMnoaUKCacV#-iTV+6WIDPIghp@V]IWeK)/T^WiSB9LGSn,6rU$I4l#ag`a#B[BC&#>/rc?62J;Y<g!`:K/=S4rPV07q
%c:[&sW#bWJ>H+"U$Fe"*6,k<%CX4Z1dpf7SC0]OHS)O=-ChC.oiat=c3@daLYJp(Sj]0'#.n?FK8X)!V-b4rOk?>@VY=PS980tn)
%\>[nmSPD%i[iDB=So<CbS&^:,R(b!%@cet\\(Z(@5A.E>qEhkp]1Brk>5+k1e2L=(>5c#cR#RN7`c`T<R;4W#`:SM"ECjMRVA=lt
%AoTu@eQPn(^"31SFP3Z.[PurMk[_,mbrn7u>H@aOnsWYIBj6&"bSW,V^D&LddGXslkA`rHm4Q_OFgiCNNFr'Z1#i4Gmle-!8!Z$[
%s1O`T6*B9?_&IZVPa>#!QFnZEP*c#=s1-I)j,6HY!!n+Jkrgh8cJE>:;[FR@A7YIkbYY2"s8:Q^8%RXW?)Cq6ICoK^qO.TZX509>
%Da3[Y]!lR+;[;-g=/EN0I!mchMD,?hcDlB)piI=<E2U6eX0,e^h#I0BKM"MG_lga6"#ASpY+q''fN7M)m,?4!2En]T)P-j&@H*V^
%:$kWAiId]j(I+9DBD4V+Wo*d:LR#U0l0IVYm:7PkC5bpV3^7tGc'@ObdeFr4/>N;09T^64lM$89r'er7^6=ZX3O.0l[Wu-F.;>9+
%2ElOE`8fT8Q/NbLh0@hQfi9,qfr_:mF29Xq;JR@M3LttY@r"lJQ-4Na5i7B(hoq.pHsN4GpYTVrQ)UPLddsG\\G15jW`;i]:A1$O
%kGN7kOa6[m%:f)j[l=@^f(\lM6-!*p.=!5CBCrXFLNRlU>O36>]X)s>Im*_o)?*b5KuFKk(MA`pC?*n%DE,!S?*38Sb9%W,YJ-qU
%R6IkYZjY4K?fdXNEoW_Q;5Fkb+5Gp-R-35Wof&pfDKqeK1Wqo`27Ssmh`VfFN6d]g)erOT6`TNF2;7N[qsiG:E-2gmND5MM9coFf
%>.qqo#^rR+1q+[(Sf]rBg8GQ@iWIpsk/1ESW)mp#Y9*ueUK29&h<U5d2C_P]h)j&kQFgW%?fiHY8"JocGTZ:%IRtLOmIR@55BPAh
%HcDh\]nm0!/SVOi)5B6@rSHUZ5CHMsj@ie3?e@phQ%jSQ?$_q6ZLr!S2f6+ZEo6IXk,<oJ)qJU:KFcqbDN-N43\6lR"H[tkbV/\1
%+FRref59nCs,7k=HZ1[DYL^G"r.de=6[#e<)jQKIjSSc-q;DeCrc%h7':8F/h2h*U;(kQ=?Sb2pa1q'Pnu.YAirdc]dTM!j(k#1%
%FdkAVn^!3"Zr,]cB28*+;5"AV^Y:uH%P=S1(L)6\/c",Pe5:RZI^o?gO2b5SW7o\qq%Ab2'KWd0VshgHdq0nAe8&oHm-69Qe7EKG
%n:&GA8W4S7['u+1Z!"KiPL<:enB??hVU&f&`Nt>rfVk]Hg4ih[1$V<cW%7VgHt3g*HT0ls,aZ.5mIWGL<2\&j\6HPc)RZS^Nh$!'
%;)+"<]_XZDp\X@DDX+0IPCmK0W9a2)VNrt%\!"1D3=Ji.qJt1hm_=34*?Ifnol0Eb8*6as5BdejY)UTAW.C;C_tB@qoMIQk0*b-k
%;q(!+^9%!>Nd>r\h"r8#5jEC![%l=ICAOlu1Q.S946Pe+URlBeX<pE%@FW*-:[G]iN)@n`mJQoY.=K^L^L&%kI*YJ,ol@GC$D"`_
%[kE*'4W1#d*,(8F*nO:[otH`<HfiUHM_s_;.ut%G<hiK`QgU[gou7tH*1l-<NU%/teJOeo>)BG*6b=8)R)c.8Fe%XcpFD1hqV($p
%%6XTTUl4]f"4M#7O4hq!>'l)$&'LmZ-i.SJ.#u!S+3a@be2!*=`C2@n'Pb#i/@Y24(_oLX7n0'"f1WAGm@RlAf%2Dnea/p,XN*iu
%B1?igo7V\&jDs/?n"0\=?L(0\A,H#=Jf8c@Vjr9Vn+6M.^@8c3lUrTSEnDlI!uK8s[20HO:NlBN_lTb#+d7>O4Ui5/&`W(@`oj]>
%"/D,7lKRba2t>DfoZLY)mgiaql-mu8j5>0Z^#3e3:7PlZoo,$hX6c`KY:g)q:Qn%bqW<cge(`*m2b'EONU3Q%>MggWSdNi7^9-8H
%S!ArY]p4/6WIoD?qL.k`:NV%>qJ5Z2HE-^7,bNqpEB8I/$]!9[5lOH&HM$<2]I3U@=`n2bp9YlS='mT8rli]<Ir)m$A3PE$1_t8_
%Sd%H,HruiJaSMDB]JF875$]tGRH)Mh[ner0)`^/&kS[Jc)p*K=359`[TD<TRR-iFFJ2Z:poFF`.Hu?-$MpioeW[ENJ'2M-mGMZu_
%dn4ncmWbo$?S.>_VnKm$GGK^H&=(_9cCW<u7A#b6(/Z,'V3)*X2M9m:2>o,,]IdFC3Qdi]d1>o[dSj?@:ImYJ]oRZcBNsa>X6s$X
%cOl:&^Rmr;V(`7];$1.n/d+T7Xk+D[hC^8>TRVeRN0ujCLOJPePT`r],,]1'dsDuY:%S.D.5^9V2!4P3E593X?dgsO7-Ak4Tb!Dt
%UcUX&k`kUI-Y$,RYOCE2caT8m:`C5kpb[%k@S+?-bYbdEmpGh;7LdWP=QjVUE\ZibFB!%Z5;K85F^ZpYlJ96@?Z"<e^7Y/3;-C\.
%!.!_7s7';IlLLS"W5C!NUCr6XNO2Ob;4U^FE4KQ^aA=H@1.FDecX(DUd^p6\"ld^:eKT'6W"qVH8"JooVi<1[)@sJ8QjI;h;_gjs
%OKot_f6]_!T77"m5XJT7o^4I6<I+&moC8g=HVWJa`T$DgN7_[RCB%8cVb"i0Xnlj_1h+8#S`$QBa1,i>\A?VV)q,Z+bhcSiTke"q
%s6?'jX8OjG13C"/9EK%e,.Pq2$r=Q)XA.nd`aA!1c'+ObQbQOWJmC$=BJWTp,?'t4r1a0.gO*$HY](VA:n%qHDYce.M-8Ds!%s61
%]WZbjs4L*p*m-mZ'u"%o0[%iI?`hQWP<RWr56mkLI?"F1&re#Bg"R*5H6<:/"SB)Zqo]fT#FKedBMK*;C>,39+HgGEILZtpDiP]f
%ZeB0=]TY$e1>n/`c\;$1i7"B[J(38UB4ZWd/eYUEScUG'Ii@b6?8&q&)Jrtk\AFBP'ga62aP9-`fSaSkp@((nW"%^^\mges^,LIN
%iV-6FhMU7hA>pm`[#JG9B<V-(#I,]bI?Ksm><G1X.R<JY(/Fh9(?$"+6GkZ1'Z^>4UPm+drgKtWaPtn<>82hA?`:3L0R/*S;$QeJ
%(./@?9P80]9`@oI$Ot&IaEpgB+3u>I:HtFer(C>N8b.+\44;@4bh9o4c$WXbhCPi@@-5'=PGsQX=kEUqGsJ&g*R6=\0Sdtk0+$@l
%EF]^@@8%6%X5O)Ji,LVaX2\K<li+_c7X1:$(`l/_7a$J0ps8-Nkl??&KP'OI3gfS.=#HIAZ/4IFE26eK\6_chI:@kGp&JFn*e3>?
%AtM81TTA'(Do$1QYG)LiLeJ:1Y%R0;Ybh,M[^9ZFY"+Rh`2"YM@^NVHST%bp\^>.UQ;].hZ[DA9[S.f#]eHA?IiOF!8S:'<10VFE
%GKZCJO3^N)+\G8l#OafS8B;JkCYU_SaX#noqoIkua\C(7iFTf8,pD%j3)sC\l>AUW[?GEaLER)/n`$'QIE\j*b\:io9daFG0e8#Q
%.pLR4\$+."qYa!FTMF4^f*Gi4plmGqaW<cQ/$b/XgQ1`07$L9<\%S\7iE(uM.%8^VD^Y?Q:6RqY+Rh5p[*,q=!A-q"=om>M/@<6A
%X4(rNAs2d7`n$T@S6)0,(3d)ug;<C+St_*<qXOKNmHr^!>W@3"0;)&jNF6reiYYDkd&asq;%u90dm;'r_Fa2]RfJn&%lnbjKrt_#
%ksFE&A+IuS-9M]2VRRD/4d-k3T_>5g=Q34kF#-Z;a%BhCOAHug1\g0p("g16-1E4TXek9CiZ5.ha*2<))X$QJjbOqII]W\A(\<V8
%aUoeCTalGq+r2n_7*#X/8Itk8hp>@=8".enZffiicn8.^'V'Z#Bjd*\@TkrE=D`d,,Zbhl$d^(&Rg4=%e76oo3kn6/DjI4!HPLG;
%UB2saC)Ur!og<(KIpXgGq5@BN"/V)S_,%CIn>\S7kuNg2n4G_-R2@(Q*J7GkYabUj_g)*`Y9a^+WYu\[7:d?8#^LdO2*.hh%(Qt2
%7smd[FcOMM\8\'W9SqGCZPGLPcJfN_=@8b"Aj`[\cO_k4YC4DN[@,sE%;d7NBgRPUUW"NJ&ULR>dC*F.H<c)`q'6!.1q(sH2N=ej
%$)0\"ItlGZ!'(2_'Hmf<P=/["T)2LWBi.HkOJ.L/Z*B\0?5'Y$cV4H0:$d8LT2(A!L:5AYenE>M\:]dgU&eV#k@Qm!)I$D#E9?/a
%2oR2pHC[+Q"M.)7qIMh3$X6e4:RhZ%>6f4@_<euS]6R9c&%blH\P/Ie>7tu`3[*\08*FDk0)T"-d>/@8MqWoL8n"b*YX6ef(GV21
%8n%S5O8"g?bgtF=M!EJoVl[8hWr<8^9qcQO$Fi&.pmMJF%lQ))%2MB[m\QdpL*7cnG*I"]ds=m.D,*T<pc3*&^b3tj0?ic7mUaTX
%3=>RBON0%5'UM3<*)2oJJcb[]5s&5'UL]j,5O#a,H8E]<H3uI%q>5VoD)N73c#B-7;RcCUiB$8tr\,6fUY6>6.Kl6Of1(,9=Niij
%BSX/FNVCq,a/I`YNOlM@5f'+!Pe,sT!SY0r:cC[k\1+Q1Nq0/RN=%N1Vup@2mO6,N1q#(P3eG@M:JcGf&ph"]Ua'cRL^,\@G#<6i
%6*);F7!2OQ[)H=]X[dKLV-\s!6"4>$4^FMYd#$Z&-^065/hh/4m'*C)R6R(k8T0V*\"I2UI+Y15S_+lt?6X!](%Ql]@T%^"#h`HQ
%\PX)u?8;Uj\>+Ap]9VVS%%ZNBMf\"QA8ca:YLN?S4T7l%*)5uoC+JD<TKjqW_B5t.G>hu]RSsQSO#eNa936,qR#PfKpu>4K"^EHt
%-DI$D2D>$\d6?9p@$nAab%H_<fc#'6;#8LLCYVeAdQ`%L@u`FY5]cknlo"5oehK[+kfW"JQh=ZtZo&M1aEs,m+")dM7X<NN44;_6
%@;qQO3SP1#Aqk[E4\Nh0LHM8%(I.*'9aSXND_fZ7EM7I1OGF-,.s0D_/"j8=jg='>)$ZENm1;f!a,?W[!<Y&PWutTA+0mkqi\7l7
%\Q$VK.cp"g2l4M3$cdW:G8@)+&fMRY=LJHcQ,4ln)$dTl0XMY020T!6nbo+2)TM-9>i4`F/m$250fsKC@j/R[QUUNHkpfo$508fV
%NM/e73>kC!H]pb(Ee8'8DT:O\8l[ug<.IpAhLG0^Sou`_j@a4D]Kd+e@aT;3E(a,Nq3X`t,+UAOQ]Hmc9KHP:W3KSk7691!kKD35
%_eM5qc6m6W/!hnc4PEQnbKo;9;Q5RkVt6aF)WpU5V55fQP0TDdbL[J.)/2%#00bf,X-SIk?92GB/g&QL:8IJ-WDu%\42^O?HobUt
%Di7(LM_QM.)/4G:WKEbme`sFrOa*8k+I^riEorT&S0atpKZ6?(>>+Fq&QRKgWB,fF2(9J'"BCaqr2j.4s'bOeMkEZZV!;IT"\ppK
%b=Q[mM;`;D*8C,1:jtm&GRBQGq"t&p1K]nXj]/59'L[\t;H#*)qJYZJmc&u(/AO39ds0<GdL+p_S/N<Wntq\?^DHOi3-e:RXYJZb
%-6p'j[M+P855%i1`$@R],h(=LB-8g7DI.-C^8*8*HhF2af65kR>/4]bBm7h?QXm*n8@rZTZ5"_/NTY!Y9u&);^*KGL`">$t;-D+:
%'J$-R]Hk?,Y4R%<c].JK#i,kdkj,)-Q/hKg]eNIG1d`Ku;gGRu]pm+`aF$@ETKnePJDc^Q(b]91$Oi"<PFd'h?4n"gqY[!Rkr;sH
%&26`sCQsmG84Lde`?ND?Kl[Sc)f_fgEXHaUo5FJ72QlBd\_b!?qZ9bR@WVD!QSk\OBVnk)XJuJepW\@;gb$RKSge\hiB;Rh=Zs*f
%c6djQUk1-i%H:j12+l9<RomP@MV]99+iTdNZcR@lB_dLcblY"E[>%.99;M#-*1rJTEE"HVkrV>Qgb:5[f&D;%5*bU"kO!DG"Z%(h
%n^-#u&m*),Ndn4[%XBm3IALHMi/a/53B4E-:T+e9p<e[me9-iu2Et759=[I"]8;cc\r;oo]6("eeVGu[!0Z`,=sL=<R\o.WlCQZ?
%Bp>cik0loN#\Zd=:OLB$OHW!b_$-$Hj$5sQ<&:OfG-4[DoXP7`+9a5Z;(kCh]#'?IC"[Xt+.57*.6271=4<kLs*HVCp/C([@\>2a
%$VC]`p$pDM?lSPC*n9i%0G:\LZr6$s'UVfU:cU0DXsr[2I^5Tr+](&A`QalQgj2o%\)'6MAQj#X0J11gZdtlD-:)J?p&<6=Dp83;
%nj"?K7fhr#>"=1.W/mV^j=`-(5N[4CMs%u8[baOl>bc\V[]MLTqY"9u:;A2(4/f24,<mi;"poqPZWAhW-"PG\eC`IQ%kTD)Y;](5
%bnHnbU'3?sfn7\d2DO3&4jEng#_4A&eI^1YPft&7J+As`/T,$rmDZ=U*2N]g+=bglZ>EIH-"301.=Q-#4aU>pE1SCcFL/EU-U/`X
%=GS//dnVZ69T<6%[@B/!o1R()DFY\P22"G?A(O/-R<`rO9n>k+(,GKe]hofpbi<-cc&Z_3R9)5cUWq#q>)l*(3NqQ"Q&Nr"[+N47
%*Ank,>;*!L3aILso*UT):1WM;`51$r6jdJeFVV'IdT0sdg>;bA+6dlZ?<=cVI?;1m[U2QOe9)o(+8i:?G:DPJc8'I8[rt+l,E1RM
%\PVL$UVnrE%H&[1Y<:4*;BKu->,j]/1tJg#>tG/i,k>lBm&2]HAI+@<e?5:@YKCl(o),d&B[)966Qd=>*(D6P2;!k>kOC6)cgHZ,
%cYAhDeY9N3bm90_3Y`!Mo"p0e9i2o20;;9$'%JKQ.<V^i(TS#9_293Wl6Z<E`M0s`G>ojO^JT-F8q+J6VLm&+oo9,A=#7P/%GJ^0
%od2>f^r=gkR'X<%81dpP$c=ZbVDVX=3B'P']([s;ZaGK4g$@La<5V%.$rjrUF4?m/fsB:*,fudIN[2^jDlk6UZKS7c,['b;QR&&#
%kdkaPfhn:U*XdO,db-=-.=N=2.Hg4\h[J((BQ#t(H)YV^o1=5\HdgB<]WPG_q]ZArX%@RS5jNMi?;]Obc(r"T^C!c;SYWpp+H%#!
%o("*HLmn\'=4tlek,R<?&ht2FNg8a*r)33bKZAiM/fQj"cs*2)@p*f,0rm?]CWiLk"^8!VEfN)YZ"JZ0l&&GrlO3W^)=6AF4jO@4
%S6(O+_:(HgXPm)'gbih!qC21&NFbMTW.!SC6t`rW0)mrE^9%%aI4d/JrGrcJq_QubF5n?pQ)4F^pOr!dYF[A\c-<FOqeMINnnk5/
%0YWQ_(\V/:k4Ib2S`Nn?W8^BW3=0Y'4l<OuZh&>e[M)-OGhV!7mFGn!DB0VFr]0O\WolAmmHuqeg$cUul#&V0:_IJdq[;*!I^k74
%3c!6Gr+*S(OrkQ!H,87Rk^,:(1@5R\F,(Pq7e>!<jIX5^]X0c6S2olueDt+?ZCfUtpZd-tALIAGI*505Hd#.VHf!XU)mq3+Vf:\q
%k?V,ohgJg?j3DZ<W/G#t/P!4V,`qnqbfS&0;0V::MU&=BT78;3T1D>#oN*CJF_RC`jM/aQW:\8MGuZTJ%4=S:%8QE@kFX#Pc)V%-
%(Cfa`GgF4i;dFAAp:t`u*/M`^.$DYMW*Xnj^lj&Bf5(Am$I:/-\\<&O=4>deV$Y/!HZnt+]eg4uI*rJhb81=^AgCuPEAl>K\#mS:
%chtEE>.dukXXclf\7F&<1,QXWKdE5b7A`h\_<hSTF,J*AeRjFlF68]@34EsHQL>bt``.ksN?qqR-F#4@MKQ(Xp(R>OZMNRTH:JVF
%dd1Ip/C;5O^9juULsrD'M1%C5cV>h\AWk?a-MFi[mOk$^Q_p7J+`s31I5/Q(Ab@@J5UR3Ad^&^IM+r>RI;.DX(o#Zn`4iU[^7#kI
%@u5V+@Z4mkKqZ2N9C,<plAO;23gJ?a[_lSBmV$':L3p>WM1')Z$;<f-9^GF,_e>uKLD'L4ZMGIF:ou#:V01>]=-L<T:@'Lr/8d8K
%0A.'O^LKOP(D`JD>(OW+-@jZB@UE;>T5rn519iJaX04&P!l9$mqpIMra]N79YqH0Gd+OSMZ-mr-?^b6UoiJGn>2+m^Bj#k@E1TfM
%p8..Sc/[3V`4kGeK<2e=\n<?X$KhBL3:^9Jlq:P\=0dF-;i,qm3T]I\>rbK^E?-dQGPc`pB[*MGC=I!nCHRMdKE5cLn#q_2I<5i8
%h;XbEEch-n^Z'H+1q^f2B_'s!k[5Us[T-.(5OtY1PTi@QfA"8C,FY0%W"B`S^oqFcC&M>NFTMJq6.Jd]8=!u5R9"KU7WWY1F-CN!
%9r">#Q"a9+HVYL3c$o[=.1=YG2AIs9208S#%Y\6T=T.j3[5stg*;,\Gq-S+l7pD>[e]pnGrI9N"V6V`RCGHsBe]\!(&nML"n,I1K
%:7$"s?^`^G=EI27QiDcp1\^m`V#..]jaVu"gV'\tD9=YI&+hL]Ia`>)j*H:;VHOC-",Zqe]q+Zm!24+Te&-%coOWb92A=ok3IS$k
%20C4n9#%a(Q+NV'(/i19$c*%`NK$\P/4_?Ci"?#>P_;sdV+EACD_RU0KMo&M;8%Z'7a'PIFo"gjM/!J$d$k?LU>?6r4r4U7U>Cb1
%Olscl1DT7M,%e/_E7Q]pfhpL\^>+Y+JN9O4?q8l^>0YkHfnk&8]7N*i4.>QKQ]/gimRbZo.W:-G;WPQ\/#'S-(Rf7S_Nq]>,;VB"
%^E>A.b%?N5&M\A:O47tEa9ugtGX5UB<X07IP%C35C-NEXU7g@$ne3dI\_N==D&7.N2nIZr'^iTe9>iBM6ID'Jdh4]VpOZiGdaa10
%#'.ajSqJ0lM/V0Hr&clY;dWGmi.I2V7F?2a`Fsc'nah"XRIcfUpFfqtDD"egpq;0n0\PWo,PV0dO%8ooJ'FM(m!Jc$&_5XGpFi4e
%emJC-dP7c6pTLWW$NusG\?eTrnERb.K4bklrcQ<t8D+a*)t]FigrR#"Y@0Cd_//#(r6VF[2!sY;*T8B&C"-@bZ@1&*l`NBanNsh(
%pWM`%#EeJbfn#rElD<9eLbA+oJW^aO#9.j9Q@9R3cFTsFQF$&A(;\csaQBht-\fY+cJui>11N?sG-K>=4DlX2.c"nWcV1sl'Jg+E
%;M?Gt>&!\QBh^UhcrJNb;\-702;HS`OlMj>l\kr5WBg9k@_1`Bd9N]a7&nG>9[50+1m`E5gjC;G(MA//$]QU3+$!]/8Vo/;5o`[b
%CHn%:J0s0-f=AQKP>%$59hm41GC.bc<NU)<3dU,1AXME[JfW"GXd$j^*C.#SKuSDIFeKhDBMg^dqJ[LI<X17p<9>Ck`.lI98V9AQ
%'-d0gAU;,fTN;oKf8ckZpM5-+g!RM3l0#*ELOLgn9:k,4g!ZEG37D(H7`=HI(smk!@OZk8B6U,G`\R/Bq[QE1UR&%WeT;IiD^UCc
%]WOeC<-CmlgZR+?SiNgZUlAnr+Zb&MmdBRi9Z<"SNLaXY5P?_CR+\5epRN?N7MSB(>YV\R;uVo%2;N4HNnh(6SXK49kRP6oUV"c=
%dcKuFm'f1s3HE$JfC3&nZOeE"2?`UIe98j1:>ZlRC\9/-1[d)3eE)-,IVt>Cs6]HLArQ#W`)8a^U[BHu<O!Me)Qt5pO1MiGYS?!K
%IQSVYJ#S[Zc]RJ^`-Vi)orjf!X[&6,e]>[VJbK/OM<Br=)WRWIT302pLsY%C_FuI?qGjo,=ht)4Ju_$SG:-CK7V?lZ\CPLX5JO5D
%R$*V^Ubm[<PCZrkF/l#?c?2P_bnSF+H>bur4[ZNSZND!Oge(;k!imsmE7k4jHOU&3\r*E+'aWSES0$9)(pjQL"^OR1ArS!j)^PJ"
%Mua;$O.9q7Kn2*G-QWIPJB`aujio71\D56;H-V6I;q"=M?m@tK(=-S^ihU@pD;00*i_ns?"oOAio%Pp6F\T@tl3f^'2$gHYdugtm
%9aAnj(Q1-sTQPTb;ap.qltMBKn:+drZ:-fL3a53"I47uu=.I5=@+2,VPD[`;JuWmS:m@cR[S,HCf9&DO9:aS.YEt]e+_UWWOSb@h
%Il1dk\6_et&N!]F.;jU>?L'(.4Etd9"*)M0G-nF4gbN`+.p9g]&f\r6WB6Ug!->X)0`/Rt2O3/58R3lFMBP(-0!F&G&Q(\LXm@<a
%!_J5'P:AlkTt`t*V/b+_\;=D795JtVQupjn\Rm4m\,:$7)c!K8Q6_CFl>M8lFd_oOcaJ.8PYKXAcl.-oRflms%qnnbgp#)0JQA,V
%S>l$:FjXT]hmAK.=>V*SIQX)p8Z\OPH9PeC<,XfD0uo2Xcjj>0-*_,I@]0u!h+(B[%Anna'i%=ORZA;URnQkHc52q_BJ>]u(/ILQ
%RZCQ=PKl`k/=MXPaG#tQOuOi<WF&`tZ9f94),#8M(G74SN6i#sa,4/'f[Zp.7V=>(<5`DA?bWTq&IePT>um>d8U($:_PYP#X^>,]
%Q)k2amp&m1B5@P$AVK@M<)HIP3H?uQVa+7_jt8c4ZDpp*(EQ&F<W-ciBoshr?$M_Y+rO;BFtYu%?//6]@\D:5<7S"qKnkYg>'8oC
%_u/7!]:-h8Ca0B6)5u?]KnjBjI-nA[W/mUR$P+K?9=aGoX-J@Dk$oUA/5T&JGaO!8@9;4XH`@GagU))=^$m^?!DnO8^kIR>B`\Hj
%@2iQu=?,3E]aG?\a.b1r-QSmb\F?_g7$u!iEojZ?/j.A8buFY=Pm\,/,,sY3_]h9r65L^*ZbO@cf8VCFCuV&'[PRJ1D`d;Xa]iQF
%_Sc:X;Bi\U]C7MVQPq0rGBu,diF)c8fng(Io<Vqkn\4r0&+cP1U;R8L[=$qA*Ah98*Tlfb`7<?#_Sc<+%MRQ"P9Jcf7HOBK7d4o`
%aYs[=B?*n&dVh3`SdK"5GaL-&e>Z<I??hjcb?.+GB`>ldr*FDB8Xd3Z0`ST!4ATC,.2V`([iGfMlbJ40q6q@KqG#]\*]BK/f<P8B
%k\Z*/Bj.8>&).fKMdCX1kaoZb00IInmBF*XgYfrd-LWC"otnUk0?J6g)2U)m?[.rMHu#kj:n\7-o@7_"V@saek21@78B!0PWh4Xm
%@9;NakI*!*Cp)Pmb823HOs:VmZ*"j`EU,5>Cc*$<aU8W#HI7(8g5bA(/j.@^K<%8.+98;+$P*VFM/WF2_gF7BSCk2giF,n.>>5u.
%@r!Z%GaP\jX$Ge?00IJ1md#mGWtuhS!Ng%NAJ5k$(=bS&]^W.-Lgo*T*nEoAZ.fb(_mF^J@CWkI[iIp>@+r6^0L&.<k/D3/_S^b^
%:D@JZ?$I3Y=ONeo\n%#7n1``UdFFnc;;hlno5?_WP$16??[*F3.6U7(H.\UilnY0L.o%mGKu?5n*>GKs3j\ajXu[i;Ac"fHGlOrC
%4![bq-kf]/@&]R,Au8oZ"B^M$C94*3>Iu@Lf3kA5Dr!M6:4J6PX;gVHDoV\#*b$p@4epoKp1r^/&$EQsXKJ/oc'd+f2Y>KTIf&NO
%1>dP`+gcIUcagf30JZUR*$/@0?-lW$I%B_QrEO;fcE?V0qK4[ImnJ6`%W$$rmb4iT-f81@Cu'E,9?6/enlq0gZ#!\tlolE5hX,/@
%7mHb:^Y5lH6hfL8O625"lL3U.?.bhm-N6[Z5Mscs4hY15Y@$/KSt)uI7pfm6qotgGkKEU<X/j.15Pr/tcY)tc]YBtO3chO?GM#h8
%]pS+?I_6_^:76`Ug=!k7K!t=MG"l1a#'Sn\Y5G!&GOGh#k.U6#\TtZ&^28XNM>O'sj/&NV\`*8e$$a5*hql\NE<DijQgR,!jh"9Z
%DI!&0[lZ5cR<pTp]tni\T3(lUOnlPI[5<+_6tjCY")i*iIo#K9Ih#`phJ`-/T'jqs5J<%dD[$X9a(O;%]:M*[\#oo!W]cta0@j2-
%`,.\XL1JX.df04^XoJB\g:!X6delbt(t%?O.lDBa@##Nc)7]a386d&eAt5.FD9#oY=L.WBpD10Ul_CIiXtT2<,BM00W.4_Re"?&0
%oA-a5peS5/Eb5JQkMX3oeU2Qo2t_`_I@T`Cf3e`lCii2iI;k<[H#bVu\^C#g/"D*:hKYZ"5<?@q>s(5U_(T!gp7F+'MT<XB0Op`f
%"VrM'r*p"p%[S8(TuZQk@.6f2@d>fNaF0dIh%<CU-7ZD!6@VaknXmbX^:hpdQ#cBIdeM7bZ0>,`/)"ZZljL2.V4j1)<IJ]Qk@H?t
%ojN<H*r$i/iIfPAK8n:5n3JN"i53/<+,hS%H)^]ITBVK!Q5<kij7%1:g3,/l'>46c/Ge:[FVd4io-KLp9)kEYPeqltV6jdmRB@t!
%nppgt&<s=^r5u5/EEsM2gd*j\R"F;jC+2+NT-K4_D/Y[7'b80[5Bf!Fr;B+RiaVP(BK;B-c.RM3?jpl\pQpY\#IX)c<Sds!VP6kd
%;,=XC4H-i/RGR$'`UNWE:M4BWiK)UR7FVr$M3UDjVPL[HbHG3KHa5_>[*,iU!h2ocb6+ltV/n=R;40WcR(THsFOsm^pZJ0/^`7`3
%iS2GmdcKu-F^t4?pfF[Eqdp;P8VV[si2&4rhe\7*Vr4!t\GSm7]5dmZ1DuKcf=cqcr^D@p)j+J8Vre?=c\ZZ@3OR#Eb^TT^K0&d9
%j-:7L4s&kFJE5G@AXta*)rtY]q>??P]'caqX3Gn!2T"_6cj0l__1Nh1E)9<sE&BT:m(j<$riSAL3h=_tFo6Q#@,f5Ui5*jkU@l,N
%Q$E+L7k)(@cTo^^?u/M*1%OAZ32QtOS**e<`GE"A.a=*DJ,D"2NPr*L7@m@n3mR!Mb+Itn0CSdZ;mXNqr;*ZfbeZKPkqMH40p\71
%^V1+-hEJUK2)Rut!0sM-QN.rcg"3E6*mag&kaf;3EdMF7hWK5uIQ1[&grStnn*KG6ZejBg'a-#\cC*]_]sH#9jkfh/q^K0mpWf(*
%-@=pY2Re!Fp>:u;n+VTf*"X?Wd')[IR=;Z8,>*5*@]s+KIP$CG^i\'EWY*X?ndQf*obB)1Ph]I\7Y]tKbTHa1rH%O7(A^$Nf5o74
%%2jJN1X$a6`d]"YPf)FT?Xq%O+;gOFPDa3jZ8nJ-YNp5q_LM(5J;/'#6I30Z+Wd4*H8IE@ato@6X:p)NIXZeU>8FM*iuY@&Xrc`o
%U3Jc+TkX5FqJ6L]Ks^M_91Wm'6DXFLbm/8-Oibb51rJrTJ$-pu#iYfsn>H"p$%u:p_HQ8QATem.G%[V$YfN3/,g:u#3'e_uR!M.C
%H(4ck:7Q6@qXZ4tK,_P&()F'ep3l$e-O-0C'@jhoZ.6ggL&9]:n,)q]4Z2r!r&u'7e<8_(HWN47lW]eTr'@o1fm5_*JTkWb_5W'-
%#NK&JTZkIgeGJ0&e_`SMZ1rW'@90CpoD=f2Zc/3s?i&RDr:iA`;dFhLotFE(UG&QE?r_\R^UkSL@DAi-$5%9ZkbrpuMke$^J'RL)
%*[.4no%nkCR,@f-q<>Vrlu"@\?OrG=:[`UZZ6VuYGb60!IsF5]i-t@hRRU1sBYcMHrQ(q'b>Uo(QQPDeguR2,DJdW-(JN9Abi_5e
%6FDun.4!r4G,b$SWY!.tA`U:CiAZ/u)nQ7Eqd0^A6UNr[%6Zd51Ji!.Wf<T7o]1=JorPa;4T-tK?Su0u5TQn^!T"r^XKT(>kH/7J
%a'dS(=W!)Ja,4uqDblFGFK32!Me>\dTgCVnGeU`2YGHfZ\\l6ne5`,f??nV8\f=r=S)=&s[6\c9qQ&LthKScl^A"-.<jfOm:K9HI
%'0?B+3t:,!imAso"lLUihS6:"D,bG_B%*'kG(Cu@hnmfmDY5_\rsH?b0PRRHkMLTc2==2GqVjXmSY@r`C9$n\"\eg+?JZg1]!jCQ
%r\;#K^LHrM&LFRI/M%ejF8hnX41=p-0l]MEjO;?DT>T\FHKCVS2u`gIP?/UMdF'0]<1maA4pqOZHaU[R3.3HFb/2'Sdoj*F%_akj
%Cg/8FbqGH=8L&A[%%Xk8)CD_$6FW<\W%m=QA?k6iK2pASN>>9BXn5T`rhLRHU>sj8>,r>bQc(CYB60TVH+)QE/I9up#*T$MA(n[?
%au%&DU>Tp(_)+i:2.rRdnPune[ABEh4(%Ab>'j-egXBp#N.c@f=665V+Jo-"4i:W&rLVEknf7X3kSZ1B^<3(c,7?t:l"k@CV_gTI
%!TWT/4X`V+m2=Y@hWl$uT&[<"H:hN.U1a8QT:);!e'8gpfC8d@BSKB<iYaXe@o+Y(WNp0+:U&N:A7F83^Sbf7<<W(MCi.Lh03)ld
%C4:['pJ?#*S$PRG1=Ss3nkqJ)%)1<d@Jo;TV`0bVcMZb'Z\Io-CY]Vu+5Y<aY"u7L54&"p?9)4S$cs77VgXu.Fp1=t1=p?t?B36(
%T)H='Q?TOh.c7.rD@2FCMA;gjTFI$hJ5F4>Y1<o,;;Od['G2c%mW9ek+[@mio+&%5ipoJNCpbe'!ia(8<.a,GJ('-K;3[i2g0-<)
%p0UYKHU]Xe]S+G^:l@:T;koe7IWG?+/giKX,@&7`(l06Bf=n^4e8,&QTt?M%E(iB%LVFh0mMb".`*5ulLt2F.Q?pP'n(.!+ehd$r
%EWiO2:Nq+4_+qFbL9J=<4_'6`Mp-)ln'%BORXansn/IGjB[UaZhb9S!6$pR9g_$)8Ds/=<WrV6g]Y7QsR!X-"^S:7B:RY\!cXZup
%IM:ab/In>^?lCA'bsZ@Xql:_og]5eA0-!r?]7KpR"\d[MINNh!K5c6+E4ESt>I%^3CR4'?J&hbdMk@<kEK7SBRn(*kc2lC_3G0q(
%9#J#'=PC["V?fhW6e2B7/%Y#Q6Pa'5)^M<%+Uc0F)P8h(7NB.n)\JgL&XA'UAh4uTS:$kLHdV!<Dg/oJ<G+g=VJ0Pd'8+iaV2t6D
%($FlJh"Uc6ai1a\S#se8rQqV=h0gnVB1E`^V>XQkUd\d%6Q\U,9K7UEd6W]1^[38eOg^/B#j*4u;J/(g8N/;2G=agNG%AiA8ks>C
%3cDBbNR.=*:2%-4LnAHYMi6?W+?oCdB$?UD%@sl(F\:-XpFWjgqH^Zq9lJRR2Uqc/%)^a6rnOY*1=0r#W6=CWpE,ZmmeM:jUdOFk
%3:*iD.\=uc3Vm/)I3QsJ6H'-cMs`E\1V5_h2SXb2qkB2JP(,&hp<^""`M2ML<+7XC<;G)9D7D!Wf)da$g?`f@hPf!A]Yk1qQ)upS
%?u\`;231N2EfO>2f]=`QO(Tgu3Iel>X`\$8o+t*<FCpa.(T\%`m;I%E%Q@l<CuZ??VKH:1Mof[MDfYi/&Y.@p-7a`$a6[JWOC":e
%J10oCA>=aTQ-M*(K;&8WrURcHM22,c8`O#1]TFK6W8b';3k`"I(T;bk"4=AU4doP=Wl]o`AcKcM_3NdO?CfEeTS'9N)%/:c\'LQ2
%f*H"23&T82CZ)Xml''07R<9(Q\VL98'%PA6m,t4Tq15$[eShiZp7r4amR1IA=?MGh>Ike2L*%4:A2F_Zb83B"-u[#'mJ:rn[6=/B
%,'[4a8O71DO,iYn(bulPf/SIc'ogEXNEh[o5.X,mb"+VLI]gH'Lm'L3L=AM[I,*hb!V,1?Kgrm%T)<[!'iXM=K9Q)4:.)G&3UV/6
%?^*8C[tU#a23'kBe%^6!b+lA'KRn/lN^j)VcQ8&!,LEgS^C:=Ebr8c#IC8<-;=MSM%Y-6G7Y'u>Wom"@!Xo<L]ESVbkTNiBR-t%g
%3)nf0_X*,c-kJSWD1t5G>c9LqfELj)@*\-J%4O8AcYg]se\lfRTOlWEkdCUZ:u!iI%^Z#c]/g*'_s8Hc<mJn%^CLYoK9U(K9Y/8d
%[iQ5'N))SDLYJrU/7]S33[Z^BIdG"Ua/\Gj@9QqY&Ys6q7p6.<?W,NB=6(R4idL=8-1R1]Ik5@4-LBd(GBpQdKga<DkTK8;k4ZWf
%[$t2h9cOT=+<"3sB-Cm%s"LThA.5[$ia@3W+aQ&-Rj&>[%RndOQ#f,'`Qe5h!_/:/7he*jRY9%p&3Ze:']"nF-uNX=JCVU#OmJit
%T%Q1\47VeSF>383f`?%J"BnHs2,k8K)$MelW1di62"Ps"N-&ebe\.IAZFm+1X2?e/e<]eE_YKdn-f6G1BfWC8:(Y:>JNKBSBgo:L
%\;"^c=MgGk2ifd^f[N5#R+B\PC7(;_J9!>\3"+1B:SJ\imMW*tmAN4-pPX8<,>D$$`G^d#I>$h;iZo.90Zp2L!b3L5S&NaKN_,9G
%5gN[Z2UVenAu4knpH8Z.Q*FjLF(rl`Kluet#.^"jZ)ut>c@A2eO^p3O2OhbkQ%=d0<-"QS8VBa'@BSbdF-,"\pS*`IpbB\C*L20M
%cmq\EOsm4;Q,,Vo"ncM_e?@d(aLjn^'F'NW61LQ\6P)%T9'X_3CKs(#IPC<.)._I2]rKW2QT1[u4b]&]'MiSGX^Pgf2"DcPg,;kY
%eK2YlRo[RF&'Y$p+7kV'[e0(BKea,h:QO#ZU-gS8`Zbp;6R1QH%`8R7R'TX]I6)lXrQ,>Y]W5Pej,nG]=pid(O&9"GG>smZD8/0+
%p2Fi3ZecMjgX7pc\t*iL;!>BpX4Xd"?%&u!@#EsKKDSlNqD`I/Qg&rrBr**`qlh/6Zo*SNk9`PDiU4RTnrJq/mG%(Keb.Ia]p_Ge
%BEX2OE5%c-JQe22"_2dgBr^uhl?_.:Qk"Iog!9TLm_<*m5P9KLmsXp0>!0LQf!#@lQ60k3IpU>&WNd7OJBRgjA=:tN2bZ%l&j/"N
%3u+9mU[bL[IN&/NS_oqJj-LhJ"WhZdi\Q%Oi@dk#=Iab\kg*2XjlJ)W%%iObhk"TA0*o%L)-n*r@CGL$)1>>0kZ<Q!iO9i)O?1d^
%Kg0ok(<?@3Mn)FHY^\KmT5ca\fG31h+\Sj6U[$+'$?7lqH+>i53AA)L\=V/6-V%"mch6do&UeThLP7W:e-KM>g0)!J4K2:M^#>fa
%`Q^bGdA)am>J%Y<E&cb)m%9`X6;$=<P_[=SdhIoh-W>)n,AET_lcdQ%lqEipmnI,ck%I951qU9K:emm"#LbO0^R;7>>gLmBRapf:
%\lgp#bNL#)rVUa:[e9@[a02E/Z*(hg]D`_@?e+h%Vn;,g\,6($qu?=dID5Z-]RTeAT'.5fhlEi]H?Su\pA+-j>M2fTC:I,=doKMf
%BJks?Gu<cpot/!:YgU!BI9lfSS]i?(s+\d`BghqDZj)Pm.IiLZrVZ=%0n/5UdEdY4pr06r-#M+=A5"NH'!]oW3fg1;V5pG*pW1kP
%U*oO&^;B5dB)6+gm,dQegq*MLj/kuqQ'\(<Xi&,eZW!uP\ob6m1d+'ObNKKjVimB?*S*'(<RYk5T/rB69n.'ScCTJlkah\D[Y]L6
%b4?JrDF^J&3[n)TA-s<AIm^;.a:udSg2XAA+]G=J3\FGYA.$<T4"aPZA-t&eG=&A:b$S60Kc"SAOYe_!jE?q<C;?AEWpqa#)R;:l
%j8ZE`+iBi8s0ARH?FuoOIp(9_eXTha&2af]'F<u4A<mpK7n<;<7U9m$qWkeCdC8Ps423;$f)AV0bad+h@J`pV3&5h--^Xd#8"ZOM
%7Vq,Wj#\s>?,,(K$;1;Njb8pDE_qls<H2P/f\5_*-1;g<#fYm6>p5rWHFF,G,5TTsa\mk!(0`Fn(T'DK1&m=h22=CD7WhnhN+eX\
%I\5"(LY/)]105pB>r6+F4/+B8PYk%oA\@GCSZm/"MADQE#D*3H6S*uVA(oC3=L`!38NE%h0+%kqk#`m[*HCh=BdsKMJcb9"BQ]u7
%MH4#PHIhAH2PL7F^mQ5M<qpg%d79!5/HjSgCC0aO^$3]n'A//FE]fV[Fg"F/&8eOlDU'<q&A?nk)_"Z_.Z42PqP/VBZR2lrC9NK"
%5F:V=Pd]GkHuJ4N4KNU!)XkRLYse&3Z!WEG5"7($Z\oD[lB$L)-N'gU]ed"<JKOQ1,iOQ-mp0,n'(^0YpV$9FU6"?pmJ3uI?UM*X
%=sWED]*/]\cR)<I^uRGF"OcQPG"HF<EZ:fq_T];BT>+`bnt!H!"RGV')?8BYBi)>D#/_`9a/Q'q2JprKGOUlg-X<%TQB"/jq_'0@
%Zn*$Uak0NRXueON[:e>9N<%qlRs>YIJ_eHL&1XT%L_U<U:bK`FJ>tF8r4"!M&Ko:u?D""l90/Y%B6Fj2gQXoae'D"K+?3]CO.5:X
%%LY3*70!W)1j8p6La,l:+2_f@'^-\!<$*/qZ&c,AdEH)4KVpak)6*a`Mj"^76WHiu@j0t3o*lCI\<-6(-_V7_&]j?,0@0_/PLmk-
%E7&`uEQH0'Y6(B)ejft$c.H,f+%:Ba/:pq[9P,BOKd?OD(YFjRe-Ap'ADkL1];RTa,s(8LgrnjVcjN)pEBo[!ULQd?LXT<dBCEOW
%l]p+Lj!1u+qOc!RD=uc6UChuoZl#\%X_YR'!K(8gZB%nQ7qOl8,rA:gB7IQS/.m>plpGQ4+\;_L@TjEQ0q+_&'%=kF`lDu9Rbk-)
%8fqt-[MeDH80pM&[%b>i``em#KLm-MU6\[%7#MnGcJ&r+Lrbbt\gC,)8CF0*"Gi=a;H`2>\HHbKm@N#0[Br.[EOtp7W[R4J/'cb3
%b4Uh'h],Ep1WP?Da0tDLXR4DsW#ITOEq*UJ8f;]Ym[o^ZHMgSp/m%J\JhiF^DkFfEjD(E#elG<VlkR9dVQL]u)rs)3=O6+oCO3E9
%AKY-R[HC0QkP>"geCS7>"ep:]nSg3a.r?5rC-m''4K*W6leAR4le@F?k[AmDV*&sU'm+q!Ih//cOcN-5X$=Lr\70U2QT'6.ik8]o
%`Ht/o$OpBK,K;rE!E,sU<iZ<9``GlnM_!)-$*da=WRJ8D`l_>e]u7.+5Q?1`pCIAZ*k'`HI+]^W@XDlqLlFPeRc/$H[2eE.OXfS+
%rQQ>>gj9$4fH6)t6`",Ua[XO:HPHr&XaaM)`u9k`)i[m/%I]O[X2sST/>"D[?)I;Hp",Q./n=G8_e\+hmk$3;%GpPT=7<#5Jss<l
%H>&L!U?:)mQ[La?d)i[1WLt1bMVi5Aa^!ql\iCU/f(tkG9u#@`*N!3$FCgBA\M.Xn<J1#2k1U5mh-&M6RoFZ_+*P3<&mtN$IiaZO
%cQBl8_68ccQ0$"&SDBP=.d5`WOTu[ck+rb!^=mu5;HqD`UXMQoin?W=]#>c3j`&^R`YT]Yj$M4]of777YP$i*?*3hhXZGG`^TG*3
%fH5lA,Ju=$mU<)=F6RH2M_DJ2#;4n>D/FRJL5cjQ4(X84@_8+*s'm)I^XtUB%aQOs^@6JU/jA)[I@esdKpq`'5<`HL(&N%1rl;4?
%NU))^hn&g8]B0&2r?)'NI^a3>h1fdq+#[:]DS#fcijZPmiU..gXdA)>D]dM:[i`AVT<@)Nl(6hAj3<R9eS=hH\%I,\DbkNed@@R:
%HCZ)dZb,lC1VN/O9C&1i5KEeX8^+s-pD3bUe6MMCj(l$cWpTR'r3]#/IT,!NFmE6*B(rcUXo#8Z*puojL?k.Rg[?cZRcB\SfClf?
%9U-UP/SgYa8)#tsmCI1k2gHXr8SVbJL[SMuII]uarN\ljR814lenmq+4SiJGT'dHf6dp1I`mMr;B:6>"5?u+7I/^<fkm"=jf,^cj
%4/Uk?1(6C;4uI[uf<H?2[V0L%`.Tjf:W'6A=4W>u^[\%0QVHAUMtDj;3qT0/H=c",C$hd3Q8OF]3U-C`GKd@,djCD4e#1kZ::F#[
%IHlc[CqFM/Y),>jbplr36fV:O:(Zp+4Wc2^n/am4eMY+ro=VBnl?LFUb(`Q.]']@;o.WVZ8#oM<?/MIpc*C&B_AH&$fD&QE3h[mq
%CtQ>DhdY06:+NS#^MIX#I7lY03?H2J*.ic\EKcD)e796B2&Y"gb-oDj[Z%NT(oFt0)uQF*$[9,"[N#]kd<[?I/UpACEchO$:VGq9
%Y%jZP(]^2k)J)RN0SBHl@s1o+EU]FbQ;-2A!'E*L)S\bD]'d^fY/QUR#m,j!8X&>:-Gg-R=G?'CJ:L+fkF$e.YL*jLW$WR3*c7?`
%QX/JrTU:BDSo6FWI%;VQA'u^?e0O\W%GH.q@VR&#nhaFG-JBrij<g@F\IO+(&.5rP`j"q=9u&]l<ON2BU4"BTo4cT/:BrHUmBI(7
%l3%cZB`RFOs1V&4dt&sF:1lkj/puqM@CVA)#q,3k%7TIc]Hp\,&aB"+3^jtVe"C'6Al<P*@A46R1/%bSn&VG\rLT^N3&4N;2e_?f
%NMB,312'YC,)YLrZ=u5UGY.Yo>gWkB:C."*[sEMV[XEO\,HmSM1<L)Q_dTfm>),c:TH,R&)?H-O@p+&=NeN%jm5pcR$/M:Ld:=2E
%_A#JsP"qW/-=Gc\+gAM6cRUS=Vir7=,Cn8?54=3.d?-7ZTWO6,mh5U2:hU@J@#IcUBaPWQW,!FTc8N12lA?o]#K&1KNb-D\\mYu+
%d-,Q_Nh_k_d5?`GR'[U>JrZn"]P+#n[#ICG#VCml3(sTVBTs(FFKR;#$Kl-#2V^I0p[RtCkstKp_SZ4&0rNjjO))BIB+"^JB6h-?
%-K2CKJHkrdD6jO6&BuBna=_gmRTP=l'[CnsTj%X%MdCUq*;J/X(Ka4t6Wcl,==:a.HD!!#9d)@)Ae:!V]Z\7f!q=[MGt/=[189H?
%0lYtX2!OYu+3]`lAV-9do\?:rrP:g6qD_JC[HS\+VVn0.JJK2HK'5b99O_]X%%I-iF%a39N*`+<W@dXgSD\_'gia=u)@^BE-?tbD
%n-/hF'*E5;0I\2ENXr:h;jTZb)Bl0AJ_/;6Lu9f_<JO,+3JaK[D?s;g8.ihj\JabaF9jH)Cc7DT$X3^RB*d:+"NP'<8iTW&&OiC*
%NBg%T'sHUnG_V`;_G1b7L(M;DmL\eJNXu]SDiZjXK3^:s8C2nj!]d^*`'c9=85j/iRLA-gD6H\j&[J4-Q/?Sk$"qlo_'IMQC1G@d
%H+#>iJ6FfjGRfjKO65Z<e;4^YWe2<QKR?2OM,>,FUk;VQ<VD:?H]BP._"VXbDrLtuk;u""(cAV?#Z4&)!XX@Y$V9M5#cFF\-b?+K
%8(o@XGDnjrB#_rbgO],cjHT^_"3e,F`2^A--L<hhS4FY@)$=_>j8h-L91\IAkU^H["DHtG6%<4;kn5bLOK7+_aAqC5_T4)-dOJ"F
%CKP\Eko:6q=HM\sf.d`#n7Z&;kC=D8Xk/R6?9s3)%WnY*AI4R)?/eG'*^DY)@2.YioK%/ceq>tRJ8uZcRn.AF4ATX^V\,](!1^tj
%9]k_'8R8cp)3&7h\:T<m5t?)#3((!1Bj58Ic5fD7O0?.s3<L7YQk)/;jBCQ`RUI_08`WBS"SV*HP-dS99eZ@WV-^OQ1o=FW0rns$
%.3(Cbb!cRY/9^iVdZG^\:1Ar"a:BOf0SRRZ>',hN/W!@Nn)/lJ<$4AM,*H]ZNTk)5Lj#7?ae_XXZj/u<P[s")?L`r>jsUhiVG[AZ
%(CcF4KW#d&#j0A5WCb.3)tGR((KuW5K8(hKQfKJd,[>Z?@-Le,8"4@bBYc.8+XK7Gr<LR2=R)K\-=V3lA^Ldl2R>'##,-kVc*T2P
%Yf2:6VWeXVFIXU5dD<:`AeFl3fOVKW"-SLsjVVC1";9J?V9.2R-(5/L-=JI1A4>kk,V59#ORI=M))c=BHDAlDEuKuBVPUPJ8D=<1
%Xs1H6iHgSEl0oW',]Ng3!6,")-!8S`89FD&;hKla$"kGQ&d0f@'E,rt>0?K%#achFgMpnu53X@]YaL:LbQKPW$7,<F!s>i`m[F7n
%,*-Cn6.((A.;Th>+K0%dO>o^@"+lZ\e;]\/RXr\BW3@cR'l=GE7iVsOEqDgNceM&=*?o'/TM1_'*=e[-/tdlV6jM1!Ho'3."7Ng_
%RilY]p0"XIRguaNfk;ng%M?6BGBCJgfcZs>`XSA]q*\R`PBG9GRG&W/#(EAc=BfY+=L4H,[*.0,l4trQ&Fh]RFA*Cq0@<%Skq'/(
%a##$ce4,YL>[F<OB/\HJq$TNrE6VQBECege6I`Tr%8jC)UBbW[4R.Kf>^P"#<'J`?XXQ;SfNObUXhVqll4tFkKN.a)#pC7M8VRN#
%)[-gf-$8ju<RS,piZ<#jMPM+FWCX?B,X'j+M-ud)XfDo5RRDu$KB\.E3dS%&Ye+(;FPp><35o'FiC`C$/?fsOk_*dW$E:-^5pOOl
%H98/R\rrFS==8K8<1pZ%>%J<an/uq$+>'hO&2,5Zk.Abu@LE>_IK[sZ1/ea)#S'93btm;$Q$1CZTYep[LbDpMa`ua8Y)@oBm`Bje
%UUC17=7C.#))UQS`[X`VopE\aFBFi,@,,0*LO]S#J2Uc`8Vr18B+_+O/0M$%V8n@#@s.r#Q#,XY)N^!,^pJ_'-hTnU<lo#?.hukW
%+b5]hhp'^`_H!jhGh??$H3>kscka'gdfB"a_45?a-Cn`^!g$2UK#Nu"KES*m1%:%i=:A5$Rj?V]"?4N%LWmi=0/Ps,[A:dh7=b+a
%5N&Fr:D4-T9qir%+Lr<s)RcWMKa=/dHKn]NX#+A()@U4,+S_k0"ot)(01P*d-kI>b82+NdfECqBNKKGj@c6GO6WnLeQ&1:;-Z:1d
%3!'XTT9eXH`d3Z_e!KHR('e!!j=rr23rc5%!*F6r=["WMP]QurdTJ7@][-s:"tt'B(a9g+>m@L+1`k+t/f0%>=(X'YL?(ZCI%SAY
%CqW.7FJlpLUSksVd=t%`a>B](3];igN7,XJ+N:)&ZQ[@f$Ye$3_`i0ARtX8'^?ZZh(K*RjOn78G8'2(/"rfBu=s2ju_'&uNB`\<l
%d@F'h@h=n-[ZLc-$Ym3V@3[=D[#=htM12>j"f=ABN<HWS_@h5?s.kkCW]M.\Mesr]!sD3T!:!eH"SSJ;IQ9:Y&EkZ7'E18>&bDlS
%eM-Ggo0=NNqMZXqRAe4ClhK@P-X7c-KO<_F2WL.m"6]r25i!3?o5u/cR[C6Z`,'%k$&Z0M=IE8N*Ln0c![[P&Z'U>+7O"I7-l]H$
%2$XmlU(5Zr%$sAI7D\0T/41k1CkNq51UQ#68(Z`:4^3:D.59s>N1i=Qs"l$*NIil6@glkk;eOI><,8bCM:FSg^t8^5=DtF;"W70/
%l,iW1E?Y!V%"/7_*@06U@H/Lpp.&Wq?XpDSZk@&/5Yu3HX9;%GTtkJsB2TCnVHEqeD9Lp%LKVF$fu@^;%RUbQV6VKuKc0:k?O?+[
%,uf\(nHl-52;,9(:cdPS@967'.8_aA@#ZpPMb(0e1O'6441dp@b$sH[ZKFMUGSGM.m4mUPmFb>,D%K!>/aWorO+5>Z\i.;n`7H\K
%IS]>$YTWcX61gf-I.PKOS2#->"PtAdA&K9P&D%'R4f+5Y@b.k&oUa%+JdmdJ5(St:bQk@_la)3Gl8/3KVgT(MNg_&t"Elk)6QJ)S
%!O52\LG%mA6NT`RM-I(<P$!E8iRN"&h)g2HbCKQ@L#Q8H^^b8oSJDGG*S+dfi?&5DicRSgCU0Uf`TXD.&a^\^+EhR`pIIM)$'Bb[
%TZP&+L]`_kA&nkbaq/='D??O-O#dOt2e1;GT04Yn?nNfU<#l+1QtJ)YS?f'GD?+9++$pSZ`^Z=r$)%c)k=)Im(&(0*isf3$!q$N)
%Z@!j^BHh"m=eKUF`u1aKG1cld,lO`]l.cY(0Hm"Fr7-G(_cpY%R0Q2sa**,=K@("-ek@B.:_VeP>ITG7=DEUJjn(Bsj]^ZbZ9<1k
%3+D8Q>=;YZ.r$MiaE!#Cdp["t]SRsSAh57S@_$=0`En@I(tq)l,VoE8OZ^W#S6cA2K3dbsM.o7'E!&Hb<.#/#?N/LfTn-AVJM*B"
%3AH2;Nl/JE.7Y>!Ak1Idd/E+3Bp;RC2P?msYbPFpad-Fl:+T@9M_kkZqLrcoE_oHgPCNksP.HL)5i3\P,C**Za0>,lfnpIZ+tKfF
%$G=9":pq,gDa!tPfJSEF0[E=q#IEM/k"OOWj\=hB,GsMl7`3YIPRgdufRdqJ$%o.FVB6_J4U2TZRWZ(&kdmXE/fd#_q0&XkR]o1/
%26^b.0'tEB9pCh:1Z9m-BrfVp/$C@jL?/Ri$[tt,'7gJ3KoX3V@LsDX"6`Ba$dh_=e1@Pp*ZQ_I)T;Ugd^"8]d@u'N[tD@/=JT1!
%V9:i9o%Ea@^b13I/2JtXH:B"b3JP$J"n<aQ3jpC;.-]%"^<*C'78Bo/Fqdl!72OX=_rYZQn\BVah&e5%/=tKt8I>&-mk)&+pa+`p
%*YngZ@BeHq5V?R00.Co#/jpZ;'s,(@#%96._(DE2Fd!A<%%f^G*RnU-6(p2B<mNplgoNV:OHXXfg%qa:;#lS6/S4g%i)bQ8@B^l7
%a9:6.73@S=%qoN=36Oi4i1LbN0Oa.PD<4Cm#aoEXki4+Eg4jGM4Oj!3ekTW1p'pQSZ(W*<QU^V:5:$kUg`^j.FY.F@,2+YMKC1iM
%J#:9uC`MCY5Tl^G=sC#OU*/;I`=(Al#Z/???ntT5?tkGV_*31;@qeJ1VF_nj#I\*rAabGm[ULK3IOq+T0O_8g%@5#"AqWgu@SE``
%ggg:;&Uj2"(>h83gjORgV@^XSIhhj,fsOJCNqQV.$,iZGKB9uuOi;kt%,NSZrpL`$6l<itMF@d&KLZ,>(L?BMZqht#M[RQ]>`L8-
%,oO+0+cAno*&d0V@J>gsWfSJ20Q&(,aan4.INt?3YV],iXFGml)NI"j\fPu[;cLo)"b2sN,okbuAu2:2Q30X]Ah',fU4mt3JCpKf
%o,reVJQ[MQ5d9c\.!":a1)0`)UF:-pPW<#0.E.)LkFPCtVtjtnr`csSZp>fhiSXT0KTg'\_L0@33\g-mBpbc8l>69=n[B>0DI"GH
%m,#/'!;t^egKeCR6;/F*V8*RX1#jFbR(d]:%b!5<d>64,<DXP_mg($e)ed/2<NJQ3,ta4FA#(+Z``YZ_$fI\f0J6hWaq,"o">9&Y
%kl^3D!.a:3I!PdTaUV;Q1+b&L^88n81g3GJKT2Y"CmBZJ?ItFr!Cdi[fq>JO_$<0R92i2L,'?.\,4)b_L(`-j9OI^D3XM,WX(oQV
%D%!ToKHUIlnVWaoi(cXV`ctNkCce@!r+@_?[WTUp`fo'D!Pof4-TR,K*"G@j(c2fFK-)@H(`%o%E'VbLi-^@PN41&;0s5K..U;$u
%ajq_*gX9VrZJY%:!nC$,Ose[-if2'_FQN0#S0=9;k/JSU":Wp-fZts@At$:roi?A,-%([._C5Shp&h?.Bf]gQg!)pQmIJa2GJ4^T
%BIGp:XK;5hG^jf<)0r*^9F@):E5E;7Xo(\N[*@5A4H>)K6gNeEYJBD@rbtRl^_#&3?:p'=,m:P[4,@k^9Go+I,>LXC$u@IIYoCKc
%!ZnNrG)-oD@`3G,'qjQu@Xs=Ap[GpH(FGqVeh^!(ilVn?'a6Fo3fti+@=PB;KN\_I-4RDtDYB1G.L]'NO,\DR!DK'JR\Pf%%?dE-
%(jL1`"V/Z)h^[^&(-RbOHQ\[5ij91;1a6d_oo^W%^[sS"SChBTemXX_L\K4EZL38"O>a0pO\5VOO81Gk+Q]pj8*<WV!"d]LEF]]!
%YO23"2PA0="FN9:UP"2`D)o&*%PUTp:.lVs+RKeV\)#;X>_prh_Kkfl@V7aVMF_*;-j]YX8&^/qe+O@Y7uYTBp'^!&Tp+`Y:QOc*
%Rd`XY"Xu5j(f*aN64YfLK:23=Bu!(V1sp:S>Ns4(&4uqR#[i4c$\<;RN-!oj6p,EO6osZ`FY0=*!2s\&ljG2V=<&>R:M;P(:+^Y?
%6JHN@?\DV@Nl2,Gk_$5nX;3-_KX*e9'hU98;?q@M3g/<@p68FknQ?**C(JFK!)+*W"hB>9"GGj7S.`(Lg/EiTVNV@:$)qn]S/!g_
%q%2mUNq1RW-ECY^;=\*>&r]@ZZjpk5Ig]id"=W@^0=p>F@Hk$(E:>"0fK,3*DD_hu>!ZE@,#21GLoo$F`HjjF1j<.*c:Z$$863MB
%(5,U'</>VL->\qM.,%BjL/?0uP3ZmmTZ";N:;F>3Y(udnp:EtR</Hi=Tg2#ek[7NJjGJ&tT:/AHF^`7n`*/i)1L*uhbR-$DJT8;0
%TZT`-Jn(8"?5K]aB1W=i#p4kZO>]!R^n].ODCu>)())H9;(9bD8EX_ahgtI%iWF<H'UihCVN^7ZHjorBZk4t`fX0kXN3<:<*8+R%
%**"1_8_:BGXI0?-Fjsk4W!ki0@ESsP$j[q!j64E`iX3PW45;,>C;-JX?nO>J_87U;Z,pG$fHoDaK?A3!/D3'S"ABJ\Nm8?WQ/,sq
%\Z'6JdjP"=AQ!E@d20\,`#+-+$4KW]=:X_o$R"3j/$Mti/j)4gg8)NH;Q=fZ/0,r$WD3:ZLGMd4]\.U#HFk$QnLa+84Bo<6q)qE<
%nHY;ANj7'X+i=Sfj#(g%4>.Cr!(6Oc:Vl%AF,GUh+D1cd6.4+&mDBRq=NVJqO\,g=XkgNA`Y4me"[M*92AfJN7s6][2^G%ZA2.n1
%AI8U]UrMHu_<!4%Pi1Nojj:p&k49LE;F"(k8tkLtC'UlV=l8CLFKhQtk`Vjs!NE:CS4aAn0GA+p/D@L>E$N1,WA9b`1]2mIN/.p0
%Ai):d1I>!PTKs2&R*+WMa>iIl,9+SZTj[J%i<9ub*+:K+HY5CU9m(PE>1m"d$(YJ.#bBnh'MY]9k_/FIV@u'tTbHE'+V`lOR83O7
%:2ll&cj@d_,onEDR'1<%.PjFI`L,j+1+HMf5jho^fk,f.OBU$`)Jq=J''9BM['LO;;f.p;"+`YBKA!cCZ:d9j/;.3bDkP]%U_h*6
%ZshTI*+0T67:*MC08W75NR"i3*Kafg,94omRc"L(j)&N&5V<mP5\ZU,eKO'H;8bSm(G4id4:JSW^]hZoi[IdW9TeXL=8<BB%_aAe
%Z[`C`OW;Ok)%K2I7uArk.=kZ1^ltLJ$:B[NM'tC&HP&1oKfK83Cm4U5FP'=IZ4]EY"X<8`Ej6kF@='DQa!=t:86Qc`&PMY;NJ#f<
%O:kc?jD;EOC[-V/8t3["c8BhRT51]h&@<RDo>.kXYL<OQArNrq+VhAf'$RD0<7_T-dHY/q@?Ip.;NHb?Tb0ijAUm%JZB=(`XhHB]
%'?i8V"f9b9'H3?_"A-uDK+DG5O:ObhXpC=96j.\NQId+5g=%4J_l1lWJVSJ^BN_LU,/4Y$VQUiD/^Ygp'KPMu0f7"5'VWTY&K%3n
%r%2@pHtChc*H`>B\C9+L#)fe'9lSeGAEjFRG,<<Bn99&lOC6,H_L,s<UFVfML,:-QgHaQ-r,'N^TflQ,-'-)d]:e?h?U?Lg&fTc!
%g#VO>`3c0[/4F@iE\nVLn.LM.P/)W&*W!u:--Df_F9)JlL/E1./2@6^aG#]diRe/dfIHf%a]`FA=ENU]?`5LI2HSBjU1#\J6ds"m
%ahh((o28FP862hS5lU>BpT^r6ZdI/t_,"`"'Tpif_s9El[),#*WPEX5Gh=LAQFjTtmif2.m#=Os1M"A"MMNUJUF&<`_+7bI:m'3@
%p(:np"p@6:[P<RSG[)9,Q9YUKFS04CFRe\U>?JEeIM$"`OR41OR=[^I&sfm9F*=C6qlRre'#iOTo2UH-9d)D<Lag4ZaBZ.WEt.(n
%.>P3lc8bh+a1!85Len6?,EB`*$o#(P_.!ko+jtn6?A6sm<p0t)^P8Y"!>([*RSo6Dnit4D0!]S&;NP!(9?,rD&?8m'04YA8p+[ZM
%?+>Ja&2?HlHprRArC"__EnIroDo0NIk_U%!`-S_?_.N@j74c-lX`a>0ZF'c](QH<b!Z;l"+L'*2gm\1j/n>;^7P,cK>@-sTUdkQP
%q$6pO$8fs7<m\dZ1tXpra$fVKC_32Trkr2@9C*%0TLu_#aSjI8$4L*,2l@u[4#hpNmdC)dSKfscn<]SQP%'kfm2rbCMld"$#8Mqd
%==b,gcUt=AcBRg?BOPA<d$/*nK0n6H!Iu<h!!BJdJgc;FOobO8(08\;TA^$.#^/gOgI$Y/#T&4Gdl*292]L*t_)m?8Tke8Wi18h"
%ODHW]/=V78aR!;@R_X.[gGidoH8LFA]$*lWQfP:jUQ%h@6E3(""\'((5oLjc'#tNlN0>hQ"Q'Z_[pV#R05/Z_Tf",9.7\P^'>6^!
%\*2+620?hV"LpE0Mm5`Z"4JMUOn"BA#0&Gd7C=k1>*:oI@cp8q9,oDU?2<B7hq0#F.8nr2$/Q)Eo"&!/12GRAkZVS8>UdUBED<j(
%'"E\CJe2;g:H9@(*32oQLd]CuFef?@lEp&.i%*7XUc64dCBOnVSeq=V%*fQ^<W/>[!HE^]5\t!TYD1>Ri`hK:E]ekEQEVr26Gd0g
%G(TnTBS+hicM@qo!ZE#"FV`d.8E^\3$$]Z6&o?u)mM[H:lDgumm?Aj,6]!s[]UobUm9l!-2DZJ!Au&"`32j`Ub5WFU;;kg>kYgi-
%eH"*qiGoP@`u.]Lp"LqM4MpM;P*ag^DU<,mNp;;t_.,(G7!KK1Fd:g_EX%AF&ksSC\R*9@;R)!:BrF<]El9$0Ol\97o\^=:ZON<C
%eD^Le=Nb/t&/nfl3=68nY2P8kQ%N42W.GdsZ%WtC*bPSY3M%ZO/hm@5E2#;#GUg&H@)"7N=_=*#Z7M`44Drm$aOP:+]T=cJRLe]d
%o#H_dA:n<Y2[mWl[7`m2OW.tUeI[DlHkPoegX=Kd*du*LS90K$e!@PpK5Dj8nP?mHJTf*+r1ZXcXoj5[9KkNLmr_UPT`%3[.D*hF
%6m0?2"1TSL`g"U/n<q2HD`O]Y$g_Rb3=^dJ9Zc.H'aesI$snr/gu'n]_f=e*E8DM.K-$s=aJC_T^19ceL(k8nK>j)hW6LL`ZOQ'E
%C)`8!6>/Y?*N+HbK-pR$kl%7']+V=T>VK0d05Kkd]Rn4(O,a),7\EigGWpKee7(sP@Qh4NBeXA]#AA"IOQ5)hXu%U+5tB8]!#aO4
%9suSb0gf@W#VVuRED(9#XWX'%X6C?[B>_!SBM%RIUVPBec%+"L5d6*>&m6\DpMW685"]/OTk9(U%Z`B8B@q#DbKtLDr"HPnQ@FNc
%`,'/LHk`AS]9'Hd2bb`hU^'L.o#?sRU4aFGZK(;[iCLcF,!$Vl%g.o+"UErT!ZoJo-T3uY6HpUji?/q+q=B!d?qKNoIlVqX@QQO`
%!bEitV4Y@jhUFhd3Ub#^C!e8oFYK*W`+lT[$<Fs&$#X=TP\V1'"AKj*'l^UnR]>ph,;($`/gP7+77tH\aA]-D<C^I%UF-9c+m%7N
%?SIiAVTlq6,k?6sULrGIG7h^80jmQMQ1utoTjc\f)&iF9SIq;i/Ru-$8maH<#0nkGD4J??>=;n\Mkmo)g!Mdn*V!NR*sSj/2</I!
%hB_-Mo#2[gL,;M.9`C@"Of+5L.]LN&$/f`a:,iKA`HmPj5hnAp/V]C&B1PV'<D\2n;7Rtgru>5GBp&ud5qYteCgZ`Ts%.o3"7FRl
%<ai^O:5-@#.4gN84n5/%%=mIH>qSViiYaghrYEo=dMXSO(\$s>*Ls(J:,,N*q+&[#4p'&U*A!ufcpVq$bQOC_G%7(S.+Q6;hqoX%
%3F]P.Q0'Lo3+$CM.dP!(<9]=l@Cm_1UK(dh>e#31M$up+\tf$21PghE.hY@SZE>sU+Jek(8`BeC4@^a8'4Zo/.\&i]%>8o8:r(`\
%KfV+UgKt5i@8QhkQ6jo[Y3Dt'F!b@g9]_sITfO<lXsqQG,]9uB!W])HRjQ+f&/ssAp'A^FPTj<9?a?M.GI`YMFi!$)ON420P0&un
%GT**4.a\]EjQJ@/T;*KM>Je*cq$neEeA8,ZrYWW[-5*E76_o'.LR*oR,\33DUX5\?Z\"jfegYRE3:$uC_?hA,T=be9!MuG.b$WC%
%f]0rVLb'kD^]_TnV;mLo;R;#9*dCqEX2RoS"C\C>V1MnXD@e(Ze$M8,:$Pg.=c@J`%T!tdLcNeV\@cs[AsGoS.jMC$4!ek4DuSP@
%-2J#C;rfd`RU,=mg6ZMVn.riYBh4/AN%>95iR1VuUd8ES1n4a[L).3;5gXTu5"?okhhndqg*gb[pQ-R,@F`prh\OI6;S+KJ.g$6\
%33lUgn_cqf%e`Js]sFq3V+p);%Ou&+-7bd@7.",-i^?*+3@P=#\>BB`Ea0GOS/J&q8lRaSGcimb^`A(np4$14kH][20eB+SdfYS'
%*l*l)BS^N:=KAFKQ@LD/F?Lc.gZ8n63Q`2fAW7G_%T9]j"fRT?oulX%&CJarB-*Pa@?<ku"FF*r%8&]`5Ciq0s,pbR<tfGKKMjn'
%`Ahd,Pr<B/ro6X:NRYmtNuf#E=DibhO[D8lZ%b&T_@.@oBo,RrMutH;@B'SA?"+)iYc&MBic7S'APYMAJQ#Eb0W07E#OB/rbq=Jp
%NBo-met!qR,8u[M'+Ga@[QS>h.LepQ2aIrci5(\:9=h.H=<^V/IS%6`C)(u:&421p7!acRb%2s-/l$!b:nV*Vpj0qM'":">UKpBI
%EU!P%c:q,+"0W6Q%;$=b&B:W^.eG6W)n7rU,QZC-U.=JOR\XI6Ir"<6>>+&`4&B'g7/2grOMRg3/B"2;/og$^b70nP8<MAi3:4MH
%<3$bQa+LX'>l'nVG97RNZWAgola7Y^>63TeEEM_eWQ0@jBf"Uec8P0`^C\'0!kaksRO,!K\-T(a;Z9,G5t[@R._J;7%pR!bHif!p
%=mSa#?7r?peg2.hocQRm`>D`D1f84((k$h.HJ!7MfE6jg9<]dF\E6/2g^9+[@$$HodZLYH;'88ebFFaJ-/O"nYqe>&m_u`QqF+4!
%7T6Pm/69$F*\%!G"Mt)AB,;iu7I<RiL#X\lk:9D`9e%3rosDN-#^6TZ\RmpF_J22Z#Z\5eRj6<6#hD6SLCc_I1kW9i8I.D9*]gS=
%n-qSed%35"Z:MiI@gB-=Wqkq!q5i9N&KcraDMS`jSL(WFe/>>O"],/!*qu%IdXl>&AR?_W+kl-W=rBce*EF?N8E<epH;M7O6\J[O
%^r++=K-m_n]lmB,_Vu8?*%e61L&?/6J5KC5"Wh"OR3`J0+=H1![\]6$eQ:%1>C#'G8%jiGFfm(gU>5NnbNLFO!(ASLEp*:sT"M!,
%`p((*Y%7".)'CMgA7AWfA@]O7,]K<qCFYh[p2j#GErlu(.pk=,.Mu,MHqi&j@3Z'Y,R)%CVh@HCjEaW3:P1''VAQW=437Yrc0kl/
%;7'rWd>=&W'9AMC_WK#e%THYFq#O&3@*H&47B6/Pj`#FJDZ84OWbkGkFAXY6(7<12[5EfLp6[QJcZT@eS.:/Oo9Ma8=UJ`L57`V2
%7ImB)hBGNB6O4LKM8GNf>=p3WQLU(p2,T9O7VjAd>#J7haUG769P-se=h0-=]SP;-W"k>=T8(A")]0:IUd-%?dOb2mY1Rpp+(=0r
%g1r"n/:u\3s08ASi#`];lYm+n[okE3)c68d@>42%6Gur;!Cq5n_aef5;Qm#0c19ucZB4%'l7RS(`?,T2/NV&)EZafAg,642ALlX[
%FC0#H>0JpJ1\b0dS6UVclt`U<,uTN:M%<U>XfF/9)/MHVXfsH"%V;Pk8F]b0FR0.U:8H7iaCA%tF?\$;c;3r=V7=*8HNf86h2/-/
%e"MjEhVr5DYJEdY*7q8b=kuT1CT)T?V:AQ;V5jc^f;?]n9*tX;=XMZ"nd=sQoH<HmLJ/-]kIX?\O#/"H9$/DJ>#EVJ4(WU8UhA62
%UiCa5^Q)jROU)-:->)Z@m$T-,e$3@"^+)i--.WCA,</!>i#;hn?\4hVR$)K2]%HKN5aThsYs)+i?mjd&e/nUf4X=kIe['L1Hj<+K
%NTmu$\]-I!]>e$a>Uq:!@$29q,jAQ]^_3T^hhEXl\1G@L6JS0e:&KYSLnRIr,4T:%0=2W9S&?:)f3@&hP\t(3'ZK@0e57.*,IU6M
%eS*r'"\8/1B?B>E3iHtLSO%^emF8(q3;*IrncN9=9hSVG&cCcn@Prc-OUXK#"$DcLOGdjeS3[VSJu^dP?:L4'emX%?XcCjYTPAJG
%#0W^r!O#>M)n9J^;1+`R*&3j+7+Q#&.i>hP-\GlJ5(_SKaedle?f?r5$0["u7.R*MWm4,Z6*rrrjhs&03uGVG"nBX3*lnC.>#>XU
%O`HDH"IJ_l]$c6@KQ3`P(r)"(79`cDiS759+sKXZPTuL@P;Y!@,fs'*e\#krQjB?KJ1n)M*17JR\6?"q.il.M:mD,WY#hGm,HQ-m
%eF1nOM]9/U=-MS=*R0g[fr-hX\_lc=1O0!ZU=QOb>Wie<!&qKh%%W6jB&*'1<gjF9X%]=4H"pAl:m/i:XYU6b5c^Sr8E+hROdfQ<
%WCt0P'=bP#=uDODj5N22YfR[;ChooZNPS#7(tefl:(:7GV1MQ&`NuC<g%nD+??F2s&`H\?rhBCJ$POMh3_E&P#^rrs(9;>-1jDDE
%E/9Y907f<&EnUtc;U?\3g/,6q\[Nh$,2HSgqFW/hbVp:[f3\'QGA-!sCimbq#V+,bQ'#p%+Ujt@)(:P^_,Et%]I`JsMllpnRjBW8
%L+oHaZ6;)K/6oNt$$DQ:8V%_:S`H0/0*o[NlRKT:lTTBU+P%c[eh)+iIK!,Ceg;%sWiD\PKQ;pM0n!93$..`U&;:-Z.O:I1Q,&4S
%i/8S">V-637)^;\F,Xm*2$$_?^uFXW2SZ%D?LaAZMA7h=`Ig?`@B*Wd*2>bK5X\_-M*uMWP#Er;*Pg>R^j7X2L)[fO.2$3f%!Z>[
%e%rAe8J?Kj\)H.7W9<G[FLWpS%gnSr"q<1ZTH1MZMgIG`*=7K\!Kq[/P)(#0bQj5q_rV"5g$EHA<?84k`>>Du;'?uHdPX."ct5q\
%UrGgF.)Zfu='(RD`Y(0sJ>,TF0>q/n*g';)eT\OM[EdVQodt&uiD_#8\V*$4L@49#fKon,gdK%R<bd0F#!sMAKOa(No.U!@OX6aV
%EXdX'egd"OEQepWd"nl9B_(7:SA"/0ViY3WW)-s(oGckY8GP=a6+EWrU?/6:(3Ba"\[`2"7%cFah[dUi"i!<a!%1,i-Uh;V%V'+(
%L?d)RX\Y&,We1MM8%1tUi,sVoY%e-mWmOZY^3)>M&e;`@-hmT'*,[28+r::PRRB;+9HZ;\@56G4LCsd'cesomL+#CnrN7?7;dJ#:
%X,pLAM9?f3>]2KR^GbSB2(J[6/cqlNlOgd%QOI,2blf2%@(Q+e]",[+M`GGSgZ&pjW,cYS_a2b"9t>IF09tjq5ZXcl1SgfSS&TGm
%:]nSr_QrNt6p;]e`:uc;P7Nfb,j(6qL>$sVn.%gDKT"e=)q0tek77%`fsZnb,[>L0R\3VC`S$I8#hbA(pRJU!8Msq$;n**:8Ld@F
%>[X?>[kfX&e'VCufr=nqfkL<LFB/CM7406I`,V&W*DtUD!gp,-f7E_&'2GbFQFQOZ=`_,$Qk;aQ6,('t*J`^u\c+-h+hcE&&uk%C
%["k?@jY"dj#0O65-%8PI368dS72A4P9%M-^"<YU&\fh>>WWKmf2F*0pLn&0n.RmZocpGC^pJa/%f+qN9dXqVS@%S]iMjPYf8l5#t
%+Q0J[!l).`OshmB.'ngYWJ:X+cF4)jP,q`"F#*&mK9rfK,@J3FSRfDL?i4E4kbsU9]#&_Qk!M,3&TV3;O1OEV8"IS?8b]JL]p/m:
%U=*"X%*46JX]@(H&=^"9>Z"?XNBrr?*\qT!`=M="</uX2gp9S%ZJ!r?nc`#SMV"Q)!_NpkeR]fZ*$YdGSuKjHZT<n-=buu\<0S+^
%G,u%gG=%%&)`<ArisN]U'uP4sL/7"Vr8+a^Idbn`4YMKa4X<hcpFPtC^XmnmpJ/Mhi7e7V:VlbB0EmIBPKr;l_o?8)h0`L]cPMo2
%JJ0N7^gbDg$7[8D9f>uBs.(sbO]>9e:`#R:j%:)tZ4fPW$?i63<9:mH:>ttp*_1f,4OWS^.\$os9\O!'NGIO'h5lmZ.$Ks@<d0d9
%Mr@TBg/;pQPtsS9*1:?AHqE\J7NM[/r]nT9``beF9?iVL^4t,E6c^u`^(o5cp]-m'0If=*(*9\SN`0MG'j%#bp'B$7&d]kn3P[Bu
%f@B()"m3TF#K;t32FT0T+\lj1''D'PE?.^3Up)AmD3j[T+@JA(1\b0Eh7/8Z3I$j2PND44%Cq;%;_S\P9"W@UK$DLJ3DU8sV<a'b
%1^ItaO`33`'`uQ:-T=XlAV<.>6tA_[#b'PHb/u\8>Hm3-5*s#N1aF=cgU1%Y5CA7#k.4G4_3:f8Y(0(N([.D:C+a-S>,ekbaCmC9
%K=H.A!=@lH[<PDH$TE#+X6;MHjd'0,F2BIs7n#g6j?I76&\*+N9-$@.L-_"^f*sK(34.+6Q5E04>SRLO`&p*&m**ld<Vi8G/1fX$
%4,U.S)V5(A:h9jj*=0,CS;iG;n[0+Yagd?BA0oJ,mTkO_#htaj.j4qVDa[&F=5&A%g<_+.>1Jn8Tj>C0OqA?n'*b8'H2r(eg4sRF
%N,'h0m(-Z4oTa&)jc'!^4Z;_](R8[lPk;"_6@f].Zo0h1R2hY!Y)+VsHn?m._.[ZTXdO#*J`X_4P0bUgb?'hsSM;&,E@K]CUsn-!
%&1#Fs<c[!%THcnBL&m)tq!b#1iaFb+!5=eTYMf"`f!aOp7uhLh-$@IF3Iu%'>l1'bLtZHSn3m2W-<98Gp@e)oE3N3Sd0<&2CiqfX
%f7jObdc>-P84B[0(j=i#P?+%oOk$-X?phSra-B6E).`]sDhJqE,G<)@]>\RqUf*cF0T&9K[IS(!kh7"A_"DsQ2t3M25m@X?`\fh_
%HG`5;30/tE*QD\6K5bDU!P(@FOhjulOaLddN+n+&(/kYYm7%+=^,V<0*^ZACY2b.BM-?8TCVKcSkm;$4SV!=^fUGf9X-/KqouIJ.
%YK,obgoida\*7P)rm8K!"D`oJQWDdJSeV,n?/U81L'Zp"fDT3k.;hY.pG?GGKQ9%ui*V3#bsf\s=)"8;3Y`I8nF=W;Od$>6;@7Q1
%88kbaJFkqUNWb'ki7<ETT5sEc=)b)Z#/DBM2R!_IJ.`-OXUPLq4"C'E+cmi.LfFA=,EbeBR0.2qU%.,iNRXore-,3oY[XC[aUOt)
%lG6aLm'eZ.(-roVG3HFIUOCR1+W$o2j+;IbHjJ=fLQ2a*FBmHUa2S))hRiI7O_!(Smg%3hi8]@gG%Y@@gJ@CK!!scqA.*:e*Xh>?
%<%qGf=sY*cmn\=@bfI36[9/bJ<i[kf+S;gEY.R6JR$TPJ0`/Tl(MCJi(Y0L)iPM=[/mPbh\0.\r'eY`]<T0[r>N)=F]#@fiPmd,E
%WcHLY<A*R=E`!pD/lKHL/ojoDEc&;6L"-$"]5[#Q[0s*]eLjJ/eLncNUtS9'=7)_gV$ds3\TUiRg-q6*<4`]QJVk6u80H,7:G=lY
%*_hc3F[a3MFfoDbX.iH4=#A(%U+pC^1h*RccqoL/'K#A\cqkV,"c`)GTJ:<f%2Hlfd.!N)5pOXTTL"C:MFQD:NLh1k1m[rX7AH-H
%BUhNo\tgM#@$NRoW+_E$cq*b/coCnTBWP5$JqbnOJd.'hqgo$,)7^"kTiBAM\<pV_CTV>A;DBG#@o_Q&h*@B+,CQrU%1@&]+B?UO
%-=fLBY#\%[:5%i<@B*W/J;s:k?NftI.*X0N#AUhjpJg-3L5!-DHW"&sD'jZUN,4;^+f13a&\gWQ,oq//Prd,YRn+2lmJR)4C!tt?
%ih(a$%nc<N\7GQ&fUF`2&*ah;5CK=D2u[$Xn@G+*1b)Z?qq+s<*?aco>&K(i3aE.?/S@lcBt7g)>,7u0HBFL'eq5Ra3!I_DY6t2U
%3SeRb(17!0[Fn_`<k9rr7AlJH;N)0h"L]]i4%FXtEF^X`f8SmfR^$)(<&<Z%C;pku;9ekYW4KIO4-j$Ap_9]K5=EIaDIRHqVZ@,l
%6#g%'C.6]X.f@<$cN3FHFN.r\s(>g)`sd5$WPYH/+0GPrrg_QSo>@[0"5"$8$9^`5joQ9GBkEsV,b4Sd)&.Y'A=nl\bO>qI@hJsm
%19A:h2KK4E6A(^EPmE.cW`")\`i+]SM35RO0rn6J7>Xl]">COn!8`!5$:>:t(_UbDMK$Z'\Dj0Qngqs-[DFc>&Bib$hb$8j?3u;9
%_UQh`R2j%cb#$";A&qb?^6sQ\r=k4lkme\"O4>$HAqY;(]&Q$UN1l>b&d=&i'sX[7`<;O*TX49rq`Dm,/XuK)BOW'2FNbo_]p2!^
%#&94rIVujq$$0lhs2.W'U`fl60EVQk??W@j9U&VnpI*\9^\a6XIGN0,aA8b?pr\f\K.6EW-VTrA_]:7tn]!J`9l`WH<C\k!*EDsr
%6-`Qg=Xr/fF4*ee&#Bsd=U_BKR6"tr25Jm;eo?t!,-lW;P^?Toi!@*+OqMq5"]I5sH-Dg=TFAKf&;2-,G"jH5Uk47Af0a&G8>DBu
%RoU^]ZCS##Z;ES+S_PEJ7J4Bq"Zm*7dVM$i=I<MI6)DBrcXC8S%fSh!S#!0-09<4&P7,NNZsq/Q,N3RA`PaX1KA>l,(@7iX)(:o)
%ft]U@.ngSk^]lBr/+423e]N',/Qb?ZagDM$"c@g[2&]PSjNAk)2O.J00-5MoB@E[uh=Uj=dQD^72t-'M?2[5O:ZqhZn*Oaehe,pG
%B2mcL7eL%Qn6$q@*ic?OOC97;<[TOdYQ]4b";bjA'hX["#LFb4:4ZACd'P"Mo/2$=Cmp>JK41JGpWc\agjFe:\TAVoJR!gI!k-%%
%&^eZm4Dl4#TREc/G,.-E$'h<UJucSLG'POe`YL3Rb4'X)GW9i(E61bH"6M=_pf$0=>"_;8+6"ZG)4ef';uAAq0$&jR;BjJ^4Es4_
%IDcC<44Got5LF-'5`<f4lGTN6,]]G$Y.GF;GuZ3?6ZTW`e#aD[-?30*qkpNn;\u@=Vb6NoQc)_h;4"#^W)et6Bd\2EW`Q*p/R4[=
%74oI*?BtH_JO1RG5kM\P5^++C<+',eDN0N>:%juG=/WB$N/Vh<U%8m*YOPg8H](!*#R7kA\u`D^8Z*h?\XO3mjtbn/Gq]kKW]#(%
%TUJ5G-QFE%q5Gj#3OT%n!O;R"Y$sroQVZHKS6+<kO9t5F](G*^C\jcmp)Z)h<L]Sm5FA/WX"Qo\fJT`Dbbtq,>D@83fJ:sYV]g#g
%)Tib;UYK(.M^]9[>JDI4'r+>a![,I"A)8J:Tp`g-M'/qf]>55TJA/*`M[`3!$!n<'k%<"<N5.c%Ak[#5kNHc$<N_lJ.PMf(_Gt$P
%]XMH8`%:9RLr)"?;^Yg+e1.j#53r:'ieA/a'M*Mb])[,QC(QN5EMEG"Ue3Utf_'ho'=/+a:Kq/WM^cp;HjmOlNhL#&m:S!eW>O&_
%]%a(6(gUrj@oP=PU%?DZ[->.dUUeEbl8<)KbYmJ2q\7!X6[&)>&cgk340$,Jg*VkO=28HN<#ZLuG>B\@7Krr[E!nAi<&BhDaL=9W
%4#Uq/UWU#GqI'8n>I6,j4e'_e6U85T]P4"4<FSp`CNaO-8ak::X]c-I]eX]JjM7ThCUj(L^0'agV\i)E/aN>OW7@jPTr7RVZ3+o;
%bY41+m/A->a^:gkqCI;/T$i5ui2@Qo_HZj<<R4N[k]76P`YP6eH2uCF9BmQB;4o'ri01hYj/MPeEbgdu%il_MhPDTV4!9+g6fC<h
%(;Olu>LfmFh/ldr?V\n;:U^E@YnA';G(+][E*\@A!<8\p:^h241NjKJi0J_KY[ifRG]OtU7sY3]*>@?qXF4b&8</&`e%s-!6Fs7-
%SrpM1j1!g:Q6BRgdS*VPXgAP[?573]Jaknq$lhNiT'SKEXi3pEOWGaDWuFe+:^R3YjP+E$fMpb@ASXEh3K2$.I7k<S#=3#;r&XK9
%4Z'5W?:I1+jMn;Jdo=.@VcSU<A%hgue$e\.g(FI4bG[_=N2dAHRp!ZEW9F^$^P6!^L,(_+\"dYPO[RIGS*LuXROjNYKm[,k(%?2d
%BOSilUl6_TTV)aONP(`&8FfaQf?/h&3Pdl1F)GK>.bl^#Q;PP2(el@o!?1#+GSA"=Buh8W$n_K8D6m[@W=3GAQK@W'9maZh7Ij>2
%JG09-/.ck2"UA8`VP=e?3(4f<SEf)V2:/C@>umUaAjH-+fgMNEA59UIN/T-?,lUfU^+;"+227n8TqQ1m!@)JKM%%:'N=m0^c6=?@
%1j]`m",BBo1f2#!a9HXDFDrR!;B18Y?rrG8!Cdgt$Y".@V?t)-CNsg;O"dFU>DuITi*7"sM*-]*P@u*r,iUD16pVbV%?plOrm3j]
%m4GH6C*uUMZ"0%9;L9S%,noMSlPu$i?k\UW2qA11BA@M78^Ad)U?7eNoLLs/kCnlI;&VeFbq<WR?!`@4Bs7j5D'BHJNM@$kOAXs4
%'^;n0pd+8HTn#tp..cu?,Z(MuT$/1qO/'Mrj.ZqoiRZ6cCB::ciVZ/n@i;d'>M::":Mbu?082[BcirII;*;e>`kJZc&WAc-K97:W
%d)8GWjM_PhGmT@bDO)GgY<TSjTFY+9R^'fn8kkFm:bMs#E&9mHRa2`frc`H^N$ITmi[ECBE3![kd883]Fh7l?CSDj;m%N4SPDk%4
%BN4mVMAjS5.d&QKr=/%jh.`5W2NKYg?dTm4A33IQ-19\8.T'2GiCa0@%O6"$4!%;^-K:P,-O>G.LT=f2V2rZ=l,DQXX'/M`7-9(_
%QeX1>MBOhB>c->]<pKk:[45Xap[gM'h)7+Ol7LT"d<oiN'U-j5LZ(]k3=BEE^kC+&`X[62ht`5B1VT&$&$Egc.?=-tFW601lA*t6
%/;JHa[o4:J"F,+34f#4O]!^:D[g1Q`]788tMO/g<(I3KGorii;[r:,NrNH7pe[$*]d8s\iqs#:'q9+9dl;tas].^qpc'tncqd7*c
%qc/<uG:-!9Iei`qI/Dq!q0r";^]3H^Dnl;Bc%#Wb07WTJ0>I<@IXAa&ja[<qb;UL_q[[%`os`iVk&8!0V`.t2hf8\km?bTdpA'j,
%H&P7Ks3IluoBebls'^EOe^sinchdpuZi'!9q3MU&H$]'8YQ)rKrVGFF7E9BPG50GkT>(0agTQ)'`BI>F]D)mY5PBSTk@<t&`q.7M
%:NmoG+27[?QZ)ok,QIZb$(D`<=qQ9$e-[Uf@"Ch!XT%_cF$K[N;ZBU#ELc%R4eS7pR3gIB#_=_%YUln.)m<1'UR4t;&A3)=^M0)i
%gM57g8n'2/1o39;jGb8!.(mG:Q57UYD]j:j+3E5./p\<M.^YY's4G-[=CY7^e2$I54`E=NX_=\p[Fr\u^/Wki]N^IA]=(p`IIIHH
%M?hY%)VO'GQh!_S=[/MZ]qK6+log:[Hp0T!r-VB*DA=^0Hf">f?BbhCI1>_X`boO>G2NkkDeH\A`)U06r*bX!X1rn.Y1)3(cS$2(
%qW7,4XoiU'&1>):d_A``>5uABZqoJhHp5:4LB\H#kZYfPc3=t#\nP*26i3hdLQr'D0u.D/,D?/`d"2[>^X,2ehLLN]=t5s@eJTeZ
%Q4Z9b>&l*KC7.=[=gp%7!t*YO$iUKWfA%cP?nsO]nfIPbKR-Pl,s5FI?//e[P:1MS6I<UN1/*i-'ku7To=k+N0TFSH`JaqgGXW)<
%:eF)'#;2,kS@(@jcKt85$\\A1#F2C!*,r@s'R_XFq:VtT)Eb.bF0XOT'R1*19PfWjbp'K&BC!d@J\f+4%Z&1Tl>V<O>+?T1\M)^?
%dJu:oXQ5d4dh?K6os.peGh0Vpis9sYH._"e*2aV2-Spe"gajQ,LDWPG_61lO#8ft,60?L0+obnTAW62t)1b#W/\S'EHL%E993R#>
%1nFtVQ3,a(kX^a]@^EAHS.k*r27Jr"]d;90=DMR#79Dm!].;?JKU,IZTnN`X=4Y;W*B&c'RP@D:#lO8O[f81C+t2f."&mu4P_`k2
%d$.LR&%L*QAr1gPfkSUJaY_"\7_-2oJ>K5eKtU>]<FMnb-glp[ZdSe_7jF]n^:XrbED>&d?CHbW\G`ZI,p;DT@[1tb.0]S>#W/Y9
%>IU?[0oSKYa\!\_kcofKikpQMC_OS4-9ejr^R%Zjf*;Yt+(,b?7)J)1g!@DaRn.\=GWNdClEo<o2V^n<SgK6qU'MW.nOsrmNDMYt
%e@03A8lK5r("OKp;IPV98a=ojn"qj[n&lTD_QW5KIA97mcR150*a.l7XEo]8DqOGU,,T826]U/jcNI_^?l"KUj5ag`&9Imh"lp99
%D1J#l>mD`1?@3^>5"*E]Uf`MVWKB'YL5[6eP,SNVUsYqY6ap-oo!VG#c*f1$qb7aN,tep,^&0g=,'H-:f.&NC>&Dqk'QR!:?.R&Z
%.5lY]ps"OW#Z[j9*%X,Le+,ItXs:'d]2OdN\^A*g=PN(n"C>%/qmj.;2p/;>m,gboG)?W@fsjZ5%pOUj6NT3k,:?K`f1)`.Hc6kV
%.WMAB\*L-X.=UcjT.Tr\/:4TTI58u@"*OK3$K=Fr/iD8PZ,-E4[-U+U3ohn:-hPt%hW_7nN=%%59`Lb38V&o-APNVE#*u(C1VbS9
%OJ*!mc#H'XQk:tnVG)5O>fP!.O.`%O'cj2<i``2C"?StN0GYF;_<dK#'\u),e7C[9_,(X/4?uVrQ#Nt*d0=S_Mag>uOG'i/;ZhC0
%-/O>4V\]S;-R;?9aJNm/RUr<Bj].pkK&k]YT)5pk;sit7-._=F?IjRl2mBiZBQ",=@VBd_)b,,Ci,a:,I**Oh[0Om(C0*%<BT]bF
%/OMOsJj:,_42NkAh<mZT*^0Su(GV]oaPQWl)@WX(=2EH@/]"beahl/8LjX)s>s,b(<J\UXUU11h2>mE;Fr:mGp`X.-[oVOeCXWjG
%=u1ZAh0$b;\5f%fj".>,p>BXLS,5F7,Hpfpmn?j=OrL2H6!\jrpY4J)[AM"T$2Yu`cNH1lio*d:\IgHGCDiur/W`OqG*(6Ti8rq5
%8D+=Z)&1UaV"Y^2k/?]$qemU`!Zq!Z4XjFo_`Tce8m#6<WQu1sEn0ijTOed19+/-3aWWSp=PREHM3Zmb/-H+?`ViI)Gqp\\2iB"n
%*[O5lF\J!4d[ZmQYW,UVjKRTb&LIi%Gnj5+mXW5MIXnU'<55F/C2*,3G:5hW6i30XC=35F_N^?!]dF.YPWC79HNM6pNkA,"`5nXT
%]lRQ4_MV.uM\J[jVf7YS0>YWqT(Ob`P!Whb^;#Er*JaTB.?SG_Qlk<IT:lql6S.J*07NspqBNU2[O#4A?4mFbR`FU1d'EQ#J1rkn
%)_E-XNED4o1\3aOR5s0&;,Z4<OQ)!/IZI+o)<,sBC50d=&GjN2Fh0J4c-]!,/JrokN9L*VS6#'.`uS?Q`s\'K9iR;jdgAfF\<eP9
%k#U1RM9lr'1hPQDD#EWkU:&sr_nFnIIjs>[M>MC?4m;NABb)[Yn[Ohm.T"h(&scD\gnnM<WkZaGW54:Sqd,<AGC^BMd_#ZlbXNsK
%AD`.W/a1am0j-KMB63$'Y?kck29A%l'0f=H5>lW$Ds=BD*9OM3!=u0dBnWeGSG8%c?!g[2Snae2$k?al.%31;GGn-&G!%T4^\W7T
%O=@S+OVDKkK6skq:M'-bb)B1gkg#W]G&EZr#\3M<W/;M,%8-1V7JWJlZei`ln1Z9tapR(>#cS8Gjj=Jgg!%3"SU&KOmhBqV\cYp@
%K&?Obk2Ooh@oS0n[`>-JjC@PEV(SY[[7D<>:WJ%T>ZrjXXiR&I-)sIWGA*QTRk&D?2L"?%,"<+b>o-O?cMam?`<t0J`Y*Ej+VkkV
%Q,.!r,t(u!7FW@R8UFDsbg7*6cbM)?GtC6LIRTFkdY!rl/Qp/T.Y/:SK;V_ndu+J*Z>[&9LYV98Dgh/3U/En\P&M`L8i2X-gC!J8
%;HKk*O?X"cEb8puVFI:<;hj'[F8]-`GpuMKJgm19G;C>'GA/l;8ZMYI]'-??nj[:ALW)$LRJ`dM\R]VFn3sqF@TAV@NKU@Yj:u=8
%<2o.kgfD;LK@b7!.P`-Kp`3ap[c%NRDB>L:*W;Wfp[c9];Q-0&Yc:g&eie8i@VI"]Xm-luIrk_3f_bF.FKCj[7"k0;.RDK6/"G.p
%8A_]*R7Cm\3A+WU-bV.^RT0CF`383pV[&mNSqOQ?Djk;IB+#:QDssDhKg",V@RA,)Xoq<A#lN7UEm)L=rOV:5]Yk[dQ`SLN]kB'=
%!hI`s3bR!\6ko@Y\SW&[qVUgsrsKKN793\U7dL!i(.c<8cr,^9r8K^on<t$rH&(KWOo_lV]5[,hLl/ZK$k`,d.eXB:O8<NI,r1<*
%I@`"XHq^=E2;*6iDtVb=MJ&5J'go(d#M,9aUUX..5u_![l:i=$H^(u?[E@#@SV,;*9^*\+Xe()Dljt(SO!$BC$.Z4FU.LBK$3b<f
%mq7haqhM_0FKj\%CD^oiR[sseORTJY\@&/,[?9"E[Ct7R<cl@C:^u-_43KS5L4!SCAN0,J_P1+SU8hl-XhIs[n``L(p#qTe%mU`7
%d\Hb[L[Dk?DN<pti?m.h$71#>62[H'JCajRjDMtP#nZL@q%m1nE`G.r2-rI\bLH4LOsQ&oBgPL?fU>Q*YZA'Me,0>!B7NF9rYaAs
%=S+CFH`;564LQZgk?7("H0LPbRUMjQ9ln)Y<RLdpm#$2mAn_S<k8=\q]]?tLnABVH9:/(fi-F+aE#Fr16;d<,Ytat1:Z_S(IaYFn
%fDjm[9`W^ZV*rk"*@'72/hDiAY>7JrrOIeh6^6ki3a12f]rruZ<kZ[0iEk)Y/\?S&ns"SBBjacOZ?Ts!(N)8#Suj1G9[8a2$&#_V
%A2V=]N:ZG.Qn2\i5%(917?CpbJ+C"7BfeVkL7tloe)ijjRqU*F.FP)!m.n$UAflaHQc!,C;'];93mE;Oj`nR6.XNr;'[[GZnboJ6
%)U2pXfl)d*Q*bH_*keN@8Nd%:O82`K!'FT:[4K?3U(P!DFQq$]$g`%opm.cZ/>lMG%eYhuO;jDXL@Ut:Y^B*T/_+%154N>-dl#^/
%<i)'n"pZ/PTm3s(H*I=`,V7(.(d"k7Lf49@na1d$iV(=+dIlA78%4'c.gm[]G)N'UPW[\h:`$cd,':F4#AKT2Ba7&?6kkijX\d=c
%jP(f<QYqJ(DYMRNpVWCb&><ik'gKSJb+Nu-K#>@i8D":_UK0H/Zi]C'dB5WR>4.ebL`l+`4)*1C4)!>G-P=1X]:B19/976eH,[0K
%k_Z`9j@_U>"_Q1m(6QA5TtT7_6%AGr40?jl9s'0GeZ^@!)%I`RBuq3m1",`8(fB[%5@4&kqC:R4FPH(ZX?)S,P[[c-XBU/mCGN!I
%o25ln<OR0=RX^o.D,2X&CqbT&f]pn%+3=-):5dh"64d<6<H<Gl:K1+hb$t5Eb?2/-QB$F+Q]AeQ\/6c;IKZ0_9d&S"$.E"Ac2d0U
%fN^`P*Ui"*iVN`M.-dMU"G!*#;VYC$dru'\Nk>&E[[5iB9-N52$_$cL,p_P=,BL01,(&fJ36-%-E4ie/PeL3JQ/cO(pPr/9+*-`F
%\4oOc$Mr9A`A#4ZQi5"6eZuttaKgt94WH^T7k/fNSu&b#5BSk9\Y;_qcgY&QN,m/@W0h'7/ff7SER1M(\u@LSf'\jB7RHK*%FID*
%AM-D!N?R(0;0&Y5'ar/S%SI0M^ZkBad;(1L.'D('j]7fhB%Q$t%rVE;WTTn;=KsCM#I+r<;;LP&+KuFQ;Mj(\WjaOrUFH68H-1VY
%b#?BJ5=8_'1tB_!CTZEB<2FrZPCW$FprB#g+5SZ6KtUs][_6]F9,&;<K$ISe"I4'6fp]F!d7T8J_7a+Gs/oGP4ltWOJjB#U/:VP'
%0<c9&M0lQ;bg/OiZ,F4VDfbAa7K,MEb3jr:rHVt?s)!O<kOn@L<4LQ.XO`:Q\e3,;\q3"lFHf3W9U+.W?@?RL[V5EFS=3O2r^.O%
%rC6u%g44EeDa=!Kro9nfs%1iA_gO7hMjg+WG]1&CW*EP'gKTb_2!mO8cL*pHe#2lDNgXsr:UT&n1Krcl;:T'<h9BF]!WK?tRo=c2
%pBp)s9d7H7E-ZCL!e6NB5Vn0SCoBDeg,k2EL[,7U"EZbXZ?,C"25gO^%e@HtB=$=T)9-8:=biul+fYmQLA:,"@t:kKmVeY:Mn$NT
%ekckE1@SLENm*`,VTW^Q8(8u;(8J'\C\'P,+pe)q7NbH>3%J*#Mhhcn_BXhc\,O;9gn^')bou[6cMc_\NN(J*kqk3.^/s'i#>S>b
%(>FI#O\X0nE8G>NF#4UGp,XD"BTme*erUV+D4TFq\rrrI7U!B:FOcnCLPAIYIJpQ\hI4'j7gB"X`u=mS-+HiR(G4FMU/t8%VNp^I
%LR*>jBKW9.$nb%7DF]N64]m-EY-k?6<@!GcL!g?WLq@NKUuAEJ##\uN'\5%o;WNmVlg7K\Xj9JqpG!"YR&C^Vp13eI*_CWG<QDpC
%RVHO&3l-[iIG:F@YQ='JrutS!%L)A:er4Cbj097aOLb*4d,aWRi3QUT_#Omll5C@+O64R5Q<md.FV/qAa5q),'HXH[a)J_&9<:?&
%'>,/^5;ia8>,tCCFKJ77EZRNMnIk6:8<rbooi4hs&cn]W.j?`bmTlfj&q/6'=FZ04HZ`@=JS(^PeQ'(QcA,=O&>J`,Vk6o#+JRls
%pc2$<WJI4%U?tM#4<sEU0=]m^XXX:,<mksYnP3Y2_$mH,5<Ust&=s,G"SCYe,S^^6ghR[$&+r<Pr?JWS-?RXZEN%Q_.,0$p0kQD!
%pm>m\1bl>YMdKAFQh9m\cP_nk/.4bif(0m/,FcYF9?MX\8\shPfT]'i1jHNN"9h]+Hjef$82;thL8sfg;:`,LBX^);SPPt*5d&7@
%i/Y!O5&DKYAZ$J2f,.qkWA#VmR;kX.<n""hV3>MWEetm1c"k5AR`#B`;Ukg"Q^4tK`t7YfDsoc+TZ)0i'QeWik7:^FJsCG,^;e3K
%bLAg*g^iBW>?c+(48JhUr:Hnp(&t5bC\bS@O]F[m=G\VFZ<V1RN)ji3iVPh\`*Ph\bM_n[b@.^:[i3PX<S"AlL;a]/mCT)?nZEJ4
%,cC]M6:@WhFW((a/8J-O<4=:fpMV.9@2&O>e$a%,6q$-c6bjMpi&V9X,t0/jLTXU[gCH]9mM+$Nf.BM=Y?c*ub=M4kGLSsU=&UqU
%au);m+tYt(d3Q\Ps#N>X]g`et7JYO]-[G.SI>"qd_Lac2hF(8r3=7SPY>R*ZP='K4Nli`N")iA$WFmKKTN;'tQhqinjc=h]9-LHp
%Fl4ZsSk;g%1WN_>`kI:W^3!>]`GZ^rZ>^'$c'MHa#Va&H;h*5S^>?#D*rRMT=FD-07F26TN)E6=<Lrph#FB*7Ii";H"IEm`8SKb?
%cP_aVVk!mYnE09&54S5P5F`t:2ZWO>DfNWSa=(5l3#<hPP\_Ip%u[FQ1=4"^*B?iJ;q)o)0&KU`q%EJmbL##PEaAQd=FQ8u&'pL6
%+*hR9`Od>q5u75^MkVRJ.rkcGr*?ri[r$1<'p*O2ogHp23W46k+8ceUgAC-92_4`@SlH`*gkGkc8s1tY):Vs-/.r7+OiaSQ)H6tu
%<ij3b-h7gD3Q3YqfTB@Lgh/,bU4dKCf(m/Ypt\H,hPY`=pU.TAHYqf(XPmPQe>t=P'V9)eUHa*pYksW3ik(EpA't9?c"s5g6o7BU
%QUk']>=7iF8CJI8od]WG;LlM""5W12+FK=3oF#$pR-t3a:'g?#1=jZ4[Ugk<)^7$s71tWK4$Ah`JGLl^QfU&c3jqAjK3,%9k45VI
%1nr'5pR%T&_#NK$kG]HXq_#oh^`Bkn'G=j4?Of(IV$$m7a,cOkHO89lX;VZtMC42='@PA?>XmK,ZS@'g<$V1N%JR!LnGZ_kmcX2E
%*prZo$ac:&N,_BR_Qp2T3q4KG]6E"QqoJ\nl;X(r6tCgtpYE!f#8_iqKAfW)4gTt,NFb)O5,X/u30Tlo&NnPH:5:;D\E<W1`m[;X
%D]9`OF4f6257Iodl$JZ$`A,u3ZQ].^,:RAbr8Df\O)FL\@r17#kON\^!2BX$@fjl:<UAqgngcith7"GJGNRfkW(aGP!l:fZp6S[l
%U$B5'_Z2-`;5@li^jPbC%/si@]d6M`6bt7>)lN*e4u(0(nGmNkOnPZfgtERW5Js'&);0mg4c6uO3h^0aQ'"/2`YnfmK?md2id0:6
%q,+h0pG9q05[h@/;;GkAHODD*FJdWpPKAGMX9k:p&Mms09RuHS(p&Qu+X!2gjg'E,0G@4%ATM`Mk/r9Y-M9egNalRJ`&qsRR1AGj
%[5+1qD2V``$8L,hB9$_(Q;@>7J\J>P^Z"SYE$IDEQnm.k]"B5$e#k8gP7"u'[s^^IlGGh#Z6)>C4c`dOMVQr'[f(`/[Qm3o!o7ZV
%@X/lD5cl_].d>?EK5h3#bd%7g'WB;fVe]Vm?R3XF9UppHAA7CQkmCM]+OCqbr4o;5L3RlfO_[hN4^"9^K56L)AQlA+jKQ5pPH'/-
%AVMb@1=#+Iki`I;bII\H$%i9$G[f0#IZ)K$2IN?n,X=)?UIghm\fjN]&i[Co-f:D_jLXX,lY/r`33U]*>*QF=12>VR7^]!%a>-._
%_];9V:2`IlcV@>roYkTpgYrAfj.SZ;6)%X*$6AIMe.tF"a*Anp%a,.KS;L\\4N7:^?keqe&Mj(nEW(Im?FRZl*qK!U4J]`PF[K1K
%,WHn:L`i6SU#Qu($A(-'VM(YA&Y=bt-EmAHMoIME]li.BW!#]1K(m?J@rA8O$nH4?FI[^MN!%TBkTQgpL?<l,P^Y\F-R%j6KO/2d
%YaR5-L7XV;V@&Z"5F@;Q-H8di"-V!'`]K$JBmEXV;r#FG,>Vi`Zq'VE9F1HA>Y+-T>$ss\90i#0eJQf,jjD#50j8bgORI=F6D]X'
%"m^kpUZH.Jn@O?B$8jh,2A)!IigQ=NW2D#kBBmf2YCbBO_UY*<[4Kc><pLrB:cr7Xe<]n?CB/Z\H!nJ58RAL'9`DJFN,B[G=i7Me
%ch./eHPuK_/?=<Ple.p79Y0iTQat=5MZ-B?rSgc,YCU!#]7g>m'!CK_3A`K0Hm!2/Xs#LP8Q.M!R%O.2m&m7!VE/!BZM[&NKdP1[
%GHe6tO9C#H&XS,kdKJX*FE,7+L5lh`_"j)ER4cB=QU?<'+\&Y*QM(./;h(>)Q]XKCi@ENDnJX6mE=ln$Zf;SNqdW\95b_;DlXfOG
%/HsB-dI+/)9p;pW9cVgWi@!4J5FN"Ak02ZRHMqe,11<UqY1q@,n\n"1p>$ANKKZ&I`F=sqpQWc8<#@e@]TJ8Vg,_Q.U.IIn)2(SI
%^WFZmp]\\;@tnSgBke>NGmt)Um@bLe.[=/^a*e5PL>-jjh90&\>"Ie]a>cAhWrpGU1>S7pRif!,8GC4)G$p5Y8D*EXEW-V*9R3uI
%4g>(mPG]&[@_*McS%-a3mY&(>m'<E^%Xm79pJ4fV8]'75%\aZt<D@@:7@BR(!$L6.)WEm*,D68i.#$5=T".:j836p&1Jo:5#Ljr!
%Fc,&h$Rm1@6<?cehRmuEVUg'aF:G5V;qAbS3)66VaLO^poA2V:a=^$"G`AiSC0"='q%R:SmWKM:XpoOIX@%nW#_gi"T_Hi#]_XM_
%+[#FT$`>C8QN)*Ka]l5Ohj7sq4/?UM2d.8aFMVpC`$^F1),2HX=lH?t:A"r)l&<KuHX>2>DA:XQ?fN3TWL)ZR"iPIFGZ=_>%&JUG
%UQQ61o%7V5mEP3-nsP_BZO>ofB"+Ai7Z!$`3P\ZSF-jV!10.?VJf_?n\Q+n5Cc`h76^iKpG9'VBQTQtZ8<;IWF-pPeLIWqtglQ?9
%L=GALMZ>gs6e,!l3sXWWe1Z!@PE07Q-;QEK_+Fnf.HJ#Jo"5"R0Zi`*eaAMi*80fKd4ms/4#Tb2;FS"(Ur;C>HIgP&^`%7#*n<ck
%L0nX&*BUsP2aI1LC.mhu\WRB:Bm102:A_D8VEI9,>.kFO8FreBm,bWJ(^\EGKI_:;&lrGg(Rim5RKd1b0Js\4G0,;E.5;SU(39P<
%64GI[UC#>4PU.;GFgogh-'*TZ7s9lMd2lre(/UaT-P'"o9NCTNkO]K.Uan>g[.'NONX_lJ5&K$FLu[!+2Ge;@_B0)6FtFYpi@b!:
%dG!98!->W,-te[*a$;f?fY,aFTR#rfSogm"?bqERaC]_@,>Y_DaQ#e<$XOf$ZR"),L5tTm:%`i^P7=Q)N\;a-<U=;Bj0pFilI?8j
%1lUHs[hPc[AXP3tbgIr)/;7W!^ZE`h,mhreZG/gAN=q1spf4h4(?!*Sl97(+YH_i/j*fg$ju@)L6J%7!G9oc'4leS8n`sUl%f9iq
%>VkjMMW:N4>'6KaClIp%IT;FEV!YEKA!\cJ=M<jB0mp42<t`P"\7;c[Ja]PlmjbaG;N8UcapVVBlQ]o&-&?NYo[P100f<b">Vl5*
%NBGm7a)BH!rQ:_`0SPI3jj8jfi($-WZ9"F1C.cikWsdqumdZRk6tcnL1WP$g)NlF.[u"Z1#Uq-"Haoa^,d6HmE9&a^QuQBQ,`h9c
%(4L\npt._A/26%iLlY9T9*/1\Mb)J`JO:ge]o32?(q3g0#RJbP1EVlEbFp5@D,MKOiOm6F,gRf4A=*d@Hf$h!,VY'!8F]nsn(a\o
%fP(>:1U]t&$CB/&DkoQkOBCN(IX66oEU.I[FM(\?$b:Dcrn>?Q&b86g'GuUXWY7#(]g:5'9'Fq#m5/nMY[==>P`8\<fN]rZ1-[8p
%7V*.=?okGcM)4#G@GEnJBftYL%fb*TlD[F]WN*B]E;lY]WkAGb$p[R(^#JI>%h&k=*V!FXD,tSl^=q04&X8HR=e5L;re+PX*!"e'
%T#KLZIXd9iGB*kbA4ZQUY=&j5<7C>MGG8]D^S;\fmo'T*(Z)a*b])s8\l=O.WAU1DKu_iQX6`5`b8fkgL;9IlVE)Q.;.\\?\8M;^
%4iYa1O>p.&.AS!,bsT?\B8C5jKf+uL[jOSt#;\0^h>5&?0"*N]U3YHgcssh"Y_8/-d^tZ@YhQ:64pOk;iI2%S,N-10&+;2i>lpSn
%9Oo-L=6e<#8F];?#;RI.&rK?ZH=7U`<`,)SGf0eN,uUS367geQ4*eso+r8U8p3b.;*7@[o_p<_7-U0c,`OL-)8S*R"+a^2O-]1RI
%0]eM+C-Y^WcUjK:hXFQ'j\i[kMp_4gj<e8^hZ,b>/G0=,B%R2Fc,fIk.<p/`O)acIBuV+6hD2TdKH!lWVei/t_.<@d[1T'S%3\rP
%pI'9e\mle+(>O9`7b)Y>^ZFhpC<%8Sp-`Y"R$`4"%LsQ8UMh4)W]dh21Ljop^_QG[8q9)M\Rg\Z9-osi&d=lacs@b''C^R5S-!%?
%(\3h)r:8VG[F>Qr?%>C>];0!/U+3K"/PhFGEo6j6ga!BYA*0lO]SlI+'2?^!20SDOUbFFcORTHn86I"j;TPH>kum-/iU)o+@b+im
%5d6G_l1(cR*Fk+l:'jJXG5%UMhrVS%l/ubI_r+XFpLP-J]')l\U*1iRSViFqDA_?"k:X!GfFV%ifq-hMQ]c_e493!Z5e@^6V,71,
%lqTXm)B6N@7"JSdkgQ:Gh%+HH1?fD7"E<,WqN+lpCFj<MG/p`1:+A_E<[__2eT*?3\47rc2`P^qSe-0MGlWt(Va)5WIgU&lC&\kq
%W2J`I_E0maG.mcO2IB6U_-ZE]kcmRu+)]\3015IV5d;]\iK^P2eMCGDr-h@cLQa$]4l<X1L0<9:aiJ&:?7P6!l'9dlp[n5M?gW0=
%K'$KZ.TJZ4!WC8MrBG-8;NDXohsX]NI(uJWQXId("U2k9'1uDi*l&`rUgTsh>Q;0n-ufaqkR:#\c5GOO-MuK63tM5%5jr7+PjT74
%>4M4r-p<>=Ifoi[/t<1IfjS,:'"U-Hp5I]_@oPloILF,q0.WW9Dj<=t>U)6G[F9WVIE$=XEACeZ,/]82F!05`#\;%m._gds\MARX
%&ne$!L0E0L!n,^Y8c@@6P@5bkW\dt;(/dcQ'$FR=Z!$g+WBO2!3c^14lF?W4SCd3Ude\bf-u^`fX_,o"B%2co$[DYnNHB<tKZ._C
%1[@lCXs>MT+#[OqF3[iOVZ<C17T2KP'nnZt_(b(]P`d(^Vsf1nrR`lDbu,_9S6dp#iT@[UpSLV_0a*u2)kcO4HS(<M<oGnZ5<(+&
%HFq$Eih2WoQ3m\j159h=*qQN@KsW8@o^f"X.8aZa5+3j`XAK6D%?i!MaEM(#WZ_3%L<BPDesCBre\:*t;g#gRfOoS'fHq22d]/UM
%<PLnANRZ'N>m?a,jp"286nPZ?(imBZim2N)*cAtH8RbKs3sc?"DfI7t+:U'-Y+_)n2HajHR4-P,XVX@gA<n.,%#l;i%;o5ZaG_CX
%b`+ABiShse(5d4Ic5mF4I&<*-o4U=9ilSp9g`_iJ1#93:QUOf\].UE.?,/a3Lckr)o;o4_d@At%<K!QMWJ2CEk91L0A#&,D)'>\`
%]F%]G\#u8-"SXS/<4N-l7;r8PY6A1M-!fTH_Ll-@\h_+-NkofoZ."m+juX"(a-kX.BOY_7K^6`6P!]pk>m4bNp<[Pun;0f3ApGba
%e3_WkLT;jrV&'aWC@B\Xd`G%AC(:o))\#PS6oC7.puIg5L=$H&<-%_u^no+<TUQFp#b#5(T2+Ag$emna%ah\J]%uJ(7$a3*aG[XH
%`PN>0dJ^q/EY^R=\g8\A^\Fpq.DpJtZA0)i?#oV#CslDJ#1^\p>Z2nJokY:n76b[La/r,/*W_el]ndTra[J$:U@A;m*V5_"kuUGm
%h4d)gUE)ORC82BN8,iXII[)r;*Rm7[jX3KHk.hQ`59sORJMSSY&HEG=CF1XZGR!>-8*L5tI5u/IhD+u)O^MP!qWk6Ai3(RgG0uWo
%/S8EeI`Y,rnt/'M6.UlKZ`FgDkVVGI$EY[6bstFqkn@()eEGSXH#_n6X[YREE2P"I<fkYN#?CdU,m!=)l*F;l]!#F'rVY3H?N\;.
%,)0K)Tb/`p*;PQO^_l@sFEZecaqc@`D?cSg&]oZFDH85l3PC"LDe7N8f2N4/AN&^2"g-4;ZDN;Op8r;.5Q&Do2"((D0>Nlh;6s;\
%72=[jGaA!58KAL!!o1@UcoV@lpfr'f,-#cGmYIr[WB5"TW>lh\SIiGgGSsSYI>q!d];2,P80eJS=Z>$46-N3`m2PF]'9lD?ZS[lE
%ajU@Wn_i*oHi/_f]+<hjl*rJ`rMg9>Sk/+)1f]flEQ2=a-b[uhVja3l;r.mG=IcP^GFDu1>YrfQkY]mpci%1Q"3$?\,NG#mH4On<
%^R/1NUO+*t5VnEeKdj=S[C`:/*!0AgPZD[?L-At`%8IcFbM*R]9o0*\nbChBYa&OJLh]:g94t5^p4*R[j\a'sb&&F3pe2YP7S*?2
%_1&$[W2m3oZ4N7?`h\Zd`*tX`b1V)""TIm2)(I()c5MQ5'JL9e[?B?V8?`[8*<Kp0ItIHt:c6W<RCR&Bfr_,^0E=:7q8X@)TR%4(
%lanSn$+03(LCB5/hIMR1/qW)Zb3%r^kXBFS$mtb@_s:^/l&P9<o.c\_CD@WUJ+AkrN!jff,c!7iN)q"6L$S`^qDdo_ja3u!jiKdJ
%E(rW;1jt0P.&677NhQbWip"oC6X0cg!&`:9SHFri,8f+ThU;[B1c8oB9g.,J-hP)HnK,tpFgNUpitKkX%Q9U8(,4eRV1*rt<i$Xq
%htIX4#-;N_mG-QN48r20n%f["&>;.`E2ROn$(t,NAoV@jL!6o9"0o+O3kJ=5VA-D3C/c?01!k4fNZ;GTX*V8:W507CNqoWuSC,1e
%aE?'R7Ire^E-8+Xn_99kciL$3.5e:orcCb0F3efB-to8_*<KiE0dOX,R#Xr<lPgE%0P(#V%2"=)mFrpVVRt]'[TFnN=p/^&<OKZ8
%*f<-ei((D&fu*%K5QI`DSQ;^B6C=muWe&n<UpPQnEcEq9p/F2/,AZ6j^`;jRl614G5$tM91dYe?nk4/`C6Kk)\cHPIED0B7Kc_d.
%.Qt'rfJc"foNQ$,5:%#OHm_'G=)!37R$'R[)YqAmMu1J9U2Ie5L70tL;98eprA7n9e!]-NCYa?E`$rCk?m7i6>j`-1igh_rQ7gS9
%N?h#3;5@Wb.X9;A!e8:/Q6d"'[L?uW%r@`<'R5G^B"&uM<FV*fZa]4K's+fDZql49V#0,e%GG1uFJeFT_8(eM=4f^oVL3m2UWu$@
%j<aWDS_(,:8)-*^6"^PGq0N<BjZYPISiI[Q"eus3Dl8Z0VB!qNk.qM@IahFDE(98X'f]iA@OJ+)7n"&6&e9NUNX\690_p-9`eV6-
%\3Xjt7FgmE[/@%=UOSk%\"t&"hP\XB,gE(\&GCD68V%X15uR^])0^_W$J%q"],Zc=!nC7?[V3WR8q@uETt:9AXLL5S,-"A[5gJ:H
%KA]iA;kb(f"V$`!(I`M1-MZifpWS,+:MZ?_D[A$KnVAKiPY`kCYsh8RA,,beGFQnT7Zo8.f-t_X>3<b;`)t-k1'NWO#j_9]`=5ir
%n-tpfOaN7-\F,V]j(ZUlD!P*cBh57,3DMDI-FHT(>O'X80>H#sGR0CU^O,mI^9\1pj$r^iIhX9u&1N&iLVMd$RB!j2c;]t(ib9PK
%1:K//"UtLY^mANt(F:qm)Mh,C^6le/c#ejNSmI+3`NEf<^G=D3*DFkf9`"cm0[6lfI+#Q:I:uAlC7R!(OXT=JZ@mKt(m?':3h"=F
%`LA<Y%!8=%=<%BXCj63^,2*OG>+YguDmFFf<L</OHs6j*-Ej/7f:7M>;@O.'\na#Pa3fTk4hOHB(BcI_C5bcf?3c\\:2smi?.!bL
%rIni@%?"C\XS4m!3VIF;33HE([)M5Xq(3pV=l_AV&&a>TTH#M9O,1f,?];-f,;AC(Npcg&ob81+(^@Z#[QIk*>E4G.&,+RZ]8@UI
%-#'(G#TW$[K/ImRZNB7NpVEtD!WHI>Cbln/1C7E^kVEt,jeI)<S$%DH"CrGXTR/^G]pNk_ib5jgr<IIra_'nu)I7H(9N$/`.&sLc
%(,P17[X0jCpWZD1/a2T\)/</a7]>S\H:.HVX`T]E[+OAO`3LZ\/cHM6n3).'I7I=b<SSSuG>3.WZW3QB("=guB@ObcRYQ1^k>og$
%D\/O+_]jFhc/_cb^@T17YolN4*n06c2PR'#>HptDZ#6:kUOo\(=`GTF'^^fB)U+R:^XP/BC(,$TJ&(?m>^KF>?@)/VkMmeY2:1u2
%pi*R.L5Wg$#_fW[HaJt>Q'`Lb2HJ,!iCGG6'bj(17Y)&,l6fVW_^ZeU\RM&T+B"V6X>>Hu=bd8lQ5%q3.5d"*^PKKXS&m&mIOKH=
%,Hc/qU.Q+;S)e);i]4(p\o+`U7X51M&n<H'F>H&gFQS+:8?$X1-]KKO3WijsRgccpJ9"fFk.KY8f'nK5IFM?"5Ip4&ffDd02(,WZ
%0H%JY<7Tol[$Eg1088&=KWK%EdKniU_2G]eP7GY[4:;Q(]@i<'PKqG1PDIOpe)aWTcC37`YD4$^p00o'(?UOB$g+<^."G"5^qu5]
%Zk]=1NcNpY21<)JDI01bVQYg*>`_ZZ_g-YkFK-F`m,9Y(W#7"$:.!*+n_b[cdtk`I1lk+`1X6S,oN?jVg@Q%9b^TMZO-niK&35jE
%OUC5%JPQ`g"DiibQkHMf,:=GNKKc#8M"_FM%/%I.hKJ@M]c@ttL5TSYiJ/G,Bc9lOK*NZE-]M-S$i2a&%r$s[BpIQL*iK^$+q7@a
%O?t9nau$Q@]]Xj#`H:3Mq-"[eko'rHn08"b2*;>Gf62Spf-6ZX$M6ckhW-+;U_YrI=0\AN-b.i=bSkg5j@aBH70b+fJHT?73cD<=
%7W#u+1aLh@D6McJK/V5Jc.N.9$FdsJk/oGd<q2m]$)OZkpS?'.Zi^/Wf!3=I6n3F=:i*_62Chg%k5;5o0bp`*<1B%I8R_Bf2h!Md
%&-H"Q`,jiBV$)&%eos_PD/CU*.D':MVOrL+b#g1BiZeE002:/.L]IMEGH,:gNB*s<"+XR4WZ,V>YF(cTgGHFA5n"QD(,4mB7)mf(
%L`aD#s*\NSouDEXCZDR,AQYO#G!9U8Jl9Zo0B\Gf7T*j^`A;8jo0u!=/M9cHPu4IjW^?Djo9l/FlF%e"V,3Rr>5aE()Pc^T]Ge-K
%dgTbfU.%:ls.f$T@s$(%E4!mJX\L_<p3=J&P`EnF1Mesc=ZJ@PaNEUWk"t4D%kEZ2>L$`5U%%o(DQf6@6"#R,CKd/V7`7cm:+rJ;
%;Qkb^L\nQfgOt$U<jPcC*%/(b*G:%P%k_R_,R7-5=Y>gkTZC`CbB;9<Y/UAkN,?DoBbd3bqU9OXrO(Pr9ssCfhLCihTBW];4oMF>
%>buf,p@G6)mr(+lBrppVd@Y&nnlFG'<'\B/+0L"1?X,!@ecIqu=Gm_kJm$<Xk_U*3>n\CCH<#ut+XJ"@I*RnJDLPt;N)H`+,K^9#
%/o;52g6i]_PKnIAieoeN`=5tqS^#*1)X(;ok!@!s('I;8(Z\(M_[^HaZnH"ak+B91'j<BW%Vfgg&k&<".sURI5-j"aeeA!c7lIi5
%b)2[A'%+N$5,D>IP69'LmP2N_FJ%p*.J<agL4u0SDTHKJ1&ppXGE4P'IrlT]b7ph5PYDa:pr@$O5MY^?:]Kt^)-q>F;Aisk<&Gjk
%]9LT#+)OSFIr$&khXXZYdEHrI5fcQBaD;!)d+$M\*eGLGXmhF@rmTj0dqp5!s*JD*r,8=+Jim%b@@C8C:J)Y(:1q&3HW\4+fC5i.
%X*/]ml$lLTe[W9UZoh('Su0=b.[J5fB<NJ<id10j_^@0$2OorWR'6acWB"d`L%]WIj`]gm:['Q6ZRu!;"o;q/e`gn.#ES19@C86M
%ochElXmt%m(X20nLZXt+Rf2&PBd`2Q:3>f*-Tb3"^5FCSB6f]8c&t$=0$hutmbrGgpuEOlWUVFudV;k&V*/D*jSbtCrFYe34rOp'
%qC$QC;KqWLL0oM/U-Gkfne[H>3/cVlDT&m[q&K0RL4bUo5sQ\oj"?`fq1olh#-BFJY2KhrmJ4#d6FBCSlFrK7*Mg>8&AY]@#RI`=
%R!&2$4^h`b>ruE!GNer813#0t2FT7Uo):mt6lrGPm>*%9j!4'Ba84"S?HEuMU.THr[m.OHmpDHmq2Xih[-VYd3PLJOB$XO+TOWs;
%\CT1)/h=.*bX\U+Ybbrm^rkXcfj\fiqlP<R,6'AjA672C_4Dg<%t0/lYiRZj>n+(J'"dIjQqhBhd@+GEBhWgATqjINj6Y#G`@X/Y
%IZ(9a=VP&Y#D5u<Fq)k#&VTi@PKuD57'n>^'Z-V*0B&X"0LFd.7mncB3!f6fVY&_n>^Q3fl+*"f7%U;0dt?6)!NLW%b[K20XS]NG
%PTLR+._6ra'#0_=;QW;f`t+'X75o,!-2!gV-YFd%M&]Df8Z>[49nuStYoQ2QR@,k^#Y@dH"IqQnAogb<AWM_hVE`>k8.M+_Q#FAO
%P4%JK-OZ8ill6Zk.!_!;S\'WR^8U\E1oj&STmr/<p(S0)^,7pMC(EiR#+AQJKU(W?rLg+P[f*qZn9osCX$*0D#b2%._;5\df$j*X
%Z$ruIOJpO*CbG@oFn7a@aH2HkP&t=A."(i%.E_"t/nQGg4%ObNq&m&M>_>L@(ru2kOd9&`Mf\ToP"ZQ8\ITO4Pr=r*QacF()PHI*
%$)YZ#:gQ_Y%H8%G4@?DYW_g__'VcQtG#64j/KDl2"fi=\g]pXTS[+eNhTsNY"=o^5D22RUZ]#r^Qu=R`ZmMU$Uiql*./WW58sJ@8
%SSFrPgd<V>U?bLXj:k&.+]_$d+Fj`g8"]oe;Nd*@b0/TD-4$iQFEZ6Z4O_e<[61!$ku6AMo+,CU*ch-_i;?j<r*81X>i>Nbi;E!E
%-`B'h,$>;r:ILCPMDLJZYlcUsjq*n,q<B6UH!En7=ed=`c!.S$&K[KgMd^Js-K.]L(W;.CY[*5K_8[<o*S!>HNJ,EQN1N\:B9Z0$
%483TRRW#TV-g(Y1"Pbg1r\_(.@bOL=a$0!t3pCpCB1D)@e<d0O/qF'ZrW6DPQLJb`6BTYmF&\GZVg_VAhE9/0lPL/`R&&qi\Zi*'
%2+p?O8!)sJj8-fd`1`QY*Ui$^DEJHX8<N`eK")9%U+:g[]dm;DkcPKioN-N1KrC7#b#R?aOj=^nXQ(KtgW\UIR:<\(V`Z;#cd9aJ
%OTi8>ik?G64l*5m_qI(ZBo,gTe[:@s7=#hW.um]4$.-.ZSJJ+5AT:nC#jOm?BbAC#cc>Y-rd#LfOm"QIm),H.$Gdg!1J';@G3'-F
%ZT9^a*Tk?CoaF>>9I@iW*TE"UTX_5+R[r0]_Ce.:UAHK#2MH#:b-lLTX\>L]*n+dA?lSCrdYoH-XfZJJ_=#&:<k+H4(=D,QaKI_I
%mJY5nlQe7_f5QWj_g=cs85=.X++$N"f?s'S5M*HR>GZE0<nD:"ogeCdA"WWrFnA/5msE:W4gf(F8\E(bH]Qu#*:Lt/Qs!+0f\:W-
%g\8%VhP[<eGjZ>hB=7$2o@f$LgPOQ(Qs:++GO9"rje&'`je!O=S=-\#rp=LSnL<5_g!>GCjC-i>^/%Tb_k!<tSPPR[f'T\QB-V:(
%Ri\H&BCG6jpMM(Tp-WIRL,$N*r5O.4GaU/le0keknk!d!X0\JFrE"?X8,^6XQ#@X4:M3pMNjN<no6*F1h6-O(8@TXcI.ZIid<F82
%*dpZ8UYcAAgj^UjjS_:N$6I.n*s<?@GGm4VfO;j$BMm"5UW^WE'+rNp,Fn)T$AS2UVh%C!RZ>%UVCb>7(AtCIEq4b`)jG_:K;8i;
%VG_*fg+o$JRGAFR`U?kW%Pt6V:m0TtNdqM$M$_il9!R'M"%!cHWh\qQ`j@kA@n[n!k!aZn"3i?_a0oCKfZ#hM$.^hCbe`gCCQ="G
%9h+!1SXK_J@3TFD<9m+cQ)iAUj6aK5H\4?OfVCA(KJ2OaXNmatfn32s[QUS19!]Ub67*!Vkg2]m7?,Q!Ck54)cO6?6qQDFoBsK0&
%bZ-jEUPhG@&r8U-h<t,#"R,mJ?U$t#/q'D7XbLi+@rUNEEsB<:%)cIE.YkM9jC!`?AC34ngMP#&nm[(@k6KS:a$2fGD(I<QEThbZ
%mX37GN3n:C`U\3>4m&ADGBk5*r+YjR+$B=B\Q6JXo<l=1qH(H.gGa&brmuYslC#9'kc:oEIJ&[$r8k\BorDHuh3[$sk06uBrNBSB
%r@0q5]+_"W^\mtI^4#PLI)#O.hgb7j[pOX\k.gllQbW@`Qf!00^HGp$o"T\IjdQd@rJ.SkqV,q;o/GS)e!mPTn$mlFp<2?Bqu"NI
%9(>E,s3IluoBebls'^EOe^sinchdpu+oh@FroM$bT&0Cgli6R+^](]jd1o?m$bW3o7ji]\lC2_,qX#*rfRc6Rg9nZTf`1W8O1d^6
%kE#S6mQT,bI/2MMhu;A#rqSpYGH\sH/"Rr98\J8eZ`O1rU,k>Z'lOJ%!cel1r8Sh7>Skr#-$Oa^o3-i;Ur]F/(>)&!)-BFDp=Kq^
%A5-0E_SpaGS48HFc.ps.N/h##lpE;N`S*?f5nY<KS,VoMU)=hJ76PE2,U-&_<bX)#0jnQo].O[>,cpi"M0=%,U"2m[s5pL9!#1M=
%.VY!NX>*hfeYBHLNS;tofPTiVOL6'Jo5uP7^cCH;mp=cs%?Q#sX.(<p^_T3_mHk.R="$VT=r#46hl098>#5]L`4%J=<u^)!pC8GT
%6o=f=KXW[CqK7$uHh=P8f'Ri0Ef/0r]Z9s1lQ2Z=H@(t4#sWh&cPH6cAT<bB$2>YZG>r(]ri@\hRM!=^ojtOSe[H#c&M"q];`G[i
%W^(S/O2,,/(nqsXFE7o&7cM_+R3Tl"i[+,rY?YeF\=d#hgM(Ui+cLbJ[9ck>.7jE]OkoXP"U,jt*/$6J4:5?:rEV')gUp-_8<8'4
%PMiN0PP#t<4oTZ*U&:&*blYu7S!(R#Te#nS32`_)n1J2U!fs>9URo%h[<mu1>p>H+`:!"hpbbgCE,VYeNU<e8:U,[(,n!q&4!ct^
%O[cg\n$1IV\&OCk47r6:f.$0\rNl=t6^^a8c-Xl;&G+SN%Fb@Pb\'997n)V&%@RpE07+>%:T$\%`at4mfOa*KYG1WD2Y>;:dpcRg
%;e0>I^p8L#G>@/08A\IULP!1Li)htp/_eW<WZ'+hYs'sZnY@CD[i@&n1"*iBD#[Za?1`e\?].P/r7j-eVkc+ma"iB,X0;\1QaB0K
%TBMK)rI6H##hI+AN?SDg_f%aV-IFI@F$?Ajk*1`k\!F&a[<ounLapZWkJq`9BBB*@h8\HsrpahBc5Xe1qh4Gt)3K-TnfID+YBtY?
%kj;MjB=rTX^Joj\#IfI?RF^DRfY^&3G(k6lrq>iAQbrH8"T>ps:eK+jF+mAeLm7J8m31sVftNoXn/=Gpe_T33ZG8:"cKC"UcXVS6
%91Z(c@A%5t:D#g<W]$a[2.bTX&TbqZC/q_4rpKe34Mh/O;X(nrbh;X^KAdT2<o/NbFPtY"h,D6D=j+-+^WO97VItZf8+sVP?:/^L
%s7dL$?UDK]Zh($GbFW'%`r,/W?/?()4jEAYG7X\>CAiUS48A'AT4%]ZLO"MkbYqgBo='1U2;7L$EHCh-Iq!cPAtBV);V)j)f6k0^
%^!'`')aL3f6l/4_`_hp]2T4$j8h\'k)bB&>r$%RIcC=JGU7G`7MZ*4a*W8R>F%@=0)'/d&5INZJCq)`XW)b?^gNC)JmF3]S;^O`@
%`nV2h,!#/Z:oUfO;g:CcZa%$OIsr>#bio&mPS[Brg""s^S)8,Uq4Y8&\k[PNm%:E6+3(9!aENFInV<Jh0Mqg4s8:+[!f!ko5kEaT
%?ER_;'V01tG/^W45o+.#g8'rQ=:`(OX,OQ5C:j!<*2XA1PW#:&Bgd;(i#*uBq?C[oF.d&I<KlPC9mooPm8NXr59SWuO^eN$L5+OR
%$T2BB`XE2c//[7nH46b!,l"Y!i%:Id^sJTlQI5DgXCD=u+`:?Wp.Wf'kh83Ek/[+V4,2MN$jQ)($n>W^eXnOJ$8OBR3mo-rD@.(j
%2:P;HDN+m.kEC'EJ,]@qd@VMm0o0<.L!CZ#n`uZ49r;_.aRRJ`4STVf1kA\l=cr@Tr&&/YU?%l@2d-@*O8V`?F(TL!$Jj<&$DeOg
%2Z0(h`\1bBcTDXL[^KHS>eW]M0b$BWD5Qc"YWT<O)-OrQ)!VBTr'o5,'ZajAd1:BOXA;oofrMPn2+F9p29i^a\%(lI\eULP':b-#
%ZD8OPdl`Wss$ceD3C@O6R06k1bk)-d+\@GES]u:G2c\)^B'/LR1(cZ_jna7k_Il5Ve_N6:ZFm?#a*9dS5eAcD-T='aV':m&2ENko
%;(9h37%W2FQ]/ITp^Up&++K"_ItehjL)GJq)?7aoN7Bd[U=5;pX9lc1[L;SOMF0Xp"CZ:'e/#?Db<#<S%P,/`fKEGQpUMN^U^\LO
%lVS;nY'tbZ`&3JiM**SdjhO#8jr7b\N:jIQNRMrpO&LV"\/A804OPQH@jgUI"WuJadIs"^#]SN[O%;OSjp4dO5_6:$KT@7+j\m0l
%-e7<Y$NEEo=X0"@AI5"Cdu$89DlDhT(FpWR4a+u=>>c9jfqPmV;VB_bjV1a^SamVEV_"!edZul=^]UX<g\^=TBPG3%fjaPPS"j[T
%Mbt?L=uWib\g&b]]'<41T<VD%X%E_V4jht4VZ]DADIgu9G$#Q]9PFTNgE6Pt].Hkp_ju$'P%EW:*-73abf[u$]$UZ1JC5SGj@7+S
%*3J[.XG(JIQ;CC>4@Kp%M1j%sHar;T_#e?M[\e.6oiRB/#@kiUq:6,n;XE@RTVn`1cDKEHl1tA]V<s3^G-/%^<,X'^_9O[XS9!A/
%rA?XYHnEuY%a"(AUB[\;lsU6l(otV<,<@Yq-BQSNk+Q.!J1*[SHC8$Cl%Cb1o9Xobd.XHjeFTelRUPqd1H^P>=-;2@j<\U"Ckp$+
%hT)#U\"@-AQ]ett6=l010AoZ4J$eTp!8LI"2#lhO!g??I0dI+:VsQ&!P@2EWUk0\]D+K](Tig=hJ5LK&KQ`f5NBJ.(I#?.:GdW=U
%:=g?]:>2WQZ`@$hF+BKk]1k"I;",1%7kiFa<N>]7,I,Z?*r)2?Rn(?RGA46@/?49'?qe=[g7F5fkR9C?<AYj-dF!Na?."45@>;c#
%cYtae>)K1Yq(`:5d>(3p773>2k:%AjbLDpQU?0SeZ0Z,[mABH"e:a59b9_$4r7KK"DMK7(Vf7]+f-g4\/r`DVoA1oQjM$E]._A%f
%IWdSjk?-8TQcckZ3jJo-$^kJCK[Qe4F+kGS[UWmO5MaD&gH97CM*?5I72ZMPgoRo/9VPN_iIW?n:55*TQEO5^RfWQT8C7jhn53dC
%8YeEup)6lsM_(['"VoYf&7KG$c4rHqT4TD(/?u#,Q]Cs?&rC>%7^;Egk%X>68-7<?O>lfP=C('']6P_?6sdB]*J/+F=b9sTU&hk*
%hV:Hc*/<sC\:Z]C,1gg3U"@YEA*bH[oX'$4ond=\U.02_/O=/A<tG$mQ^np-!6R\Z&BSQY.E5sj8bp^m/#a,oJ)$bL2?K]48+?F3
%S7UVu09PXK@<N#k;&Z_WF,t#q1FBZ?Vsl[0")"mkV.]-)12%(LNr^MQMYat6CouYEcd[?_pnH#a+f!M^O\OCP)<2DN$a@(")VgWl
%(6ri`rLQ7tk,^5mpN("!`K7#tT#.CBeasVNT!R<Zh;d:43s(Co>d2?oIdYT_*1)%U&(1lCiB1tDfH_'h3M<(R'W`7rbC's4nSZ"j
%p/cWT2M96;_(VRgSAT>1a[n^6a17i$3$33?CXa'Cn*4PTC*Sh+T/sfn_>6!/YY,AdP;.+iRrN,nQ_%DJ'K=`$g2ac'RhrW&m%@Q!
%N$=@5IYNngA@3<08Yk@W_:/,IHf4&4&o3i]@=pIj;aQNjOW>Kb^!Y:rRuAY#_NCj]mT6uH9CtX8%N2,U#;?s:RDXTagPB'CGg--W
%79>qe7Qhj8<^gLFN>YjuB:h@%9[)S06R2tb\K0RlO#_p^#f#hV:U)/=Qm6I?ng'dm:b#Vf<BRAqb+bj\Io!nNUGc`*rg)KEKqV=a
%IT"":r0m=8S/1c)1,QY18dFPC[rlBMhJ`SCEJ9V$&(HY21<U0[ice^lBVLOFf$mgC[ft*;2WIj4a#F?L7:^p(\_Jl*>jI>YE7X]j
%BqorKp9of/pU"dpllEX,pc/KBZ=\79VMD(6UZq'o]4:;>C<fm/LH#7aBX6H:.p'hF[ierq1E:\=$[P[q)S4ZUY@3q_+XtIa@J4Si
%A.MKD^d$/mT?4<;G"E]b&PoX53((a=.A/e5ieZ6V<DE=7+9_7[QDtKH42]N+`O7bV,Z?T1I?s#rP8)@lm4B='.;`YsXLs8GNZW:P
%10c[c)!/=j"/IGO,:Ujr'UK$A()>cj<o(kaLLguZg\fBh0)*2l+InU+=KfAtosWt^Gght/ko$D+HU-@C;OfPpE%q`XKCZL+9m-4H
%4$jI<@gY)=kF"fci=EkplqVirYZbZM$6H+#27@4P.kDRmQ.)/F;*MII![Y8LAjcX`o`Rn>Q9.6RX=SJ4R'qDjrUDU_jMmqp/"YB+
%=#ph<e0B(jloN0&/%S@k7sWGVh#=F^2T56MZV,XNe"mh[O\W3S,@'j#U0,!_85CsRWTp^2L11)(Et_][+nNo3G,=6p9c!1\J+]en
%=#/C%W?L@LFt#`daYG=3OAkAY"ubKIB;R+2k@'o*riP9;4>_3c<FmTY[Y=)p4;,'M:9;aIT,tG6(/\"2I#gJcR3RlXaZ-uq6pQTG
%Q63oq/LaK,[ru-A0Mb=An<.:rX,1)V$F$3r3>;X>54f_tkF@]95TR@Q2LIArlsTN8V<f_0B7*6=&O&OgrZ0C.op&.V?nrLi=46+R
%m\p].fXe/\\eY7'1eht2&)d-QQY;TbK<J=n_ab>k7Y#FG>+'Mg\dJ9kLK_8LR``lJaOkT[6!QmE+If,/1G;N?/<i'ojW?rhh[<EQ
%3>)cFp3+&1<OO](s2j=g6tD0E),i%C6]ni.bgDra'T<h5_rkuj.%,A,oI8JL0ZfIe:9[.Nb=<W*O[8Q8>"`l;BguB("AUGVP.@hm
%*FhUf9[;\O.S/O6OS1Cp\`f'\Y#QLAH4-fsj#*0?;fC^as*'3RKU)ZI0a5'FK8hK>qYLBO9/-`Hm8G:`8tXKp1fBt6l*;S-no:RA
%#TE0,H;%MG:Q[d+:3f_T8nq6KU-F;6L,I)YCuU$2_/UU?n""eV6%(F=iTI7'ZZ2SQ3;"C]q",5UMB?@qQ#KDC#^0"C9-/ZX%lK"J
%pJ2eZd_F+4"A#acg#[Bj^$7W-,\$+Dru_<FT/02)@3Idp6o0;"Ro/GtY"VpYaI2*;m'3B\1H?S/pHfPqhCNr#-/+JGa;mMDhRV[I
%T)'+c'd%/;]T&Z%)-Sja>oIW<>4r?C$-FQ_\D,Rc^^eNSeSr2W>Plp20)+es,dSWW=oO0^m6]7cmJFdg'hVr<.c,MLKoiW']-BL$
%Wn3WB>.$BTpth^^<VlGbH&_3l^Q',:LI5,%fbo.Em*kQamkOk=]$G#EhB)8Lj5#oK`_HG`d,6_@hL>fI;N`ZQ?NP'7hFbG?[H*,`
%fBF]/^-D5.FhY]MqH)6QM(B#o-Z.OHgT(RH8Y_PpEdbKMDEN;c6_>&$r`fb2Sa#25etDcVC#,PIU/*%I=0UOLMC$2T96].G</+T7
%O;=A,b+`2=U6Aq+?GhiuZ9X:p4D3@#c%3]@#O[*Ukj!h",9!OsF?QN-;(;%JMmS?$#(464ArsW_m&LecWd4TtWOGGo/R%mdc`V]L
%?@UXu,GjjHRe5tBEGU&6*RBcDi)9G!FLHYQhDUrhpbKJ<D!Z%0'P<bDDC(Qq_R.'"PO)QlG3AmmAVqMsYOoGfas7K7=d(fR.M\qY
%m<h[N`?2@CT5<M-[pV)7O&jsXr3$r:-.d,$%<jYInNJ/`=O2^]MJ.iD'(0mF/;UnKncO`n)Z]kj'qMPR0r%iP0+jYA/>*_ZD%cL`
%<Jge'Fi)BKi_Q8haOoGJn6;:0a[_7c6"L4SVY2L>o&>+$cN07\f16`PXNI$Q&,54u<irm(QG`3E><"#Q[2q_CUDe0?E:9j\:b#A(
%ogPn"In1>LXUO[.Bf(Kf0ibs?H8r3R]`p0q+3WJ14#qMA'bVo0@p/K]L;8)ude*2KBL&VC,n%4u!qVRYc?fA]Z+OC/+uc<n$UKV)
%MJjP"c6n$GE9]>:eL2mX18gS:@hp6*e&Ht%9u7Jfo1WBSU6P`CM&,n=UMs2Yi)s/<<qZ5/lWr?,?``E?PX(KK4iJtcB&JM`5`'TP
%.UILaUMku[!-6A_D>QcMdpdskioZo4-I82>dDsQ+/#1.FTjBhOR[":/bFXAP8Wgni\51(kc<Wf4i6L$"=%4*/3'/M1=Ec7CbmbIM
%2QA3MlW4DLU*c>kdF60n&bs[WG,X8HiIYFB*HP`n^V3Tu+MLf2#D1G,n't.36s33KL%BDBXpFQVY#9:Ha9B5$[/AM,=N84C4QKDj
%F4G'U5G[L[202#ig#c['iR+^T58k+IL0>NIjtk6gs&qWlY:^;p(LI9n$EFgsnT[@%0cR)RSTB4BGrsR%n%j.I?"f_V,DF])NQ>l1
%(k.6i@0ouM\==U?'@GR@]Z#ni"^Esba/r9/Q>K8<!Ws`hDeh3W&ud>Ci)Q1\.nFeq/Km\\AErtB\JJ*Zo?*kA[K<#-Wm5j@%Sm*:
%?h(N0;`lUh,kEKb88?H78WBSTJkK^D,W-*r2(;H6!c.b!MA/u3WGl,t3^CIt_<qf6i^m?GM;G&=YV*r?pHqt#gcG+Ff%YLi<CRg1
%s1\uZfECFI&Pu+e\+J[B(*]DjdI]I$M_AUu&k53''d/fXregkFmTi_&an/oH2]$&P;@Q4$P<*Y<),G9)OmJC?q+O^a3NoX2JKdNm
%&7JuF;Mf!Te<'0[_naGE7<2MT*fhR<L)@jpbV0r.L(6eM3#e3YFQ[p;DtWsnojINkmlT9HI]Q]OGD!e*$i9#=;t=9E;DLCZ2D65X
%\&Y)']VL'Ie7/C!FNC,aYSR=CA2Y/3VIgJ22$iTSBfVgs/]JK&rL.g%70UDl(NI[7l^e+hQDB?g5Hgt%f*FQPW3u^9AGlAAS\B+c
%_2LAUYqWSU>tQOsU,).BAS[G_FXg6P%9MU#>!1=aoKq=`2"Vj=L?(F%VDOI:)l$Ui\oi0!*QMVD&K7Y:gDd]8agh4qnX>E8'[$5"
%Rlk3)$bXX-5+OeU-*Y&CI(SgRc:dL39Y.fOalLU6i(23*1QoM9)1!Sb55b$s9&DRS7a27;<fjOe&+;=r_4!mQZ&>sdXUi`lT4H7B
%MSerJ,iD:`:TZCKmioendJ`D'(mhqlm7opu$a&76^(-RrQkqS6GRc/IJ&LRLSb`rDpY>$18br')POaJ^M2)cCJ)ASF[i_)*5CE#c
%R$?o'?tWHq'6?g-Ns&G;E?33`g$0)4Gb3``F&-Ph9fK1?Ej54h5J8$b8&X^=1&!joiN'SXM?G+\h?]*YWT^ch(-p^HU\O)i(5#fu
%e"mWKm&3E[SdEu\T8I1%0Wn`lf-Y.&Q?HM*m;+RN;@9JGVBeano\bToCao`Q'AH?CO8uO*M2T6GW1>4HH6tMY+fu+%#M\j@>O^o2
%h(AEIm^:psbZUf1]RjcjY[L0YCH71(6dr2_/;$<*i<?e&=m-BeCU+C4C.n[<V8*\o>s/B6e@,(sMGA'Zb*LY[)f^X=OiTCF+sS<=
%=R*eK7=bnS9a[tiqfhJ'P@+>e7jjr(j7]l2WXGrSA\n/9/]mNpJZf&N+1n*id@YjRO@bZ!F?an&Efq(b=piZ2UX2Ld4UHAjZCb;S
%V5K.H)g&$^IE""[0hM'&>Yu$2LFJd([SqaI0FR3#9\Z%G\o"RNU;2PK!n'Xc$AMBJU]Da17"V.1WOA9(!fc)8"WcdW<B8WpTuT9r
%nPr,ZAZG`cJgMUC:9LP":Y)UcfI@hf:S_CtW,:<;S]_OMnX>8]ar*'*WKOrj=_q9/9<:E/=X'ZOYtjPl6@1Lj.OO=O]#81g"L%if
%1tFKa\_7V\[f?L5g<2<<$h6N7;/$ubTL",#^0P][Ij\'+1j-.lfEgur63o9-"6op;))^^5jBei*\X*a?-L2mZMhs&_9JY-@m^!Gi
%Zgt6i\U/D>n&uK;%Pq<XlNaWl':Yr.6Fr)GmAR!72-^Ef%bF1@B"JC*CX#+okSBe%A7aKr:k0?[cYTmb\u!"h\_J?QNaaIPZ;5,B
%"IjEb5`(PLs5&7gCf*_T!`oG]7D>'_JT_6fBm+hJ>IBg+.mdt;+if>7dD+dGFb\CCMST175#.8Wlc'G_n*Ze9PD7L=!Ts_m5o_P`
%aL@UL_%sg!561(o3hoUJa_LS4Z..s49oKk%/oU9=MSM?L=H\3NC@aek\jk_0b.AaLD-r;Mo`[&hn;`Lr!0\lZ!)\\WZlk85+^.f;
%=]VdUB<g2VjM9+UF7.fH5se7,e>SBba%hu$nQ/^Kd\Wf:F5OZs:RYC_!-V[rCW"YI8.2l/.QP@_,JV="_j%+c\IMQI&-r0$a'-b$
%2,OR',hkQ)*^h]UkS57'-/\lVH>6Y',iE>q$3XB2IC=Tl]">,n,sB"Le9\U@@Ng$SFB]jBrHFPCJ$bL0^PFO@K.rPrKk.4M1M+tA
%WP>+-ilJlK7d05)BKXTM+j92:!S'-P(>WQFF*Ng]oFsn"`;+?dF3`^1(0Cdr)hb6=Hd9d?-7\$3@jAnpPe4]b:V&fXbA"J?>!PYY
%^"$Mh&5oS4$D0u@(TA4t[c)ER(JHFPlL>,*3^k?L(**i"kM1K^.S#k+mi3KsDLUe\1`<:D0.d#JPk1hZS.=\#SY_+DmR<;pg&fS+
%GP0B>Hk\kr3h*=\rlo@%:&F#`65*0g*$iZ7%aG**$Oa1^Af'.91FXM"B1Sul*.@W+01nd?Lb'?=+#c2)fRd]rfB#K`Yu_)BN%,jW
%+$Tn/D"?EZYOG-.Jb`PXW%1qsl>JPg->TPEW5_aY<gT9V/e@E=O%da?);m)DC?2Lu%3BCF=4KnS#qJSOd[D;kkjGuHi7Wfa.O^b.
%m*X<OZR'WYL5l>AVPfLYo%`"1g$4)&J7%gm4010%jtq-[SGr9uLnP"q[PucnG#D&1K5\,g)jZ6F2pknoh,LkmGOt[Iqte62^XD;,
%*oM(h8YhRD.#.e,#FIb"[s"FoM4C.`SZh%FZZ"!:J%YEOQ@c(6%G1SkA<[6NV`(0uX#Cd)@.be;hDr[l\ehn:bH03/ha>)gC07Tq
%?CbGM*E>HQ]i6kb+^@uQ\u=%,P]8&or::Epf0[afD[S,clGA$RY+ZPhk\:<rkO0h8j'L*F$?[m+^=Qa4WE]@kp5fiWDh/-])(@Dc
%8#U>tm:^<Yo<HV4TBN8lK%L'FiVMI+=9,.g,o?C`1)po:iim[,c!n-bM(+"O6'*HbO?IpSgSP?tPE^NCDXDPo&DZ'ESa2)Y).jf.
%>@NN.f#5u%bL%LYQ'c]4NHo+&muFmn8YJ\8cbmWd^^1u1.$%O0_j!O3`Xm(XQc\6Gg+lHR/!3KXN[a5Z$rko[\82M"!a45E-T`ON
%mBY,u%%]?j<L7BHZ<GH1iZjqtlR<JDiq"nc/2:hc/J+f,Yt*Dpnbb(e,,="j^m9;ql)M$oTg$@&lD"\jmj*A10Ah&_V5.``POm=F
%AmO"JK6uNoS\>TtBjGr?Pn+c"OH=jeU`ij;ZXS&1q^^hJJ,DU`s0#^+%0m/-NNB=!M0bk8a?&4,n>FSSr:(#!!=W'[A^c2[(&cgF
%k<Q=es)C\iZ)ksLUrd_raP0u^E^.9kQ;o@6enXcbg2'jK1RaW*:Y&aT`,G;$A$Jf).]%"Ohf/c/?M:U@F6L7aehGEk>=0s"lsU?E
%La.^=bdCgOY[$luY-mZUl!/")``!L>m-KdsXlA_K=?A.l8*lb/-*hSBWlNOJ(^DuXNI&CgomCXM[r,9UcJ/2SprBhGZu,-!;8\`g
%k&Z@P:K$=jq\#@1\_o#>$.2;DjNnA'@Pm4#]mBnS6oBb28MpVcdjZK4)--9N]&DOuipc:se3C#@?j[[8-!+rQ3^C@_F:?+3T+6m\
%Lm"(RXW(V)WJIqTik]a5/kkkdKNn%3r]F6?LfJ]lD<4YNGtE&!c&gLumU]ML,D<ku56Nr<DU(5NS$U\\gmkf7i[KFaDGCLDS3umI
%DN5IeL*Oj1Rkqt,&ORY#Ncnkl3b57?m5%q['.R.]).!rXMemrbLgYtE,onR@bt#'G&,E`lUT&aiY=3J;F%^E-ntl5AAG<5dE?peU
%Tl-fhX*:+pNC<7?c%u5m=YrKso\F`hUtNG2O*W+RJ8/\*5EM*u'laa6W_3(5;;nJ[29:)KIlsZ=4pKV9IW.dd//XaH/BB9m+g4KE
%ELc*Sea*Ropi$Te3DO4dkZ/GKNfk>;qPn,CKZJ:gEtaCc>XB`dP?lfUH&4Z"S8JBA4)Jt%IG>\J#NPH-M<)TJ23D;N3Si)miUojO
%8E16h5Iu:N5E4S]Zl:O0'l6m_68T0f]!F#jH_:oN+rVL;GN'eN@4nL0:Jih)jI-6*fXkn(@`%n/n2"fr8'KVVggb#p(=T6Khtc3b
%4RELLVofRa2];8&^KIc$.Z_@>s-RjXOKG8<>^IP`3B!-*TUo%HVYC7[MX'8;kT+CDa>\27rg\<8=(T"A+JUhSJ<6f$pqLimeYMS^
%?@*:aQ'uk)XOcclpeZ)L`o;780DLHG9HMh'l9!)s!s0N9quRYdP<KkLG77#;jEhe4Fe<O.nnY"Fc_?RBID=^8*^arIpJ3:Kli#-'
%F<FAS#%WhIVX%Ej8H*/mKQ<u.6e9(2@0@\UU'/R2rfCU)H$:B^RkKAS!)JjjJ=XL:me,#.,?D[l=;,i^dAcAIcKgRll!K&MD7Rc$
%&?,e#^?tLo_H/>Pr[GOAD^>6VY/buF0?IuJ0F\:+iWSBioRP@(8EsViZQ49[:@a4^^Lcl2pl2%qnAoK;kJqV21n*Al!$H2/<WBWi
%#._MBKiY`gQL!N0qVSL,q$F(LXP+Z%>Y<)B*,E#-iFuQ!k&s--Vo'LV$YdD.^CVR8;j9tV$!%QMc+NU^M,$qC3a,Lnjj+4GTu7>3
%emo:E\VKb?d2`F'#VN8)%[JHa>7[U>h+Kdk?J0]_nInH1S$+1m<P/\HbYhN1giTcbqDS2=;)apN%gr?/:,mk'MLTQSkE9mc5E_g8
%nVQ]%cN]mhZm[j)gH=Qd;2&p@ZqmUYPI)hk.N-?-.eI>i&0T$o(7":;_p;i8[H7tL5-V:Z0TFK/EKkl8&_j6**eNLpV8pT!GCT.s
%Bj!6=1AiW\WUb#8O*Xd-,-O*i&$'%=m0$`\XoC(Macm8rTd76\SC7[/;:kK]Os]&^=G4W47PQW3ITNUYrUi?Jg(6PqX2i4>oiQu_
%DMm04!gS\H1&8/-KCMKhF\V9cN4_.&>!.Rg7.)]gUfY^<]m0$Yi_umTHW+lV9)#GX&%15G^/?-L<?/&%/mFG4i"Y-_M1@ok!+n\D
%^#F+IV[WQg_..(<@W]lemPBm-_f/PH32ns6AORaum<YA9Hh>R`o6c?3)tlPjI_8%84@QZukV5O]<#:7^krkE>edGZL:JmmL4V="c
%H0-%Cg$.L<+P)e"M@N<l>2e(C#Z(RYer'IKhhRdQS:oC/*o(/YH,>StY$1MqC36'<*aB_9k@q4(C!D"!'!AD%ma9KW^`#AWi7%1F
%<q4Fe\-E[448Nu;"g"]MX;NOkig,ZZ[2F^s1N#f/c?QK&s$FTUUAY`J*Ukr!!.i:DO9&CPVh^<H+B02fWc741Qs\gS7h(XphIkud
%R#1lC-OIY";+R<:L0@s5K$a'FO?q0E@8r2c=;Y[-B;-jsb2"ha9PkNu;8&8^ifLm"E/X7G:8Vic@l9D+`i-s8\@tGC;MJRM9;B?(
%];Drgac_r0*W4Qt;c0'G9"tYc3<fXWpB(Rf1qtqUUcP6#o5K\&3?t"gYk-cgIID[a59=af*uUOiGgo56MT_"p3?;kY(CAl:bDRCj
%lKfIE19j+`QPXg5qk@e,!Kau+jc.qfXoYptDWF3E#p&e=ki;(j2mpF;bkFS5)ZfNg@EGXC@[)B2^SB15IWk'^E^/ddX[e`>L,b&&
%PD7Mp!>??e<"g(IrpRF&IJ5&/g,`9M)Moh3e<`lU;Jpf8IaHc=+#2`/&h1/A8FPA?q!M7/;&hgFhaZ:d,Li[n,<u*B:c60^i08pL
%aDk>.5,\*]j$EIg)#+f144%p9o(Zn\YX+sKeYc,tgCAj]mr-CPnZ<+K34[b,M_".Sfqd6g9_N@_:%K8!?\9p)@/p:mn?p<-4atum
%F4Ig)4eoog]:o)=47I$uJ^2Si?bd.d$0kp+N/Bp9#E2k'J*/?WcHmFS6MCHUJ_%O,(UWj[+RfQ;D#5>s&79g0H/DT3=rp6"kbcMq
%?G2RQ-hic:VhZS=8r>QiL*q2U+;AJDA3D/F1ipFGce9T:alB<1n).\]^C#/l8id:uH!<o1XN`4d%O#b#EML5:+'=Lpk!Al["m6EW
%i%:^WfR/3AM4D8hY.9]`NDn#B^C3J(q2n9V'GqRV,`P&3=1YHa1Tgu>h$OnrO'tZ@$Aq)YT#p9GQm"CkCOl:AW[[15.A2dIY=.b`
%3I3PjA-E#L"GFiiX"*IOq:C"KRp2;"?)@8,kP^tTn1k_o_u??4'->NYQn"3)4/XT/(nh1[fF%"OXa"b6g5=*ac..k;QT/Z/'i\lr
%XF%/;ZdLb\MdHuu2a9*r<Ek^Me-Pn/h%a6MT1"Zi.q[t.=dc.MYJg1<b0JaUX/LZL,da;qMeA:%4rs8s(T/<:o(SeuIbZG:KM(Ul
%&7Ge.n/<BDOfU3>k3W[RBPq$f[YjNkC'"Tn^u7kMGN:hB:M3:,<7.`m<;<;!*)ghH`oO>n#Ojj(-@'$gU[0G[`[03URE]ZPq(9*O
%'c`N@"f9&7j@`>P_R_3.7?um.m1DdZRVM=6nu^N!>SDk)ERc(^`Ib)!!j+'G[Y49GC*L1\<TOaW&;h]G)SY:`Fg2;/<dF4=Jtu^s
%49JDV62'5l<(Q\qFKsgOl-6cceI<ht>?^2OW<DI.P*f`mH$q\Z3\^L/DtA'`e/2QlYJ0Zj8rWC]Kanh'fCBYt_$Whqn_api5S:I`
%/I@T.:3,eRE%Wj[<1'e]STnP-fU1t:eLMD&.TnGNJ,CcA!aqQOXQ'2D^'>nS,:>YsQe;G?@tG(9]=M<?;atD_HWTn3:tAuVI8`#n
%)B+o,T_Ki^Q\gV=<6,LVg\N'c\<_c+Fc?O#g,o/0>$u1dq$rX:0X0skm^//l&aI5MU$Upb5o#11IhBnCIJ:"4L&/O9WYJ\mHO%;n
%*Jm3``dU0=\gF2k71o^eC>Hn?FLcPpia?N[\nVIr3QP;hnaH]6ERa]f7^EDFZR!)k6Bu"V-(j<c^*TNu=F;fu'./f:HBMn&;MMdV
%pAsUI\f9I!<\QR"Ydod^72<jb>G2+E5jLBBY9N0M'K1j'Y"U4d*9ubV;2M!D>>>T#LR`JIo6PrpU,t/-i4Ck/#PP0[_4p(n!h!No
%7[_"#]g:p)m`KA8N<2S"IQ!,,[o&Y?VCL#J3&F#qbph10]INDGG?5WJ0X@SgYQKI`b$4?t@OO$7&_\%t0\7]rrX/AD6c0^L&P?O<
%0ihfM)X_JLlkpf'a.\[k0T<$o,9ZT;M8gp[>`$s,2[ib*RpOe'_%dh(A?J/ZIN22\cEQZJE44/gesb<E(p`Sba>+":4j?FR&23To
%OQ]i"N?XVF?4AS0f(KJP)fS+ib^lRnH2:oKIdq,h7dF(=>e'E*"O&`gK#q,tjchpQ46;t+#$Pn55^g,`2d^nqoPjA/,l4XK?PiT4
%""LkDT:D@qP,:SSs&T8&/G/VF%X.nG'P1-f%c]"F,a:,2cT7UKjLO,lXr??SPK9/U7scp'[i+"YN/F/@;r,OR*Oa)^LCbc8,qrV)
%@$Gg^ag<pa#\cq$_.UnjD'XO;S'\E#OM;5BWZJU_Ca%(nfE#ZRI0$3ZPr0J,)qBh')PK4N)Q8SC%;o1IMO:J7i-#snqVYY/g)]7.
%@kd0-Xf-iIrHjBSA)2=o[m)\M^bcQHp53?)-9r%lP1I;ZntOf<$[s>g6J@><+iP7$UGF0p0K4aeXc45^Vo7?rn[K@Y#[9Q5l^+$"
%$VJL=A]%V;np?8"$"Ng<A@.55\3ngo)kePsFBlRT"ulWA&7`%_OBS\A]>Uhn\'r@f'Q`]qW1N%.k&HC&P@D!W90]:=jP!%Bl#fs_
%W&+2#[-@if18j3fXkRUq*,:qA"g^cGdd@jFjVl\9iT4:5)Y5G>jhZ`,aK)u1;)-2TD!eH_@Tmgp%q5noP+;@Ohd>/FrY!+lpV@7:
%oq0nF?A=Q5]L0fse!7@%6th>peTWU-pNpfgaW#e""5:7Sj4pm*MfcRP.nI#RMnXU]7S-7(P!'-q=YIqDWegeiM]#YZSdJSQZ;]O!
%$qsY.jh]2h;@E-4at&b*UC!fUm?G_gcH%8@4th/C:cf#@Ri#t.W@S\FP+TUl8F@?EC?j6b;&k+8qnZ>(mUP"s-[];O+S<Nnno1rS
%^%L2aMl=P<N>0fn/a_B7[PWru!A:TJQ,ePh3/!#EnK;<2]YF.f%E,Nik#3LJ&0C`9O5*.2&*OFp!'$<7o/>d6)4^Q];P3_]>4?@Y
%EIfBaPj?,^,t(WU[%Kme;)6K$a#pcJBC;tqBclEm/`B:",'hj<Kd+be=[)@J1luS8dGER(2?K1AOa.bb\nJOO?8G$H=4As$[&[7i
%gE1Qq5,gJfWnE`gCB]EMUYiXfQK?X<MLYjLefVuS[Ms*helEKGMMP"dOi:p5KOsOc7690"mU-k'A6G3Wc5[*O]Bmf$e8mK3-8VAu
%&0hem#3E#23I=gq!nf^U#2+e/]@e,o>'&KW*ibn8^TUaJ=P1')F/3[Rd+H"M'IqkM`VXEDFC\hB+3"--Ico\BcN1cj<29=*mLL8e
%mcI#nql6#CgqQ;T`tduO[u'gd9e+r]*3s'',V0-OoJcknI2Ft?#!e1bYWBI`2,o#%'-T*sO3G^]<'tC,@7ZNSL>)X/LA3@5Gm\[a
%$XO^h5apoALLN8V)5KEh1rHsP)<R2phu`?p)2^3O3LFX6Jp1NplG`%f+mYeEP]tD-a<B"'/,'kVXh;7anuGMIb\((6-i_[K&>Sf&
%&Ypi.Q^q`6VWlsIIdSICNK)Fc,U^1CY\7.A6,,:\Lah`skQE0]*XoKnjRO>RBr4Nlc!'WE]8Q*T9")O!?>7a;O]^/d\W`s:)If(P
%g<.tL?*:Ya/+UU.*NsTd4#a8]N[u+^CO0r?Cf6'h<:+Bk<1V7$cS*N?dgkWK[]6KcCe%Hr?NZSZGbATnHN<SYdje[lO9`tkMr57u
%%KQC4=^<^+S"Q$G)6&bu^V+^QD<$AFn30,:K/X"IEA>AiOOQ$?;P6;%#"CLR'oF4q!Fi*klk]Ekj``='N?gQNA/ITPD^iq`S9oNg
%L\Fmk1-;JsbAVjlZR>^>%gnGg%G;"U(RHdpAYTD[WL**ujF3\B7Ws3lN+$e>9EoL4?%gasf\hGLVeq2X2$r4DN^8/UW&CU]oG^@m
%hM*mh;i(X"*<H=uSZ9\uLKnJX^lFMSNki`h`WtET.&f85$?jaX6W48uQH4+l).=[dYV%=r/HkXUQLn-,QQ/8G-"0F0Q2.?a`]^:#
%^"oG'.&in$fH_V'M=aar95p];'qDU:/@hNJ!2;p0'N5Pf9E8_+.UN_rCRuknWZ%0cUR'E=lEJ&Y^gBT(SG>0*0J<$r,[,"H,HC1K
%<$[9>8&e'9^=E\lRW+Xm-]oKp$A^D"0%-u?-]<^*P\N(/fq^8s_^:Z0^h+7:P@oVL7#>%]l2EM;i=qt`7J=s$:JG/Y\/.;+g6_6W
%aCCQHa-q\IdV,;`I'#2h#f`<OU)2*M*HKnUl=FMc-ss9mE"_IZY:#thnE*J&L`1ll=8ZTd-lC*%U5G*RQSeioUlOK$XY9`V;J2mI
%H25aaMcH*WHTQi<iIt4Y4Fu@O>mJY`JKue/I)[5#U4bT@6jNTOJQ$d`R^4>F[Om:@7fcD#m*d.K<Y$@2;MePGq5@*i#PA<0D!-_Z
%a+tZh;FMGKf!mja*XtC0*DL>*!nZC79.T/04<(p`iq3r?!W3)Q#m6h;K.JeHX_.Y@gm$mH$S<(FCf<?N'h2s0BDF#gbjlDQ&.Lef
%(TaXjjopH>e1>En+q)g5?Keh0Tm,@R;mMrSq[uX@/?d'nMDJ`r>jU$H^B\k*U?imkB=OSI_s"gYi9t?&ipTFj<lZP+5CZ2_e<jVq
%p[`U-"'^"\&s&5TU>-`embV*!N1@\rPU;M^V>.jBZIMF)LJ^D0_Xbi)YZju&jAONaPkF[=ah"\rSSe5./,J6o,OH5NEu)f!Z*Vuk
%M!2tcHXVaKYC8[gO#0X;\JcJ*NFYD(kB*iRTLD0lRO=D!K5`Li$n6^9O;`75NNLR=mV$sQ^T(JfV>E!tM@@6.cjje:E$ua1IU9GQ
%SFT\&%7Y2lq,`lB[$Icr%TZrUKbCLML9q2Uj5JRLDOGr2DjNe@oIo-_j0HOI@bdJ==B[O*gQ(03o^C!0X'_&EP>1<,86)jkA"EBq
%oMc_RE>[(2_'H@doWNrVE2XW;.8XKhF&KP;7:IIO*m2LFCk#I(q>p;Ik.a`\mp`KkB%tbYo;>TiFh$,B6R_kF@,b-=6tm(d%*h$s
%_%<KP`WVN#?6KBj>?$t_]P2*Qj[^lJPLZMj;<YV3Pa,&$TZu7'DKXi?$lX*Y=!Mf<V3U#t9&d(l5c8q,;@ILfH#)lEJuun<<*r*Q
%Lla[#NV(eQB6EIXE"P(\dTAhA.1<22ciT3b?o\94QF<jKX1,jtT2.(W`[44e;#HMAVmEGof8Y,.n"#/Z3kM!-hLFR7m6\Y1MQH'e
%i.@YAY;*d$Dn;X#=h@S$7APCQ2<@T)UN-JSofoW1UR7#/r2Z]<55t39G.sF#afCKol.=[Zc#k%3GWrgSrfho:<H/DckK%T?8],C]
%Y8)!LT1?6CZVkGKlebpF&,ST,*P,&PYAeR(dWL=/XZPTXMack7L32q:\gcHFdCY1%$YaE9g:a?++UMUUgD-4)f5-&nZ3c4SAiS4?
%D*k>X"P"0?-D:jL/4-FA"CJJ@@G;t_>8Ep5=p.p5#_'r@paqE.\TZ:7@<[XV4BmJOMstNp*n);Aj+k+Io@U*.qS.*mpNHIO1-7YD
%"39lMQ]q0MnX$o)]R4]Z+9+D_)IHim\&gl1Vk_GgA:?>*9oeA.VuJKg7EZ(!O5Km.qo]fU"#nkM>l~>
%AI9_PrivateDataEnd
